Useless nonterminals

   modifiers


Terminals which are not used

   LEFT_SHIFT


Useless rules

  693 modifiers: modifier
  694          | modifiers modifier


Rules never reduced

   32 non_nullable_value_type: simple_type

  377 overloadable_binary_operator: '+'
  378                             | '-'

  404 static_constructor_modifiers: modifiers_opt STATIC

  647 specific_catch_clausesopt: /* empty */
  648                          | specific_catch_clauses


State 0 conflicts: 1 shift/reduce
State 4 conflicts: 1 shift/reduce
State 15 conflicts: 1 shift/reduce
State 24 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 150 conflicts: 1 reduce/reduce
State 154 conflicts: 1 reduce/reduce
State 167 conflicts: 1 shift/reduce
State 206 conflicts: 2 shift/reduce
State 279 conflicts: 1 shift/reduce
State 319 conflicts: 1 shift/reduce
State 329 conflicts: 1 shift/reduce
State 333 conflicts: 1 shift/reduce
State 393 conflicts: 1 shift/reduce
State 410 conflicts: 2 reduce/reduce
State 417 conflicts: 3 reduce/reduce
State 420 conflicts: 1 shift/reduce
State 428 conflicts: 1 shift/reduce
State 453 conflicts: 1 shift/reduce
State 602 conflicts: 1 shift/reduce
State 618 conflicts: 2 reduce/reduce
State 670 conflicts: 1 shift/reduce
State 753 conflicts: 16 shift/reduce
State 785 conflicts: 16 shift/reduce
State 796 conflicts: 1 shift/reduce
State 865 conflicts: 1 reduce/reduce
State 894 conflicts: 1 shift/reduce
State 910 conflicts: 1 shift/reduce
State 916 conflicts: 1 shift/reduce
State 961 conflicts: 1 reduce/reduce
State 962 conflicts: 1 reduce/reduce


Grammar

    0 $accept: compilation_unit $end

    1 compilation_unit: extern_alias_directivesopt using_directivesopt attributesopt namespace_member_declarationsopt
    2                 | error

    3 namespace_name: namespace_or_type_name

    4 type_name: namespace_or_type_name

    5 namespace_or_type_name: IDENTIFIER type_argument_listopt
    6                       | qualified_alias_member
    7                       | namespace_or_type_name '.' IDENTIFIER type_argument_listopt

    8 type: type_name
    9     | value_type
   10     | reference_type

   11 value_type: struct_type

   12 struct_type: simple_type
   13            | nullable_type

   14 simple_type: numeric_type
   15            | BOOL

   16 numeric_type: integral_type
   17             | floating_point_type
   18             | DECIMAL

   19 integral_type: SBYTE
   20              | BYTE
   21              | SHORT
   22              | USHORT
   23              | INT
   24              | UINT
   25              | LONG
   26              | ULONG
   27              | CHAR

   28 floating_point_type: FLOAT
   29                    | DOUBLE

   30 nullable_type: non_nullable_value_type '?'

   31 non_nullable_value_type: type_name
   32                        | simple_type

   33 reference_type: class_type
   34               | array_type

   35 class_type: type_name OBJECT
   36           | STRING

   37 variable_reference: expression

   38 argument_list: argument
   39              | argument_list ',' argument

   40 argument: expression
   41         | REF variable_reference
   42         | OUT variable_reference

   43 primary_expression: array_creation_expression
   44                   | primary_no_array_creation_expression

   45 primary_no_array_creation_expression: literal
   46                                     | simple_name
   47                                     | parenthesized_expression
   48                                     | member_access
   49                                     | invocation_expression
   50                                     | element_access
   51                                     | this_access
   52                                     | base_access
   53                                     | post_increment_expression
   54                                     | post_decrement_expression
   55                                     | object_creation_expression
   56                                     | typeof_expression
   57                                     | checked_expression
   58                                     | unchecked_expression
   59                                     | default_value_expression
   60                                     | anonymous_method_expression

   61 simple_name: IDENTIFIER type_argument_listopt

   62 parenthesized_expression: '(' expression ')'

   63 member_access: primary_expression '.' IDENTIFIER type_argument_listopt
   64              | predefined_type '.' IDENTIFIER type_argument_listopt
   65              | qualified_alias_member '.' IDENTIFIER type_argument_listopt

   66 predefined_type: BOOL
   67                | DECIMAL
   68                | DOUBLE
   69                | FLOAT
   70                | OBJECT
   71                | STRING
   72                | integral_type

   73 invocation_expression: primary_expression '(' argument_listopt ')'

   74 element_access: primary_no_array_creation_expression '[' expression_list ']'

   75 expression_list: expression
   76                | expression_list ',' expression

   77 this_access: THIS

   78 base_access: BASE '.' IDENTIFIER type_argument_listopt
   79            | BASE '[' expression_list ']'

   80 post_increment_expression: primary_expression PLUS_PLUS

   81 post_decrement_expression: primary_expression MINUS_MINUS

   82 object_creation_expression: NEW type '(' argument_listopt ')'

   83 array_creation_expression: NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | NEW array_type array_initializer

   85 typeof_expression: TYPEOF '(' type ')'
   86                  | TYPEOF '(' unbound_type_name ')'
   87                  | TYPEOF '(' VOID ')'

   88 unbound_type_name: IDENTIFIER generic_dimension_specifieropt
   89                  | IDENTIFIER SEMI_SEMI IDENTIFIER generic_dimension_specifieropt
   90                  | unbound_type_name '.' IDENTIFIER generic_dimension_specifieropt

   91 generic_dimension_specifier: '<' commasopt '>'

   92 commas: ','
   93       | commas ','

   94 checked_expression: CHECKED '(' expression ')'

   95 unchecked_expression: UNCHECKED '(' expression ')'

   96 default_value_expression: DEFAULT '(' type ')'

   97 anonymous_method_expression: DELEGATE anonymous_method_signatureopt block

   98 anonymous_method_signature: '(' anonymous_method_parameter_listopt ')'

   99 anonymous_method_parameter_list: anonymous_method_parameter
  100                                | anonymous_method_parameter_list ',' anonymous_method_parameter

  101 anonymous_method_parameter: parameter_modifieropt type IDENTIFIER

  102 unary_expression: primary_expression
  103                 | '+' unary_expression
  104                 | '-' unary_expression
  105                 | '!' unary_expression
  106                 | '~' unary_expression
  107                 | pre_increment_expression
  108                 | pre_decrement_expression
  109                 | cast_expression

  110 pre_increment_expression: PLUS_PLUS unary_expression

  111 pre_decrement_expression: MINUS_MINUS unary_expression

  112 cast_expression: '(' type ')' unary_expression

  113 multiplicative_expression: unary_expression
  114                          | multiplicative_expression '*' unary_expression
  115                          | multiplicative_expression '/' unary_expression
  116                          | multiplicative_expression '%' unary_expression

  117 additive_expression: multiplicative_expression
  118                    | additive_expression '+' multiplicative_expression
  119                    | additive_expression '-' multiplicative_expression

  120 shift_expression: additive_expression
  121                 | shift_expression LT_LT additive_expression
  122                 | shift_expression RIGHT_SHIFT additive_expression

  123 relational_expression: shift_expression
  124                      | relational_expression '<' shift_expression
  125                      | relational_expression '>' shift_expression
  126                      | relational_expression LE shift_expression
  127                      | relational_expression GE shift_expression
  128                      | relational_expression IS type
  129                      | relational_expression AS type

  130 equality_expression: relational_expression
  131                    | equality_expression EQ_EQ relational_expression
  132                    | equality_expression NE relational_expression

  133 and_expression: equality_expression
  134               | and_expression '&' equality_expression

  135 exclusive_or_expression: and_expression
  136                        | exclusive_or_expression '^' and_expression

  137 inclusive_or_expression: exclusive_or_expression
  138                        | inclusive_or_expression '|' exclusive_or_expression

  139 conditional_and_expression: inclusive_or_expression
  140                           | conditional_and_expression AMP_AMP inclusive_or_expression

  141 conditional_or_expression: conditional_and_expression
  142                          | conditional_or_expression BAR_BAR conditional_and_expression

  143 null_coalescing_expression: conditional_or_expression
  144                           | conditional_or_expression QM_QM null_coalescing_expression

  145 conditional_expression: null_coalescing_expression
  146                       | null_coalescing_expression '?' expression ':' expression

  147 assignment: unary_expression assignment_operator expression

  148 assignment_operator: '='
  149                    | PLUS_EQ
  150                    | MINUS_EQ
  151                    | STAR_EQ
  152                    | SLASH_EQ
  153                    | PERCENT_EQ
  154                    | AMP_EQ
  155                    | BAR_EQ
  156                    | CARET_EQ
  157                    | LT_LT_EQ
  158                    | RIGHT_SHIFT_ASSIGNMENT

  159 expression: conditional_expression
  160           | assignment

  161 constant_expression: expression

  162 boolean_expression: expression

  163 statement: labeled_statement
  164          | declaration_statement
  165          | embedded_statement

  166 embedded_statement: block
  167                   | empty_statement
  168                   | expression_statement
  169                   | selection_statement
  170                   | iteration_statement
  171                   | jump_statement
  172                   | try_statement
  173                   | checked_statement
  174                   | unchecked_statement
  175                   | lock_statement
  176                   | using_statement
  177                   | yield_statement

  178 block: '{' statement_listopt '}'

  179 statement_list: statement
  180               | statement_list statement

  181 empty_statement: ';'

  182 labeled_statement: IDENTIFIER ':' statement

  183 declaration_statement: local_variable_declaration ';'
  184                      | local_constant_declaration ';'

  185 local_variable_declaration: type local_variable_declarators

  186 local_variable_declarators: local_variable_declarator
  187                           | local_variable_declarators ',' local_variable_declarator

  188 local_variable_declarator: IDENTIFIER
  189                          | IDENTIFIER '=' local_variable_initializer

  190 local_variable_initializer: expression
  191                           | array_initializer

  192 local_constant_declaration: CONST type constant_declarators_loc

  193 constant_declarators_loc: constant_declarator_loc
  194                         | constant_declarators_loc ',' constant_declarator_loc

  195 constant_declarator_loc: IDENTIFIER '=' constant_expression

  196 expression_statement: statement_expression ';'

  197 statement_expression: invocation_expression
  198                     | object_creation_expression
  199                     | assignment
  200                     | post_increment_expression
  201                     | post_decrement_expression
  202                     | pre_increment_expression
  203                     | pre_decrement_expression

  204 selection_statement: if_statement
  205                    | switch_statement

  206 if_statement: IF '(' boolean_expression ')' embedded_statement
  207             | IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement

  208 switch_statement: SWITCH '(' expression ')' switch_block

  209 switch_block: '{' switch_sectionsopt '}'

  210 switch_sections: switch_section
  211                | switch_sections switch_section

  212 switch_section: switch_labels statement_list

  213 switch_labels: switch_label
  214              | switch_labels switch_label

  215 switch_label: CASE constant_expression ':'
  216             | DEFAULT ':'

  217 iteration_statement: while_statement
  218                    | do_statement
  219                    | for_statement
  220                    | foreach_statement

  221 while_statement: WHILE '(' boolean_expression ')' embedded_statement

  222 do_statement: DO embedded_statement WHILE '(' boolean_expression ')' ';'

  223 for_statement: FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement

  224 for_initializer: local_variable_declaration
  225                | statement_expression_list

  226 for_condition: boolean_expression

  227 for_iterator: statement_expression_list

  228 statement_expression_list: statement_expression
  229                          | statement_expression_list ',' statement_expression

  230 foreach_statement: FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement

  231 jump_statement: break_statement
  232               | continue_statement
  233               | goto_statement
  234               | return_statement
  235               | throw_statement

  236 break_statement: BREAK ';'

  237 continue_statement: CONTINUE ';'

  238 goto_statement: GOTO IDENTIFIER ';'
  239               | GOTO CASE constant_expression ';'
  240               | GOTO DEFAULT ';'

  241 return_statement: RETURN expressionopt ';'

  242 throw_statement: THROW expressionopt ';'

  243 try_statement: TRY block catch_clauses
  244              | TRY block catch_clausesopt finally_clause

  245 catch_clauses: specific_catch_clauses
  246              | specific_catch_clausesopt general_catch_clause

  247 specific_catch_clauses: specific_catch_clause
  248                       | specific_catch_clauses specific_catch_clause

  249 specific_catch_clause: CATCH '(' class_type identifieropt ')' block

  250 general_catch_clause: CATCH block

  251 finally_clause: FINALLY block

  252 checked_statement: CHECKED block

  253 unchecked_statement: UNCHECKED block

  254 lock_statement: LOCK '(' expression ')' embedded_statement

  255 using_statement: USING '(' resource_acquisition ')' embedded_statement

  256 resource_acquisition: local_variable_declaration
  257                     | expression

  258 yield_statement: YIELD RETURN expression ';'
  259                | YIELD BREAK ';'

  260 namespace_declaration: NAMESPACE qualified_identifier namespace_body SemicolonOpt

  261 qualified_identifier: IDENTIFIER
  262                     | qualified_identifier '.' IDENTIFIER

  263 namespace_body: '{' extern_alias_directivesopt using_directivesopt namespace_member_declarationsopt '}'

  264 extern_alias_directives: extern_alias_directive
  265                        | extern_alias_directives extern_alias_directive

  266 extern_alias_directive: EXTERN ALIAS IDENTIFIER ';'

  267 using_directives: using_directive
  268                 | using_directives using_directive

  269 using_directive: using_alias_directive
  270                | using_namespace_directive

  271 using_alias_directive: USING IDENTIFIER '=' namespace_or_type_name ';'

  272 using_namespace_directive: USING namespace_name ';'

  273 namespace_member_declarations: namespace_member_declaration
  274                              | namespace_member_declarations namespace_member_declaration

  275 namespace_member_declaration: namespace_declaration
  276                             | type_declaration

  277 type_declaration: class_declaration
  278                 | struct_declaration
  279                 | interface_declaration
  280                 | enum_declaration
  281                 | delegate_declaration

  282 qualified_alias_member: IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt

  283 modifiers_opt: /* empty */
  284              | modifiers_opt modifier

  285 modifier: NEW
  286         | PARTIAL
  287         | PUBLIC
  288         | PROTECTED
  289         | INTERNAL
  290         | PRIVATE
  291         | STATIC
  292         | VIRTUAL
  293         | SEALED
  294         | OVERRIDE
  295         | ABSTRACT
  296         | EXTERN

  297 class_declaration: attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt

  298 class_base: type_name_list

  299 type_name_list: ':' type_name
  300               | type_name_list ',' type_name

  301 class_body: '{' class_member_declarationsopt '}'

  302 class_member_declarations: class_member_declaration
  303                          | class_member_declarations class_member_declaration

  304 class_member_declaration: constant_declaration
  305                         | field_declaration
  306                         | method_declaration
  307                         | property_declaration
  308                         | event_declaration
  309                         | indexer_declaration
  310                         | operator_declaration
  311                         | constructor_declaration
  312                         | finalizer_declaration
  313                         | static_constructor_declaration
  314                         | type_declaration

  315 constant_declaration: attributesopt modifiers_opt CONST type constant_declarators ';'

  316 constant_declarators: constant_declarator
  317                     | constant_declarators ',' constant_declarator

  318 constant_declarator: IDENTIFIER '=' constant_expression

  319 field_declaration: attributesopt modifiers_opt type variable_declarators ';'

  320 variable_declarators: variable_declarator
  321                     | variable_declarators ',' variable_declarator

  322 variable_declarator: IDENTIFIER
  323                    | IDENTIFIER '=' variable_initializer

  324 variable_initializer: expression
  325                     | array_initializer

  326 method_declaration: method_header method_body

  327 method_header: attributesopt modifiers_opt type member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  328              | attributesopt modifiers_opt VOID member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt

  329 member_name: IDENTIFIER
  330            | type_name '.' IDENTIFIER

  331 method_body: block
  332            | ';'

  333 formal_parameter_list: fixed_parameters
  334                      | fixed_parameters ',' parameter_array
  335                      | parameter_array

  336 fixed_parameters: fixed_parameter
  337                 | fixed_parameters ',' fixed_parameter

  338 fixed_parameter: attributesopt parameter_modifieropt type IDENTIFIER

  339 parameter_modifier: REF
  340                   | OUT

  341 parameter_array: attributesopt PARAMS array_type IDENTIFIER

  342 property_declaration: attributesopt modifiers_opt type member_name '{' accessor_declarations '}'

  343 accessor_declarations: get_accessor_declaration set_accessor_declarationopt
  344                      | set_accessor_declaration get_accessor_declarationopt

  345 get_accessor_declaration: attributesopt accessor_modifieropt GET accessor_body

  346 set_accessor_declaration: attributesopt accessor_modifieropt SET accessor_body

  347 accessor_modifier: PROTECTED
  348                  | INTERNAL
  349                  | PRIVATE
  350                  | PROTECTED INTERNAL
  351                  | INTERNAL PROTECTED

  352 accessor_body: block
  353              | ';'

  354 event_declaration: attributesopt modifiers_opt EVENT type variable_declarators ';'
  355                  | attributesopt modifiers_opt EVENT type member_name '{' event_accessor_declarations '}'

  356 event_accessor_declarations: add_accessor_declaration remove_accessor_declaration
  357                            | remove_accessor_declaration add_accessor_declaration

  358 add_accessor_declaration: attributesopt ADD block

  359 remove_accessor_declaration: attributesopt REMOVE block

  360 indexer_declaration: attributesopt indexer_declarator '{' accessor_declarations '}'

  361 indexer_declarator: type THIS '[' formal_parameter_list ']'
  362                   | type type_name '.' THIS '[' formal_parameter_list ']'

  363 operator_declaration: attributesopt modifiers_opt operator_declarator operator_body

  364 operator_declarator: unary_operator_declarator
  365                    | binary_operator_declarator
  366                    | conversion_operator_declarator

  367 unary_operator_declarator: type OPERATOR overloadable_unary_operator '(' type IDENTIFIER ')'

  368 overloadable_unary_operator: '+'
  369                            | '-'
  370                            | '!'
  371                            | '~'
  372                            | PLUS_PLUS
  373                            | MINUS_MINUS
  374                            | TRUE
  375                            | FALSE

  376 binary_operator_declarator: type OPERATOR overloadable_binary_operator '(' type IDENTIFIER ',' type IDENTIFIER ')'

  377 overloadable_binary_operator: '+'
  378                             | '-'
  379                             | '*'
  380                             | '/'
  381                             | '%'
  382                             | '&'
  383                             | '|'
  384                             | '^'
  385                             | LT_LT
  386                             | RIGHT_SHIFT
  387                             | EQ_EQ
  388                             | NE
  389                             | '>'
  390                             | '<'
  391                             | GE
  392                             | LE

  393 conversion_operator_declarator: IMPLICIT OPERATOR type '(' type IDENTIFIER ')'
  394                               | EXPLICIT OPERATOR type '(' type IDENTIFIER ')'

  395 operator_body: block
  396              | ';'

  397 constructor_declaration: attributesopt modifiers_opt constructor_declarator constructor_body

  398 constructor_declarator: IDENTIFIER '(' formal_parameter_listopt ')' constructor_initializeropt

  399 constructor_initializer: ':' BASE '(' argument_listopt ')'
  400                        | ':' THIS '(' argument_listopt ')'

  401 constructor_body: block
  402                 | ';'

  403 static_constructor_declaration: attributesopt static_constructor_modifiers IDENTIFIER '(' ')' static_constructor_body

  404 static_constructor_modifiers: modifiers_opt STATIC
  405                             | STATIC modifiers_opt

  406 static_constructor_body: block
  407                        | ';'

  408 finalizer_declaration: attributesopt modifiers_opt '~' IDENTIFIER '(' ')' finalizer_body

  409 finalizer_body: block
  410               | ';'

  411 struct_declaration: attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt

  412 struct_interfaces: type_name_list

  413 struct_body: '{' struct_member_declarationsopt '}'

  414 struct_member_declarations: struct_member_declaration
  415                           | struct_member_declarations struct_member_declaration

  416 struct_member_declaration: constant_declaration
  417                          | field_declaration
  418                          | method_declaration
  419                          | property_declaration
  420                          | event_declaration
  421                          | indexer_declaration
  422                          | operator_declaration
  423                          | constructor_declaration
  424                          | static_constructor_declaration
  425                          | type_declaration

  426 array_type: non_array_type rank_specifiers

  427 non_array_type: value_type
  428               | class_type

  429 rank_specifiers: rank_specifier
  430                | rank_specifiers rank_specifier

  431 rank_specifier: '[' dim_separatorsopt ']'

  432 dim_separators: ','
  433               | dim_separators ','

  434 array_initializer: '{' variable_initializer_listopt '}'
  435                  | '{' variable_initializer_list ',' '}'

  436 variable_initializer_list: variable_initializer
  437                          | variable_initializer_list ',' variable_initializer

  438 interface_declaration: attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt

  439 interface_base: type_name_list

  440 interface_body: '{' interface_member_declarationsopt '}'

  441 interface_member_declarations: interface_member_declaration
  442                              | interface_member_declarations interface_member_declaration

  443 interface_member_declaration: interface_method_declaration
  444                             | interface_property_declaration
  445                             | interface_event_declaration
  446                             | interface_indexer_declaration

  447 interface_method_declaration: attributesopt newopt type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  448                             | attributesopt newopt VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

  449 interface_property_declaration: attributesopt newopt type IDENTIFIER '{' interface_accessors '}'

  450 interface_accessors: attributesopt GET ';'
  451                    | attributesopt SET ';'
  452                    | attributesopt GET ';' attributesopt SET ';'
  453                    | attributesopt SET ';' attributesopt GET ';'

  454 interface_event_declaration: attributesopt newopt EVENT type IDENTIFIER ';'

  455 interface_indexer_declaration: attributesopt newopt type THIS '[' formal_parameter_list ']' '{' interface_accessors '}'

  456 enum_declaration: attributesopt modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt

  457 enum_base: ':' integral_type

  458 enum_body: '{' enum_member_declarationsopt '}'
  459          | '{' enum_member_declarations ',' '}'

  460 enum_member_declarations: enum_member_declaration
  461                         | enum_member_declarations ',' enum_member_declaration

  462 enum_member_declaration: attributesopt IDENTIFIER
  463                        | attributesopt IDENTIFIER '=' constant_expression

  464 delegate_declaration: attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

  466 attributes: attribute_sections

  467 attribute_sections: attribute_section
  468                   | attribute_sections attribute_section

  469 attribute_section: '[' attribute_target_specifier attribute_list ']'
  470                  | '[' attribute_list ']'
  471                  | '[' attribute_target_specifier attribute_list ',' ']'
  472                  | '[' attribute_list ',' ']'

  473 attribute_target_specifier: attribute_target ':'

  474 attribute_target: IDENTIFIER
  475                 | keyword

  476 attribute_list: attribute
  477               | attribute_list ',' attribute

  478 attribute: attribute_name attribute_argumentsopt

  479 attribute_name: type_name

  480 attribute_arguments: '(' positional_argument_listopt ')'
  481                    | '(' positional_argument_list ',' named_argument_list ')'
  482                    | '(' named_argument_list ')'

  483 positional_argument_list: positional_argument
  484                         | positional_argument_list ',' positional_argument

  485 positional_argument: attribute_argument_expression

  486 named_argument_list: named_argument
  487                    | named_argument_list ',' named_argument

  488 named_argument: IDENTIFIER '=' attribute_argument_expression

  489 attribute_argument_expression: expression

  490 type_parameter_list: '<' type_parameters '>'

  491 type_parameters: attributesopt IDENTIFIER
  492                | type_parameters ',' attributesopt IDENTIFIER

  493 type_argument_list: '<' type_arguments '>'

  494 type_arguments: type_argument
  495               | type_arguments ',' type_argument

  496 type_argument: type

  497 type_parameter_constraints_clauses: type_parameter_constraints_clause
  498                                   | type_parameter_constraints_clauses type_parameter_constraints_clause

  499 type_parameter_constraints_clause: WHERE IDENTIFIER ':' type_parameter_constraints

  500 type_parameter_constraints: primary_constraint
  501                           | secondary_constraints
  502                           | constructor_constraint
  503                           | primary_constraint ',' secondary_constraints
  504                           | primary_constraint ',' constructor_constraint
  505                           | secondary_constraints ',' constructor_constraint
  506                           | primary_constraint ',' secondary_constraints ',' constructor_constraint

  507 primary_constraint: class_type
  508                   | CLASS
  509                   | STRUCT

  510 secondary_constraints: type_name
  511                      | secondary_constraints ',' type_name

  512 constructor_constraint: NEW '(' ')'

  513 keyword: ABSTRACT
  514        | AS
  515        | BASE
  516        | BOOL
  517        | BREAK
  518        | CASE
  519        | CATCH
  520        | CHECKED
  521        | CLASS
  522        | CONST
  523        | CONTINUE
  524        | DECIMAL
  525        | DEFAULT
  526        | DELEGATE
  527        | DO
  528        | DOUBLE
  529        | ELSE
  530        | ENUM
  531        | EVENT
  532        | EXPLICIT
  533        | EXTERN
  534        | FALSE
  535        | FINALLY
  536        | FIXED
  537        | FLOAT
  538        | FOR
  539        | FOREACH
  540        | GOTO
  541        | IF
  542        | IMPLICIT
  543        | IN
  544        | INTERFACE
  545        | INTERNAL
  546        | IS
  547        | LOCK
  548        | NAMESPACE
  549        | NEW
  550        | NULL
  551        | OBJECT
  552        | OPERATOR
  553        | OUT
  554        | OVERRIDE
  555        | PARAMS
  556        | PRIVATE
  557        | PROTECTED
  558        | PUBLIC
  559        | READONLY
  560        | REF
  561        | RETURN
  562        | SEALED
  563        | SIZEOF
  564        | STACKALLOC
  565        | STATIC
  566        | STRING
  567        | STRUCT
  568        | SWITCH
  569        | THIS
  570        | THROW
  571        | TRUE
  572        | TRY
  573        | TYPEOF
  574        | UNCHECKED
  575        | UNSAFE
  576        | USING
  577        | VIRTUAL
  578        | VOID
  579        | VOLATILE
  580        | WHILE
  581        | YIELD
  582        | ALIAS
  583        | PARTIAL
  584        | ADD
  585        | REMOVE
  586        | GET
  587        | SET
  588        | WHERE
  589        | integral_type

  590 literal: boolean_literal
  591        | integer_literal
  592        | character_literal
  593        | string_literal
  594        | NULL

  595 boolean_literal: TRUE
  596                | FALSE

  597 integer_literal: decimal_integer_literal
  598                | hexadecimal_integer_literal

  599 decimal_integer_literal: DECIMAL_DIGITS
  600                        | DECIMAL_DIGITS_WITH_SUFFIX

  601 hexadecimal_integer_literal: HEX_DIGITS
  602                            | HEX_DIGITS_WITH_SUFFIX

  603 character_literal: SINGLE_CHARACTER
  604                  | SIMPLE_ESCAPE_SEQUENCE
  605                  | HEXADECIMAL_ESCAPE_SEQUENCE

  606 string_literal: REGULAR_STRING_LITERAL

  607 extern_alias_directivesopt: /* empty */
  608                           | extern_alias_directives

  609 using_directivesopt: /* empty */
  610                    | using_directives

  611 namespace_member_declarationsopt: /* empty */
  612                                 | namespace_member_declarations

  613 type_argument_listopt: /* empty */
  614                      | type_argument_list

  615 dim_separatorsopt: /* empty */
  616                  | dim_separators

  617 argument_listopt: /* empty */
  618                 | argument_list

  619 rank_specifiersopt: /* empty */
  620                   | rank_specifiers

  621 array_initializeropt: /* empty */
  622                     | array_initializer

  623 generic_dimension_specifieropt: /* empty */
  624                               | generic_dimension_specifier

  625 commasopt: /* empty */
  626          | commas

  627 anonymous_method_signatureopt: /* empty */
  628                              | anonymous_method_signature

  629 anonymous_method_parameter_listopt: /* empty */
  630                                   | anonymous_method_parameter_list

  631 parameter_modifieropt: /* empty */
  632                      | parameter_modifier

  633 statement_listopt: /* empty */
  634                  | statement_list

  635 switch_sectionsopt: /* empty */
  636                   | switch_sections

  637 for_initializeropt: /* empty */
  638                   | for_initializer

  639 for_conditionopt: /* empty */
  640                 | for_condition

  641 for_iteratoropt: /* empty */
  642                | for_iterator

  643 expressionopt: /* empty */
  644              | expression

  645 catch_clausesopt: /* empty */
  646                 | catch_clauses

  647 specific_catch_clausesopt: /* empty */
  648                          | specific_catch_clauses

  649 identifieropt: /* empty */
  650              | IDENTIFIER

  651 attributesopt: /* empty */
  652              | attributes

  653 type_parameter_listopt: /* empty */
  654                       | type_parameter_list

  655 class_baseopt: /* empty */
  656              | class_base

  657 type_parameter_constraints_clausesopt: /* empty */
  658                                      | type_parameter_constraints_clauses

  659 class_member_declarationsopt: /* empty */
  660                             | class_member_declarations

  661 formal_parameter_listopt: /* empty */
  662                         | formal_parameter_list

  663 set_accessor_declarationopt: /* empty */
  664                            | set_accessor_declaration

  665 get_accessor_declarationopt: /* empty */
  666                            | get_accessor_declaration

  667 accessor_modifieropt: /* empty */
  668                     | accessor_modifier

  669 constructor_initializeropt: /* empty */
  670                           | constructor_initializer

  671 struct_interfacesopt: /* empty */
  672                     | struct_interfaces

  673 struct_member_declarationsopt: /* empty */
  674                              | struct_member_declarations

  675 variable_initializer_listopt: /* empty */
  676                             | variable_initializer_list

  677 interface_baseopt: /* empty */
  678                  | interface_base

  679 interface_member_declarationsopt: /* empty */
  680                                 | interface_member_declarations

  681 newopt: /* empty */
  682       | NEW

  683 enum_baseopt: /* empty */
  684             | enum_base

  685 enum_member_declarationsopt: /* empty */
  686                            | enum_member_declarations

  687 attribute_argumentsopt: /* empty */
  688                       | attribute_arguments

  689 positional_argument_listopt: /* empty */
  690                            | positional_argument_list

  691 SemicolonOpt: /* empty */
  692             | ';'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 105 370
'%' (37) 116 381
'&' (38) 134 382
'(' (40) 62 73 82 85 86 87 94 95 96 98 112 206 207 208 221 222 223
    230 249 254 255 327 328 367 376 393 394 398 399 400 403 408 447
    448 464 465 480 481 482 512
')' (41) 62 73 82 85 86 87 94 95 96 98 112 206 207 208 221 222 223
    230 249 254 255 327 328 367 376 393 394 398 399 400 403 408 447
    448 464 465 480 481 482 512
'*' (42) 114 379
'+' (43) 103 118 368 377
',' (44) 39 76 92 93 100 187 194 229 300 317 321 334 337 376 432 433
    435 437 459 461 471 472 477 481 484 487 492 495 503 504 505 506
    511
'-' (45) 104 119 369 378
'.' (46) 7 63 64 65 78 90 262 330 362
'/' (47) 115 380
':' (58) 146 182 215 216 299 399 400 457 473 499
';' (59) 181 183 184 196 222 223 236 237 238 239 240 241 242 258 259
    266 271 272 315 319 332 353 354 396 402 407 410 447 448 450 451
    452 453 454 464 465 692
'<' (60) 91 124 390 490 493
'=' (61) 148 189 195 271 318 323 463 488
'>' (62) 91 125 389 490 493
'?' (63) 30 146
'[' (91) 74 79 83 361 362 431 455 469 470 471 472
']' (93) 74 79 83 361 362 431 455 469 470 471 472
'^' (94) 136 384
'{' (123) 178 209 263 301 342 355 360 413 434 435 440 449 455 458 459
'|' (124) 138 383
'}' (125) 178 209 263 301 342 355 360 413 434 435 440 449 455 458 459
'~' (126) 106 371 408
error (256) 2
ABSTRACT (258) 295 513
BASE (259) 78 79 399 515
BOOL (260) 15 66 516
BREAK (261) 236 259 517
BYTE (262) 20
CASE (263) 215 239 518
CATCH (264) 249 250 519
CHAR (265) 27
CLASS (266) 297 508 521
CONST (267) 192 315 522
CONTINUE (268) 237 523
DECIMAL (269) 18 67 524
DEFAULT (270) 96 216 240 525
DELEGATE (271) 97 464 465 526
DO (272) 222 527
DOUBLE (273) 29 68 528
ELSE (274) 207 529
ENUM (275) 456 530
EVENT (276) 354 355 454 531
EXPLICIT (277) 394 532
EXTERN (278) 266 296 533
FALSE (279) 375 534 596
FINALLY (280) 251 535
FIXED (281) 536
FLOAT (282) 28 69 537
FOR (283) 223 538
FOREACH (284) 230 539
GOTO (285) 238 239 240 540
IF (286) 206 207 541
IMPLICIT (287) 393 542
IN (288) 230 543
INT (289) 23
INTERFACE (290) 438 544
INTERNAL (291) 289 348 350 351 545
LOCK (292) 254 547
LONG (293) 25
NAMESPACE (294) 260 548
NULL (295) 550 594
OBJECT (296) 35 70 551
OPERATOR (297) 367 376 393 394 552
OUT (298) 42 340 553
OVERRIDE (299) 294 554
PARAMS (300) 341 555
PRIVATE (301) 290 349 556
PROTECTED (302) 288 347 350 351 557
PUBLIC (303) 287 558
READONLY (304) 559
REF (305) 41 339 560
RETURN (306) 241 258 561
SBYTE (307) 19
SEALED (308) 293 562
SHORT (309) 21
SIZEOF (310) 563
STACKALLOC (311) 564
STATIC (312) 291 404 405 565
STRING (313) 36 71 566
STRUCT (314) 411 509 567
SWITCH (315) 208 568
THIS (316) 77 361 362 400 455 569
THROW (317) 242 570
TRUE (318) 374 571 595
TRY (319) 243 244 572
UINT (320) 24
ULONG (321) 26
UNSAFE (322) 575
USHORT (323) 22
USING (324) 255 271 272 576
VIRTUAL (325) 292 577
VOID (326) 87 328 448 465 578
VOLATILE (327) 579
WHILE (328) 221 222 580
YIELD (329) 258 259 581
ALIAS (330) 266 582
PARTIAL (331) 286 583
ADD (332) 358 584
REMOVE (333) 359 585
GET (334) 345 450 452 453 586
SET (335) 346 451 452 453 587
WHERE (336) 499 588
SEMI_SEMI (337) 89 282
LT_LT (338) 121 385
IDENTIFIER (339) 5 7 61 63 64 65 78 88 89 90 101 182 188 189 195 230
    238 261 262 266 271 282 297 318 322 323 329 330 338 341 367 376
    393 394 398 403 408 411 438 447 448 449 454 456 462 463 464 465
    474 488 491 492 499 650
UNCHECKED (340) 95 253 574
CHECKED (341) 94 252 520
TYPEOF (342) 85 86 87 573
NEW (343) 82 83 84 285 512 549 682
MINUS_MINUS (344) 81 111 373
PLUS_PLUS (345) 80 110 372
LEFT_SHIFT (346)
RIGHT_SHIFT (347) 122 386
AS (348) 129 514
IS (349) 128 546
GE (350) 127 391
LE (351) 126 392
NE (352) 132 388
EQ_EQ (353) 131 387
AMP_AMP (354) 140
BAR_BAR (355) 142
QM_QM (356) 144
BAR_EQ (357) 155
CARET_EQ (358) 156
AMP_EQ (359) 154
RIGHT_SHIFT_ASSIGNMENT (360) 158
LT_LT_EQ (361) 157
MINUS_EQ (362) 150
PLUS_EQ (363) 149
PERCENT_EQ (364) 153
SLASH_EQ (365) 152
STAR_EQ (366) 151
SINGLE_CHARACTER (367) 603
HEX_DIGITS_WITH_SUFFIX (368) 602
DECIMAL_DIGITS (369) 599
REGULAR_STRING_LITERAL (370) 606
SIMPLE_ESCAPE_SEQUENCE (371) 604
DECIMAL_DIGITS_WITH_SUFFIX (372) 600
HEX_DIGITS (373) 601
HEXADECIMAL_ESCAPE_SEQUENCE (374) 605


Nonterminals, with rules where they appear

$accept (144)
    on left: 0
compilation_unit (145)
    on left: 1 2, on right: 0
namespace_name (146)
    on left: 3, on right: 272
type_name (147)
    on left: 4, on right: 8 31 35 299 300 330 362 479 510 511
namespace_or_type_name (148)
    on left: 5 6 7, on right: 3 4 7 271
type (149)
    on left: 8 9 10, on right: 82 85 96 101 112 128 129 185 192 230
    315 319 327 338 342 354 355 361 362 367 376 393 394 447 449 454
    455 464 496
value_type (150)
    on left: 11, on right: 9 427
struct_type (151)
    on left: 12 13, on right: 11
simple_type (152)
    on left: 14 15, on right: 12 32
numeric_type (153)
    on left: 16 17 18, on right: 14
integral_type (154)
    on left: 19 20 21 22 23 24 25 26 27, on right: 16 72 457 589
floating_point_type (155)
    on left: 28 29, on right: 17
nullable_type (156)
    on left: 30, on right: 13
non_nullable_value_type (157)
    on left: 31 32, on right: 30
reference_type (158)
    on left: 33 34, on right: 10
class_type (159)
    on left: 35 36, on right: 33 249 428 507
variable_reference (160)
    on left: 37, on right: 41 42
argument_list (161)
    on left: 38 39, on right: 39 618
argument (162)
    on left: 40 41 42, on right: 38 39
primary_expression (163)
    on left: 43 44, on right: 63 73 80 81 102
primary_no_array_creation_expression (164)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60,
    on right: 44 74
simple_name (165)
    on left: 61, on right: 46
parenthesized_expression (166)
    on left: 62, on right: 47
member_access (167)
    on left: 63 64 65, on right: 48
predefined_type (168)
    on left: 66 67 68 69 70 71 72, on right: 64
invocation_expression (169)
    on left: 73, on right: 49 197
element_access (170)
    on left: 74, on right: 50
expression_list (171)
    on left: 75 76, on right: 74 76 79 83
this_access (172)
    on left: 77, on right: 51
base_access (173)
    on left: 78 79, on right: 52
post_increment_expression (174)
    on left: 80, on right: 53 200
post_decrement_expression (175)
    on left: 81, on right: 54 201
object_creation_expression (176)
    on left: 82, on right: 55 198
array_creation_expression (177)
    on left: 83 84, on right: 43
typeof_expression (178)
    on left: 85 86 87, on right: 56
unbound_type_name (179)
    on left: 88 89 90, on right: 86 90
generic_dimension_specifier (180)
    on left: 91, on right: 624
commas (181)
    on left: 92 93, on right: 93 626
checked_expression (182)
    on left: 94, on right: 57
unchecked_expression (183)
    on left: 95, on right: 58
default_value_expression (184)
    on left: 96, on right: 59
anonymous_method_expression (185)
    on left: 97, on right: 60
anonymous_method_signature (186)
    on left: 98, on right: 628
anonymous_method_parameter_list (187)
    on left: 99 100, on right: 100 630
anonymous_method_parameter (188)
    on left: 101, on right: 99 100
unary_expression (189)
    on left: 102 103 104 105 106 107 108 109, on right: 103 104 105
    106 110 111 112 113 114 115 116 147
pre_increment_expression (190)
    on left: 110, on right: 107 202
pre_decrement_expression (191)
    on left: 111, on right: 108 203
cast_expression (192)
    on left: 112, on right: 109
multiplicative_expression (193)
    on left: 113 114 115 116, on right: 114 115 116 117 118 119
additive_expression (194)
    on left: 117 118 119, on right: 118 119 120 121 122
shift_expression (195)
    on left: 120 121 122, on right: 121 122 123 124 125 126 127
relational_expression (196)
    on left: 123 124 125 126 127 128 129, on right: 124 125 126 127
    128 129 130 131 132
equality_expression (197)
    on left: 130 131 132, on right: 131 132 133 134
and_expression (198)
    on left: 133 134, on right: 134 135 136
exclusive_or_expression (199)
    on left: 135 136, on right: 136 137 138
inclusive_or_expression (200)
    on left: 137 138, on right: 138 139 140
conditional_and_expression (201)
    on left: 139 140, on right: 140 141 142
conditional_or_expression (202)
    on left: 141 142, on right: 142 143 144
null_coalescing_expression (203)
    on left: 143 144, on right: 144 145 146
conditional_expression (204)
    on left: 145 146, on right: 159
assignment (205)
    on left: 147, on right: 160 199
assignment_operator (206)
    on left: 148 149 150 151 152 153 154 155 156 157 158,
    on right: 147
expression (207)
    on left: 159 160, on right: 37 40 62 75 76 94 95 146 147 161 162
    190 208 230 254 257 258 324 489 644
constant_expression (208)
    on left: 161, on right: 195 215 239 318 463
boolean_expression (209)
    on left: 162, on right: 206 207 221 222 226
statement (210)
    on left: 163 164 165, on right: 179 180 182
embedded_statement (211)
    on left: 166 167 168 169 170 171 172 173 174 175 176 177,
    on right: 165 206 207 221 222 223 230 254 255
block (212)
    on left: 178, on right: 97 166 243 244 249 250 251 252 253 331
    352 358 359 395 401 406 409
statement_list (213)
    on left: 179 180, on right: 180 212 634
empty_statement (214)
    on left: 181, on right: 167
labeled_statement (215)
    on left: 182, on right: 163
declaration_statement (216)
    on left: 183 184, on right: 164
local_variable_declaration (217)
    on left: 185, on right: 183 224 256
local_variable_declarators (218)
    on left: 186 187, on right: 185 187
local_variable_declarator (219)
    on left: 188 189, on right: 186 187
local_variable_initializer (220)
    on left: 190 191, on right: 189
local_constant_declaration (221)
    on left: 192, on right: 184
constant_declarators_loc (222)
    on left: 193 194, on right: 192 194
constant_declarator_loc (223)
    on left: 195, on right: 193 194
expression_statement (224)
    on left: 196, on right: 168
statement_expression (225)
    on left: 197 198 199 200 201 202 203, on right: 196 228 229
selection_statement (226)
    on left: 204 205, on right: 169
if_statement (227)
    on left: 206 207, on right: 204
switch_statement (228)
    on left: 208, on right: 205
switch_block (229)
    on left: 209, on right: 208
switch_sections (230)
    on left: 210 211, on right: 211 636
switch_section (231)
    on left: 212, on right: 210 211
switch_labels (232)
    on left: 213 214, on right: 212 214
switch_label (233)
    on left: 215 216, on right: 213 214
iteration_statement (234)
    on left: 217 218 219 220, on right: 170
while_statement (235)
    on left: 221, on right: 217
do_statement (236)
    on left: 222, on right: 218
for_statement (237)
    on left: 223, on right: 219
for_initializer (238)
    on left: 224 225, on right: 638
for_condition (239)
    on left: 226, on right: 640
for_iterator (240)
    on left: 227, on right: 642
statement_expression_list (241)
    on left: 228 229, on right: 225 227 229
foreach_statement (242)
    on left: 230, on right: 220
jump_statement (243)
    on left: 231 232 233 234 235, on right: 171
break_statement (244)
    on left: 236, on right: 231
continue_statement (245)
    on left: 237, on right: 232
goto_statement (246)
    on left: 238 239 240, on right: 233
return_statement (247)
    on left: 241, on right: 234
throw_statement (248)
    on left: 242, on right: 235
try_statement (249)
    on left: 243 244, on right: 172
catch_clauses (250)
    on left: 245 246, on right: 243 646
specific_catch_clauses (251)
    on left: 247 248, on right: 245 248 648
specific_catch_clause (252)
    on left: 249, on right: 247 248
general_catch_clause (253)
    on left: 250, on right: 246
finally_clause (254)
    on left: 251, on right: 244
checked_statement (255)
    on left: 252, on right: 173
unchecked_statement (256)
    on left: 253, on right: 174
lock_statement (257)
    on left: 254, on right: 175
using_statement (258)
    on left: 255, on right: 176
resource_acquisition (259)
    on left: 256 257, on right: 255
yield_statement (260)
    on left: 258 259, on right: 177
namespace_declaration (261)
    on left: 260, on right: 275
qualified_identifier (262)
    on left: 261 262, on right: 260 262
namespace_body (263)
    on left: 263, on right: 260
extern_alias_directives (264)
    on left: 264 265, on right: 265 608
extern_alias_directive (265)
    on left: 266, on right: 264 265
using_directives (266)
    on left: 267 268, on right: 268 610
using_directive (267)
    on left: 269 270, on right: 267 268
using_alias_directive (268)
    on left: 271, on right: 269
using_namespace_directive (269)
    on left: 272, on right: 270
namespace_member_declarations (270)
    on left: 273 274, on right: 274 612
namespace_member_declaration (271)
    on left: 275 276, on right: 273 274
type_declaration (272)
    on left: 277 278 279 280 281, on right: 276 314 425
qualified_alias_member (273)
    on left: 282, on right: 6 65
modifiers_opt (274)
    on left: 283 284, on right: 284 297 315 319 327 328 342 354 355
    363 397 404 405 408 411 438 456 464 465
modifier (275)
    on left: 285 286 287 288 289 290 291 292 293 294 295 296,
    on right: 284
class_declaration (276)
    on left: 297, on right: 277
class_base (277)
    on left: 298, on right: 656
type_name_list (278)
    on left: 299 300, on right: 298 300 412 439
class_body (279)
    on left: 301, on right: 297
class_member_declarations (280)
    on left: 302 303, on right: 303 660
class_member_declaration (281)
    on left: 304 305 306 307 308 309 310 311 312 313 314,
    on right: 302 303
constant_declaration (282)
    on left: 315, on right: 304 416
constant_declarators (283)
    on left: 316 317, on right: 315 317
constant_declarator (284)
    on left: 318, on right: 316 317
field_declaration (285)
    on left: 319, on right: 305 417
variable_declarators (286)
    on left: 320 321, on right: 319 321 354
variable_declarator (287)
    on left: 322 323, on right: 320 321
variable_initializer (288)
    on left: 324 325, on right: 323 436 437
method_declaration (289)
    on left: 326, on right: 306 418
method_header (290)
    on left: 327 328, on right: 326
member_name (291)
    on left: 329 330, on right: 327 328 342 355
method_body (292)
    on left: 331 332, on right: 326
formal_parameter_list (293)
    on left: 333 334 335, on right: 361 362 455 662
fixed_parameters (294)
    on left: 336 337, on right: 333 334 337
fixed_parameter (295)
    on left: 338, on right: 336 337
parameter_modifier (296)
    on left: 339 340, on right: 632
parameter_array (297)
    on left: 341, on right: 334 335
property_declaration (298)
    on left: 342, on right: 307 419
accessor_declarations (299)
    on left: 343 344, on right: 342 360
get_accessor_declaration (300)
    on left: 345, on right: 343 666
set_accessor_declaration (301)
    on left: 346, on right: 344 664
accessor_modifier (302)
    on left: 347 348 349 350 351, on right: 668
accessor_body (303)
    on left: 352 353, on right: 345 346
event_declaration (304)
    on left: 354 355, on right: 308 420
event_accessor_declarations (305)
    on left: 356 357, on right: 355
add_accessor_declaration (306)
    on left: 358, on right: 356 357
remove_accessor_declaration (307)
    on left: 359, on right: 356 357
indexer_declaration (308)
    on left: 360, on right: 309 421
indexer_declarator (309)
    on left: 361 362, on right: 360
operator_declaration (310)
    on left: 363, on right: 310 422
operator_declarator (311)
    on left: 364 365 366, on right: 363
unary_operator_declarator (312)
    on left: 367, on right: 364
overloadable_unary_operator (313)
    on left: 368 369 370 371 372 373 374 375, on right: 367
binary_operator_declarator (314)
    on left: 376, on right: 365
overloadable_binary_operator (315)
    on left: 377 378 379 380 381 382 383 384 385 386 387 388 389 390
    391 392, on right: 376
conversion_operator_declarator (316)
    on left: 393 394, on right: 366
operator_body (317)
    on left: 395 396, on right: 363
constructor_declaration (318)
    on left: 397, on right: 311 423
constructor_declarator (319)
    on left: 398, on right: 397
constructor_initializer (320)
    on left: 399 400, on right: 670
constructor_body (321)
    on left: 401 402, on right: 397
static_constructor_declaration (322)
    on left: 403, on right: 313 424
static_constructor_modifiers (323)
    on left: 404 405, on right: 403
static_constructor_body (324)
    on left: 406 407, on right: 403
finalizer_declaration (325)
    on left: 408, on right: 312
finalizer_body (326)
    on left: 409 410, on right: 408
struct_declaration (327)
    on left: 411, on right: 278
struct_interfaces (328)
    on left: 412, on right: 672
struct_body (329)
    on left: 413, on right: 411
struct_member_declarations (330)
    on left: 414 415, on right: 415 674
struct_member_declaration (331)
    on left: 416 417 418 419 420 421 422 423 424 425,
    on right: 414 415
array_type (332)
    on left: 426, on right: 34 84 341
non_array_type (333)
    on left: 427 428, on right: 83 426
rank_specifiers (334)
    on left: 429 430, on right: 426 430 620
rank_specifier (335)
    on left: 431, on right: 429 430
dim_separators (336)
    on left: 432 433, on right: 433 616
array_initializer (337)
    on left: 434 435, on right: 84 191 325 622
variable_initializer_list (338)
    on left: 436 437, on right: 435 437 676
interface_declaration (339)
    on left: 438, on right: 279
interface_base (340)
    on left: 439, on right: 678
interface_body (341)
    on left: 440, on right: 438
interface_member_declarations (342)
    on left: 441 442, on right: 442 680
interface_member_declaration (343)
    on left: 443 444 445 446, on right: 441 442
interface_method_declaration (344)
    on left: 447 448, on right: 443
interface_property_declaration (345)
    on left: 449, on right: 444
interface_accessors (346)
    on left: 450 451 452 453, on right: 449 455
interface_event_declaration (347)
    on left: 454, on right: 445
interface_indexer_declaration (348)
    on left: 455, on right: 446
enum_declaration (349)
    on left: 456, on right: 280
enum_base (350)
    on left: 457, on right: 684
enum_body (351)
    on left: 458 459, on right: 456
enum_member_declarations (352)
    on left: 460 461, on right: 459 461 686
enum_member_declaration (353)
    on left: 462 463, on right: 460 461
delegate_declaration (354)
    on left: 464 465, on right: 281
attributes (355)
    on left: 466, on right: 652
attribute_sections (356)
    on left: 467 468, on right: 466 468
attribute_section (357)
    on left: 469 470 471 472, on right: 467 468
attribute_target_specifier (358)
    on left: 473, on right: 469 471
attribute_target (359)
    on left: 474 475, on right: 473
attribute_list (360)
    on left: 476 477, on right: 469 470 471 472 477
attribute (361)
    on left: 478, on right: 476 477
attribute_name (362)
    on left: 479, on right: 478
attribute_arguments (363)
    on left: 480 481 482, on right: 688
positional_argument_list (364)
    on left: 483 484, on right: 481 484 690
positional_argument (365)
    on left: 485, on right: 483 484
named_argument_list (366)
    on left: 486 487, on right: 481 482 487
named_argument (367)
    on left: 488, on right: 486 487
attribute_argument_expression (368)
    on left: 489, on right: 485 488
type_parameter_list (369)
    on left: 490, on right: 654
type_parameters (370)
    on left: 491 492, on right: 490 492
type_argument_list (371)
    on left: 493, on right: 614
type_arguments (372)
    on left: 494 495, on right: 493 495
type_argument (373)
    on left: 496, on right: 494 495
type_parameter_constraints_clauses (374)
    on left: 497 498, on right: 498 658
type_parameter_constraints_clause (375)
    on left: 499, on right: 497 498
type_parameter_constraints (376)
    on left: 500 501 502 503 504 505 506, on right: 499
primary_constraint (377)
    on left: 507 508 509, on right: 500 503 504 506
secondary_constraints (378)
    on left: 510 511, on right: 501 503 505 506 511
constructor_constraint (379)
    on left: 512, on right: 502 504 505 506
keyword (380)
    on left: 513 514 515 516 517 518 519 520 521 522 523 524 525 526
    527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542
    543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558
    559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574
    575 576 577 578 579 580 581 582 583 584 585 586 587 588 589,
    on right: 475
literal (381)
    on left: 590 591 592 593 594, on right: 45
boolean_literal (382)
    on left: 595 596, on right: 590
integer_literal (383)
    on left: 597 598, on right: 591
decimal_integer_literal (384)
    on left: 599 600, on right: 597
hexadecimal_integer_literal (385)
    on left: 601 602, on right: 598
character_literal (386)
    on left: 603 604 605, on right: 592
string_literal (387)
    on left: 606, on right: 593
extern_alias_directivesopt (388)
    on left: 607 608, on right: 1 263
using_directivesopt (389)
    on left: 609 610, on right: 1 263
namespace_member_declarationsopt (390)
    on left: 611 612, on right: 1 263
type_argument_listopt (391)
    on left: 613 614, on right: 5 7 61 63 64 65 78 282
dim_separatorsopt (392)
    on left: 615 616, on right: 431
argument_listopt (393)
    on left: 617 618, on right: 73 82 399 400
rank_specifiersopt (394)
    on left: 619 620, on right: 83
array_initializeropt (395)
    on left: 621 622, on right: 83
generic_dimension_specifieropt (396)
    on left: 623 624, on right: 88 89 90
commasopt (397)
    on left: 625 626, on right: 91
anonymous_method_signatureopt (398)
    on left: 627 628, on right: 97
anonymous_method_parameter_listopt (399)
    on left: 629 630, on right: 98
parameter_modifieropt (400)
    on left: 631 632, on right: 101 338
statement_listopt (401)
    on left: 633 634, on right: 178
switch_sectionsopt (402)
    on left: 635 636, on right: 209
for_initializeropt (403)
    on left: 637 638, on right: 223
for_conditionopt (404)
    on left: 639 640, on right: 223
for_iteratoropt (405)
    on left: 641 642, on right: 223
expressionopt (406)
    on left: 643 644, on right: 241 242
catch_clausesopt (407)
    on left: 645 646, on right: 244
specific_catch_clausesopt (408)
    on left: 647 648, on right: 246
identifieropt (409)
    on left: 649 650, on right: 249
attributesopt (410)
    on left: 651 652, on right: 1 297 315 319 327 328 338 341 342 345
    346 354 355 358 359 360 363 397 403 408 411 438 447 448 449 450
    451 452 453 454 455 456 462 463 464 465 491 492
type_parameter_listopt (411)
    on left: 653 654, on right: 297 327 328 411 438 447 448 464 465
class_baseopt (412)
    on left: 655 656, on right: 297
type_parameter_constraints_clausesopt (413)
    on left: 657 658, on right: 297 327 328 411 438 447 448 464 465
class_member_declarationsopt (414)
    on left: 659 660, on right: 301
formal_parameter_listopt (415)
    on left: 661 662, on right: 327 328 398 447 448 464 465
set_accessor_declarationopt (416)
    on left: 663 664, on right: 343
get_accessor_declarationopt (417)
    on left: 665 666, on right: 344
accessor_modifieropt (418)
    on left: 667 668, on right: 345 346
constructor_initializeropt (419)
    on left: 669 670, on right: 398
struct_interfacesopt (420)
    on left: 671 672, on right: 411
struct_member_declarationsopt (421)
    on left: 673 674, on right: 413
variable_initializer_listopt (422)
    on left: 675 676, on right: 434
interface_baseopt (423)
    on left: 677 678, on right: 438
interface_member_declarationsopt (424)
    on left: 679 680, on right: 440
newopt (425)
    on left: 681 682, on right: 447 448 449 454 455
enum_baseopt (426)
    on left: 683 684, on right: 456
enum_member_declarationsopt (427)
    on left: 685 686, on right: 458
attribute_argumentsopt (428)
    on left: 687 688, on right: 478
positional_argument_listopt (429)
    on left: 689 690, on right: 480
SemicolonOpt (430)
    on left: 691 692, on right: 260 297 411 438 456


state 0

    0 $accept: . compilation_unit $end
    1 compilation_unit: . extern_alias_directivesopt using_directivesopt attributesopt namespace_member_declarationsopt
    2                 | . error
  264 extern_alias_directives: . extern_alias_directive
  265                        | . extern_alias_directives extern_alias_directive
  266 extern_alias_directive: . EXTERN ALIAS IDENTIFIER ';'
  607 extern_alias_directivesopt: .  [$end, ABSTRACT, CLASS, DELEGATE, ENUM, EXTERN, INTERFACE, INTERNAL, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEALED, STATIC, STRUCT, USING, VIRTUAL, PARTIAL, NEW, '[']
  608                           | . extern_alias_directives

    error   shift, and go to state 1
    EXTERN  shift, and go to state 2

    $end       reduce using rule 607 (extern_alias_directivesopt)
    ABSTRACT   reduce using rule 607 (extern_alias_directivesopt)
    CLASS      reduce using rule 607 (extern_alias_directivesopt)
    DELEGATE   reduce using rule 607 (extern_alias_directivesopt)
    ENUM       reduce using rule 607 (extern_alias_directivesopt)
    EXTERN     [reduce using rule 607 (extern_alias_directivesopt)]
    INTERFACE  reduce using rule 607 (extern_alias_directivesopt)
    INTERNAL   reduce using rule 607 (extern_alias_directivesopt)
    NAMESPACE  reduce using rule 607 (extern_alias_directivesopt)
    OVERRIDE   reduce using rule 607 (extern_alias_directivesopt)
    PRIVATE    reduce using rule 607 (extern_alias_directivesopt)
    PROTECTED  reduce using rule 607 (extern_alias_directivesopt)
    PUBLIC     reduce using rule 607 (extern_alias_directivesopt)
    SEALED     reduce using rule 607 (extern_alias_directivesopt)
    STATIC     reduce using rule 607 (extern_alias_directivesopt)
    STRUCT     reduce using rule 607 (extern_alias_directivesopt)
    USING      reduce using rule 607 (extern_alias_directivesopt)
    VIRTUAL    reduce using rule 607 (extern_alias_directivesopt)
    PARTIAL    reduce using rule 607 (extern_alias_directivesopt)
    NEW        reduce using rule 607 (extern_alias_directivesopt)
    '['        reduce using rule 607 (extern_alias_directivesopt)

    compilation_unit            go to state 3
    extern_alias_directives     go to state 4
    extern_alias_directive      go to state 5
    extern_alias_directivesopt  go to state 6


state 1

    2 compilation_unit: error .

    $default  reduce using rule 2 (compilation_unit)


state 2

  266 extern_alias_directive: EXTERN . ALIAS IDENTIFIER ';'

    ALIAS  shift, and go to state 7


state 3

    0 $accept: compilation_unit . $end

    $end  shift, and go to state 8


state 4

  265 extern_alias_directives: extern_alias_directives . extern_alias_directive
  266 extern_alias_directive: . EXTERN ALIAS IDENTIFIER ';'
  608 extern_alias_directivesopt: extern_alias_directives .  [$end, ABSTRACT, CLASS, DELEGATE, ENUM, EXTERN, INTERFACE, INTERNAL, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEALED, STATIC, STRUCT, USING, VIRTUAL, PARTIAL, NEW, '[', '}']

    EXTERN  shift, and go to state 2

    EXTERN    [reduce using rule 608 (extern_alias_directivesopt)]
    $default  reduce using rule 608 (extern_alias_directivesopt)

    extern_alias_directive  go to state 9


state 5

  264 extern_alias_directives: extern_alias_directive .

    $default  reduce using rule 264 (extern_alias_directives)


state 6

    1 compilation_unit: extern_alias_directivesopt . using_directivesopt attributesopt namespace_member_declarationsopt
  267 using_directives: . using_directive
  268                 | . using_directives using_directive
  269 using_directive: . using_alias_directive
  270                | . using_namespace_directive
  271 using_alias_directive: . USING IDENTIFIER '=' namespace_or_type_name ';'
  272 using_namespace_directive: . USING namespace_name ';'
  609 using_directivesopt: .  [$end, ABSTRACT, CLASS, DELEGATE, ENUM, EXTERN, INTERFACE, INTERNAL, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEALED, STATIC, STRUCT, VIRTUAL, PARTIAL, NEW, '[']
  610                    | . using_directives

    USING  shift, and go to state 10

    $default  reduce using rule 609 (using_directivesopt)

    using_directives           go to state 11
    using_directive            go to state 12
    using_alias_directive      go to state 13
    using_namespace_directive  go to state 14
    using_directivesopt        go to state 15


state 7

  266 extern_alias_directive: EXTERN ALIAS . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 16


state 8

    0 $accept: compilation_unit $end .

    $default  accept


state 9

  265 extern_alias_directives: extern_alias_directives extern_alias_directive .

    $default  reduce using rule 265 (extern_alias_directives)


state 10

    3 namespace_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  271 using_alias_directive: USING . IDENTIFIER '=' namespace_or_type_name ';'
  272 using_namespace_directive: USING . namespace_name ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt

    IDENTIFIER  shift, and go to state 17

    namespace_name          go to state 18
    namespace_or_type_name  go to state 19
    qualified_alias_member  go to state 20


state 11

  268 using_directives: using_directives . using_directive
  269 using_directive: . using_alias_directive
  270                | . using_namespace_directive
  271 using_alias_directive: . USING IDENTIFIER '=' namespace_or_type_name ';'
  272 using_namespace_directive: . USING namespace_name ';'
  610 using_directivesopt: using_directives .  [$end, ABSTRACT, CLASS, DELEGATE, ENUM, EXTERN, INTERFACE, INTERNAL, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEALED, STATIC, STRUCT, VIRTUAL, PARTIAL, NEW, '[', '}']

    USING  shift, and go to state 10

    $default  reduce using rule 610 (using_directivesopt)

    using_directive            go to state 21
    using_alias_directive      go to state 13
    using_namespace_directive  go to state 14


state 12

  267 using_directives: using_directive .

    $default  reduce using rule 267 (using_directives)


state 13

  269 using_directive: using_alias_directive .

    $default  reduce using rule 269 (using_directive)


state 14

  270 using_directive: using_namespace_directive .

    $default  reduce using rule 270 (using_directive)


state 15

    1 compilation_unit: extern_alias_directivesopt using_directivesopt . attributesopt namespace_member_declarationsopt
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [$end, ABSTRACT, CLASS, DELEGATE, ENUM, EXTERN, INTERFACE, INTERNAL, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEALED, STATIC, STRUCT, VIRTUAL, PARTIAL, NEW, '[']
  652              | . attributes

    '['  shift, and go to state 22

    '['       [reduce using rule 651 (attributesopt)]
    $default  reduce using rule 651 (attributesopt)

    attributes          go to state 23
    attribute_sections  go to state 24
    attribute_section   go to state 25
    attributesopt       go to state 26


state 16

  266 extern_alias_directive: EXTERN ALIAS IDENTIFIER . ';'

    ';'  shift, and go to state 27


state 17

    5 namespace_or_type_name: IDENTIFIER . type_argument_listopt
  271 using_alias_directive: USING IDENTIFIER . '=' namespace_or_type_name ';'
  282 qualified_alias_member: IDENTIFIER . SEMI_SEMI IDENTIFIER type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  ['.', ';']
  614                      | . type_argument_list

    SEMI_SEMI  shift, and go to state 28
    '<'        shift, and go to state 29
    '='        shift, and go to state 30

    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 32


state 18

  272 using_namespace_directive: USING namespace_name . ';'

    ';'  shift, and go to state 33


state 19

    3 namespace_name: namespace_or_type_name .  [';']
    7 namespace_or_type_name: namespace_or_type_name . '.' IDENTIFIER type_argument_listopt

    '.'  shift, and go to state 34

    $default  reduce using rule 3 (namespace_name)


state 20

    6 namespace_or_type_name: qualified_alias_member .

    $default  reduce using rule 6 (namespace_or_type_name)


state 21

  268 using_directives: using_directives using_directive .

    $default  reduce using rule 268 (using_directives)


state 22

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  469 attribute_section: '[' . attribute_target_specifier attribute_list ']'
  470                  | '[' . attribute_list ']'
  471                  | '[' . attribute_target_specifier attribute_list ',' ']'
  472                  | '[' . attribute_list ',' ']'
  473 attribute_target_specifier: . attribute_target ':'
  474 attribute_target: . IDENTIFIER
  475                 | . keyword
  476 attribute_list: . attribute
  477               | . attribute_list ',' attribute
  478 attribute: . attribute_name attribute_argumentsopt
  479 attribute_name: . type_name
  513 keyword: . ABSTRACT
  514        | . AS
  515        | . BASE
  516        | . BOOL
  517        | . BREAK
  518        | . CASE
  519        | . CATCH
  520        | . CHECKED
  521        | . CLASS
  522        | . CONST
  523        | . CONTINUE
  524        | . DECIMAL
  525        | . DEFAULT
  526        | . DELEGATE
  527        | . DO
  528        | . DOUBLE
  529        | . ELSE
  530        | . ENUM
  531        | . EVENT
  532        | . EXPLICIT
  533        | . EXTERN
  534        | . FALSE
  535        | . FINALLY
  536        | . FIXED
  537        | . FLOAT
  538        | . FOR
  539        | . FOREACH
  540        | . GOTO
  541        | . IF
  542        | . IMPLICIT
  543        | . IN
  544        | . INTERFACE
  545        | . INTERNAL
  546        | . IS
  547        | . LOCK
  548        | . NAMESPACE
  549        | . NEW
  550        | . NULL
  551        | . OBJECT
  552        | . OPERATOR
  553        | . OUT
  554        | . OVERRIDE
  555        | . PARAMS
  556        | . PRIVATE
  557        | . PROTECTED
  558        | . PUBLIC
  559        | . READONLY
  560        | . REF
  561        | . RETURN
  562        | . SEALED
  563        | . SIZEOF
  564        | . STACKALLOC
  565        | . STATIC
  566        | . STRING
  567        | . STRUCT
  568        | . SWITCH
  569        | . THIS
  570        | . THROW
  571        | . TRUE
  572        | . TRY
  573        | . TYPEOF
  574        | . UNCHECKED
  575        | . UNSAFE
  576        | . USING
  577        | . VIRTUAL
  578        | . VOID
  579        | . VOLATILE
  580        | . WHILE
  581        | . YIELD
  582        | . ALIAS
  583        | . PARTIAL
  584        | . ADD
  585        | . REMOVE
  586        | . GET
  587        | . SET
  588        | . WHERE
  589        | . integral_type

    ABSTRACT    shift, and go to state 35
    BASE        shift, and go to state 36
    BOOL        shift, and go to state 37
    BREAK       shift, and go to state 38
    BYTE        shift, and go to state 39
    CASE        shift, and go to state 40
    CATCH       shift, and go to state 41
    CHAR        shift, and go to state 42
    CLASS       shift, and go to state 43
    CONST       shift, and go to state 44
    CONTINUE    shift, and go to state 45
    DECIMAL     shift, and go to state 46
    DEFAULT     shift, and go to state 47
    DELEGATE    shift, and go to state 48
    DO          shift, and go to state 49
    DOUBLE      shift, and go to state 50
    ELSE        shift, and go to state 51
    ENUM        shift, and go to state 52
    EVENT       shift, and go to state 53
    EXPLICIT    shift, and go to state 54
    EXTERN      shift, and go to state 55
    FALSE       shift, and go to state 56
    FINALLY     shift, and go to state 57
    FIXED       shift, and go to state 58
    FLOAT       shift, and go to state 59
    FOR         shift, and go to state 60
    FOREACH     shift, and go to state 61
    GOTO        shift, and go to state 62
    IF          shift, and go to state 63
    IMPLICIT    shift, and go to state 64
    IN          shift, and go to state 65
    INT         shift, and go to state 66
    INTERFACE   shift, and go to state 67
    INTERNAL    shift, and go to state 68
    LOCK        shift, and go to state 69
    LONG        shift, and go to state 70
    NAMESPACE   shift, and go to state 71
    NULL        shift, and go to state 72
    OBJECT      shift, and go to state 73
    OPERATOR    shift, and go to state 74
    OUT         shift, and go to state 75
    OVERRIDE    shift, and go to state 76
    PARAMS      shift, and go to state 77
    PRIVATE     shift, and go to state 78
    PROTECTED   shift, and go to state 79
    PUBLIC      shift, and go to state 80
    READONLY    shift, and go to state 81
    REF         shift, and go to state 82
    RETURN      shift, and go to state 83
    SBYTE       shift, and go to state 84
    SEALED      shift, and go to state 85
    SHORT       shift, and go to state 86
    SIZEOF      shift, and go to state 87
    STACKALLOC  shift, and go to state 88
    STATIC      shift, and go to state 89
    STRING      shift, and go to state 90
    STRUCT      shift, and go to state 91
    SWITCH      shift, and go to state 92
    THIS        shift, and go to state 93
    THROW       shift, and go to state 94
    TRUE        shift, and go to state 95
    TRY         shift, and go to state 96
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    UNSAFE      shift, and go to state 99
    USHORT      shift, and go to state 100
    USING       shift, and go to state 101
    VIRTUAL     shift, and go to state 102
    VOID        shift, and go to state 103
    VOLATILE    shift, and go to state 104
    WHILE       shift, and go to state 105
    YIELD       shift, and go to state 106
    ALIAS       shift, and go to state 107
    PARTIAL     shift, and go to state 108
    ADD         shift, and go to state 109
    REMOVE      shift, and go to state 110
    GET         shift, and go to state 111
    SET         shift, and go to state 112
    WHERE       shift, and go to state 113
    IDENTIFIER  shift, and go to state 114
    UNCHECKED   shift, and go to state 115
    CHECKED     shift, and go to state 116
    TYPEOF      shift, and go to state 117
    NEW         shift, and go to state 118
    AS          shift, and go to state 119
    IS          shift, and go to state 120

    type_name                   go to state 121
    namespace_or_type_name      go to state 122
    integral_type               go to state 123
    qualified_alias_member      go to state 20
    attribute_target_specifier  go to state 124
    attribute_target            go to state 125
    attribute_list              go to state 126
    attribute                   go to state 127
    attribute_name              go to state 128
    keyword                     go to state 129


state 23

  652 attributesopt: attributes .

    $default  reduce using rule 652 (attributesopt)


state 24

  466 attributes: attribute_sections .  [$end, ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, NAMESPACE, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, REF, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, ADD, REMOVE, GET, SET, IDENTIFIER, NEW, '[', '~']
  468 attribute_sections: attribute_sections . attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'

    '['  shift, and go to state 22

    '['       [reduce using rule 466 (attributes)]
    $default  reduce using rule 466 (attributes)

    attribute_section  go to state 130


state 25

  467 attribute_sections: attribute_section .

    $default  reduce using rule 467 (attribute_sections)


state 26

    1 compilation_unit: extern_alias_directivesopt using_directivesopt attributesopt . namespace_member_declarationsopt
  260 namespace_declaration: . NAMESPACE qualified_identifier namespace_body SemicolonOpt
  273 namespace_member_declarations: . namespace_member_declaration
  274                              | . namespace_member_declarations namespace_member_declaration
  275 namespace_member_declaration: . namespace_declaration
  276                             | . type_declaration
  277 type_declaration: . class_declaration
  278                 | . struct_declaration
  279                 | . interface_declaration
  280                 | . enum_declaration
  281                 | . delegate_declaration
  297 class_declaration: . attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  411 struct_declaration: . attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  438 interface_declaration: . attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: . attributesopt modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: . attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | . attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  611 namespace_member_declarationsopt: .  [$end]
  612                                 | . namespace_member_declarations
  651 attributesopt: .  [ABSTRACT, CLASS, DELEGATE, ENUM, EXTERN, INTERFACE, INTERNAL, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEALED, STATIC, STRUCT, VIRTUAL, PARTIAL, NEW]
  652              | . attributes

    NAMESPACE  shift, and go to state 131
    '['        shift, and go to state 22

    $end      reduce using rule 611 (namespace_member_declarationsopt)
    $default  reduce using rule 651 (attributesopt)

    namespace_declaration             go to state 132
    namespace_member_declarations     go to state 133
    namespace_member_declaration      go to state 134
    type_declaration                  go to state 135
    class_declaration                 go to state 136
    struct_declaration                go to state 137
    interface_declaration             go to state 138
    enum_declaration                  go to state 139
    delegate_declaration              go to state 140
    attributes                        go to state 23
    attribute_sections                go to state 24
    attribute_section                 go to state 25
    namespace_member_declarationsopt  go to state 141
    attributesopt                     go to state 142


state 27

  266 extern_alias_directive: EXTERN ALIAS IDENTIFIER ';' .

    $default  reduce using rule 266 (extern_alias_directive)


state 28

  282 qualified_alias_member: IDENTIFIER SEMI_SEMI . IDENTIFIER type_argument_listopt

    IDENTIFIER  shift, and go to state 143


state 29

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  493 type_argument_list: '<' . type_arguments '>'
  494 type_arguments: . type_argument
  495               | . type_arguments ',' type_argument
  496 type_argument: . type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 151
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163
    type_arguments           go to state 164
    type_argument            go to state 165


state 30

    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  271 using_alias_directive: USING IDENTIFIER '=' . namespace_or_type_name ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt

    IDENTIFIER  shift, and go to state 149

    namespace_or_type_name  go to state 166
    qualified_alias_member  go to state 20


state 31

  614 type_argument_listopt: type_argument_list .

    $default  reduce using rule 614 (type_argument_listopt)


state 32

    5 namespace_or_type_name: IDENTIFIER type_argument_listopt .

    $default  reduce using rule 5 (namespace_or_type_name)


state 33

  272 using_namespace_directive: USING namespace_name ';' .

    $default  reduce using rule 272 (using_namespace_directive)


state 34

    7 namespace_or_type_name: namespace_or_type_name '.' . IDENTIFIER type_argument_listopt

    IDENTIFIER  shift, and go to state 167


state 35

  513 keyword: ABSTRACT .

    $default  reduce using rule 513 (keyword)


state 36

  515 keyword: BASE .

    $default  reduce using rule 515 (keyword)


state 37

  516 keyword: BOOL .

    $default  reduce using rule 516 (keyword)


state 38

  517 keyword: BREAK .

    $default  reduce using rule 517 (keyword)


state 39

   20 integral_type: BYTE .

    $default  reduce using rule 20 (integral_type)


state 40

  518 keyword: CASE .

    $default  reduce using rule 518 (keyword)


state 41

  519 keyword: CATCH .

    $default  reduce using rule 519 (keyword)


state 42

   27 integral_type: CHAR .

    $default  reduce using rule 27 (integral_type)


state 43

  521 keyword: CLASS .

    $default  reduce using rule 521 (keyword)


state 44

  522 keyword: CONST .

    $default  reduce using rule 522 (keyword)


state 45

  523 keyword: CONTINUE .

    $default  reduce using rule 523 (keyword)


state 46

  524 keyword: DECIMAL .

    $default  reduce using rule 524 (keyword)


state 47

  525 keyword: DEFAULT .

    $default  reduce using rule 525 (keyword)


state 48

  526 keyword: DELEGATE .

    $default  reduce using rule 526 (keyword)


state 49

  527 keyword: DO .

    $default  reduce using rule 527 (keyword)


state 50

  528 keyword: DOUBLE .

    $default  reduce using rule 528 (keyword)


state 51

  529 keyword: ELSE .

    $default  reduce using rule 529 (keyword)


state 52

  530 keyword: ENUM .

    $default  reduce using rule 530 (keyword)


state 53

  531 keyword: EVENT .

    $default  reduce using rule 531 (keyword)


state 54

  532 keyword: EXPLICIT .

    $default  reduce using rule 532 (keyword)


state 55

  533 keyword: EXTERN .

    $default  reduce using rule 533 (keyword)


state 56

  534 keyword: FALSE .

    $default  reduce using rule 534 (keyword)


state 57

  535 keyword: FINALLY .

    $default  reduce using rule 535 (keyword)


state 58

  536 keyword: FIXED .

    $default  reduce using rule 536 (keyword)


state 59

  537 keyword: FLOAT .

    $default  reduce using rule 537 (keyword)


state 60

  538 keyword: FOR .

    $default  reduce using rule 538 (keyword)


state 61

  539 keyword: FOREACH .

    $default  reduce using rule 539 (keyword)


state 62

  540 keyword: GOTO .

    $default  reduce using rule 540 (keyword)


state 63

  541 keyword: IF .

    $default  reduce using rule 541 (keyword)


state 64

  542 keyword: IMPLICIT .

    $default  reduce using rule 542 (keyword)


state 65

  543 keyword: IN .

    $default  reduce using rule 543 (keyword)


state 66

   23 integral_type: INT .

    $default  reduce using rule 23 (integral_type)


state 67

  544 keyword: INTERFACE .

    $default  reduce using rule 544 (keyword)


state 68

  545 keyword: INTERNAL .

    $default  reduce using rule 545 (keyword)


state 69

  547 keyword: LOCK .

    $default  reduce using rule 547 (keyword)


state 70

   25 integral_type: LONG .

    $default  reduce using rule 25 (integral_type)


state 71

  548 keyword: NAMESPACE .

    $default  reduce using rule 548 (keyword)


state 72

  550 keyword: NULL .

    $default  reduce using rule 550 (keyword)


state 73

  551 keyword: OBJECT .

    $default  reduce using rule 551 (keyword)


state 74

  552 keyword: OPERATOR .

    $default  reduce using rule 552 (keyword)


state 75

  553 keyword: OUT .

    $default  reduce using rule 553 (keyword)


state 76

  554 keyword: OVERRIDE .

    $default  reduce using rule 554 (keyword)


state 77

  555 keyword: PARAMS .

    $default  reduce using rule 555 (keyword)


state 78

  556 keyword: PRIVATE .

    $default  reduce using rule 556 (keyword)


state 79

  557 keyword: PROTECTED .

    $default  reduce using rule 557 (keyword)


state 80

  558 keyword: PUBLIC .

    $default  reduce using rule 558 (keyword)


state 81

  559 keyword: READONLY .

    $default  reduce using rule 559 (keyword)


state 82

  560 keyword: REF .

    $default  reduce using rule 560 (keyword)


state 83

  561 keyword: RETURN .

    $default  reduce using rule 561 (keyword)


state 84

   19 integral_type: SBYTE .

    $default  reduce using rule 19 (integral_type)


state 85

  562 keyword: SEALED .

    $default  reduce using rule 562 (keyword)


state 86

   21 integral_type: SHORT .

    $default  reduce using rule 21 (integral_type)


state 87

  563 keyword: SIZEOF .

    $default  reduce using rule 563 (keyword)


state 88

  564 keyword: STACKALLOC .

    $default  reduce using rule 564 (keyword)


state 89

  565 keyword: STATIC .

    $default  reduce using rule 565 (keyword)


state 90

  566 keyword: STRING .

    $default  reduce using rule 566 (keyword)


state 91

  567 keyword: STRUCT .

    $default  reduce using rule 567 (keyword)


state 92

  568 keyword: SWITCH .

    $default  reduce using rule 568 (keyword)


state 93

  569 keyword: THIS .

    $default  reduce using rule 569 (keyword)


state 94

  570 keyword: THROW .

    $default  reduce using rule 570 (keyword)


state 95

  571 keyword: TRUE .

    $default  reduce using rule 571 (keyword)


state 96

  572 keyword: TRY .

    $default  reduce using rule 572 (keyword)


state 97

   24 integral_type: UINT .

    $default  reduce using rule 24 (integral_type)


state 98

   26 integral_type: ULONG .

    $default  reduce using rule 26 (integral_type)


state 99

  575 keyword: UNSAFE .

    $default  reduce using rule 575 (keyword)


state 100

   22 integral_type: USHORT .

    $default  reduce using rule 22 (integral_type)


state 101

  576 keyword: USING .

    $default  reduce using rule 576 (keyword)


state 102

  577 keyword: VIRTUAL .

    $default  reduce using rule 577 (keyword)


state 103

  578 keyword: VOID .

    $default  reduce using rule 578 (keyword)


state 104

  579 keyword: VOLATILE .

    $default  reduce using rule 579 (keyword)


state 105

  580 keyword: WHILE .

    $default  reduce using rule 580 (keyword)


state 106

  581 keyword: YIELD .

    $default  reduce using rule 581 (keyword)


state 107

  582 keyword: ALIAS .

    $default  reduce using rule 582 (keyword)


state 108

  583 keyword: PARTIAL .

    $default  reduce using rule 583 (keyword)


state 109

  584 keyword: ADD .

    $default  reduce using rule 584 (keyword)


state 110

  585 keyword: REMOVE .

    $default  reduce using rule 585 (keyword)


state 111

  586 keyword: GET .

    $default  reduce using rule 586 (keyword)


state 112

  587 keyword: SET .

    $default  reduce using rule 587 (keyword)


state 113

  588 keyword: WHERE .

    $default  reduce using rule 588 (keyword)


state 114

    5 namespace_or_type_name: IDENTIFIER . type_argument_listopt
  282 qualified_alias_member: IDENTIFIER . SEMI_SEMI IDENTIFIER type_argument_listopt
  474 attribute_target: IDENTIFIER .  [':']
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  ['.', ',', '(', ']']
  614                      | . type_argument_list

    SEMI_SEMI  shift, and go to state 28
    '<'        shift, and go to state 29

    ':'       reduce using rule 474 (attribute_target)
    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 32


state 115

  574 keyword: UNCHECKED .

    $default  reduce using rule 574 (keyword)


state 116

  520 keyword: CHECKED .

    $default  reduce using rule 520 (keyword)


state 117

  573 keyword: TYPEOF .

    $default  reduce using rule 573 (keyword)


state 118

  549 keyword: NEW .

    $default  reduce using rule 549 (keyword)


state 119

  514 keyword: AS .

    $default  reduce using rule 514 (keyword)


state 120

  546 keyword: IS .

    $default  reduce using rule 546 (keyword)


state 121

  479 attribute_name: type_name .

    $default  reduce using rule 479 (attribute_name)


state 122

    4 type_name: namespace_or_type_name .  [OBJECT, OPERATOR, THIS, WHERE, IDENTIFIER, '.', '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', '(', ')', ']', ':', '{', '}', ';']
    7 namespace_or_type_name: namespace_or_type_name . '.' IDENTIFIER type_argument_listopt

    '.'  shift, and go to state 34

    '.'       [reduce using rule 4 (type_name)]
    $default  reduce using rule 4 (type_name)


state 123

  589 keyword: integral_type .

    $default  reduce using rule 589 (keyword)


state 124

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  469 attribute_section: '[' attribute_target_specifier . attribute_list ']'
  471                  | '[' attribute_target_specifier . attribute_list ',' ']'
  476 attribute_list: . attribute
  477               | . attribute_list ',' attribute
  478 attribute: . attribute_name attribute_argumentsopt
  479 attribute_name: . type_name

    IDENTIFIER  shift, and go to state 149

    type_name               go to state 121
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20
    attribute_list          go to state 168
    attribute               go to state 127
    attribute_name          go to state 128


state 125

  473 attribute_target_specifier: attribute_target . ':'

    ':'  shift, and go to state 169


state 126

  470 attribute_section: '[' attribute_list . ']'
  472                  | '[' attribute_list . ',' ']'
  477 attribute_list: attribute_list . ',' attribute

    ','  shift, and go to state 170
    ']'  shift, and go to state 171


state 127

  476 attribute_list: attribute .

    $default  reduce using rule 476 (attribute_list)


state 128

  478 attribute: attribute_name . attribute_argumentsopt
  480 attribute_arguments: . '(' positional_argument_listopt ')'
  481                    | . '(' positional_argument_list ',' named_argument_list ')'
  482                    | . '(' named_argument_list ')'
  687 attribute_argumentsopt: .  [',', ']']
  688                       | . attribute_arguments

    '('  shift, and go to state 172

    $default  reduce using rule 687 (attribute_argumentsopt)

    attribute_arguments     go to state 173
    attribute_argumentsopt  go to state 174


state 129

  475 attribute_target: keyword .

    $default  reduce using rule 475 (attribute_target)


state 130

  468 attribute_sections: attribute_sections attribute_section .

    $default  reduce using rule 468 (attribute_sections)


state 131

  260 namespace_declaration: NAMESPACE . qualified_identifier namespace_body SemicolonOpt
  261 qualified_identifier: . IDENTIFIER
  262                     | . qualified_identifier '.' IDENTIFIER

    IDENTIFIER  shift, and go to state 175

    qualified_identifier  go to state 176


state 132

  275 namespace_member_declaration: namespace_declaration .

    $default  reduce using rule 275 (namespace_member_declaration)


state 133

  260 namespace_declaration: . NAMESPACE qualified_identifier namespace_body SemicolonOpt
  274 namespace_member_declarations: namespace_member_declarations . namespace_member_declaration
  275 namespace_member_declaration: . namespace_declaration
  276                             | . type_declaration
  277 type_declaration: . class_declaration
  278                 | . struct_declaration
  279                 | . interface_declaration
  280                 | . enum_declaration
  281                 | . delegate_declaration
  297 class_declaration: . attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  411 struct_declaration: . attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  438 interface_declaration: . attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: . attributesopt modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: . attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | . attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  612 namespace_member_declarationsopt: namespace_member_declarations .  [$end, '}']
  651 attributesopt: .  [ABSTRACT, CLASS, DELEGATE, ENUM, EXTERN, INTERFACE, INTERNAL, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEALED, STATIC, STRUCT, VIRTUAL, PARTIAL, NEW]
  652              | . attributes

    NAMESPACE  shift, and go to state 131
    '['        shift, and go to state 22

    $end      reduce using rule 612 (namespace_member_declarationsopt)
    '}'       reduce using rule 612 (namespace_member_declarationsopt)
    $default  reduce using rule 651 (attributesopt)

    namespace_declaration         go to state 132
    namespace_member_declaration  go to state 177
    type_declaration              go to state 135
    class_declaration             go to state 136
    struct_declaration            go to state 137
    interface_declaration         go to state 138
    enum_declaration              go to state 139
    delegate_declaration          go to state 140
    attributes                    go to state 23
    attribute_sections            go to state 24
    attribute_section             go to state 25
    attributesopt                 go to state 142


state 134

  273 namespace_member_declarations: namespace_member_declaration .

    $default  reduce using rule 273 (namespace_member_declarations)


state 135

  276 namespace_member_declaration: type_declaration .

    $default  reduce using rule 276 (namespace_member_declaration)


state 136

  277 type_declaration: class_declaration .

    $default  reduce using rule 277 (type_declaration)


state 137

  278 type_declaration: struct_declaration .

    $default  reduce using rule 278 (type_declaration)


state 138

  279 type_declaration: interface_declaration .

    $default  reduce using rule 279 (type_declaration)


state 139

  280 type_declaration: enum_declaration .

    $default  reduce using rule 280 (type_declaration)


state 140

  281 type_declaration: delegate_declaration .

    $default  reduce using rule 281 (type_declaration)


state 141

    1 compilation_unit: extern_alias_directivesopt using_directivesopt attributesopt namespace_member_declarationsopt .

    $default  reduce using rule 1 (compilation_unit)


state 142

  283 modifiers_opt: .
  284              | . modifiers_opt modifier
  297 class_declaration: attributesopt . modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  411 struct_declaration: attributesopt . modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  438 interface_declaration: attributesopt . modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: attributesopt . modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: attributesopt . modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | attributesopt . modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    $default  reduce using rule 283 (modifiers_opt)

    modifiers_opt  go to state 178


state 143

  282 qualified_alias_member: IDENTIFIER SEMI_SEMI IDENTIFIER . type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [OBJECT, OPERATOR, THIS, WHERE, IDENTIFIER, '.', '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', '(', ')', ']', ':', '{', '}', ';']
  614                      | . type_argument_list

    '<'  shift, and go to state 29

    '<'       [reduce using rule 613 (type_argument_listopt)]
    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 179


state 144

   15 simple_type: BOOL .

    $default  reduce using rule 15 (simple_type)


state 145

   18 numeric_type: DECIMAL .

    $default  reduce using rule 18 (numeric_type)


state 146

   29 floating_point_type: DOUBLE .

    $default  reduce using rule 29 (floating_point_type)


state 147

   28 floating_point_type: FLOAT .

    $default  reduce using rule 28 (floating_point_type)


state 148

   36 class_type: STRING .

    $default  reduce using rule 36 (class_type)


state 149

    5 namespace_or_type_name: IDENTIFIER . type_argument_listopt
  282 qualified_alias_member: IDENTIFIER . SEMI_SEMI IDENTIFIER type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [OBJECT, THIS, WHERE, IDENTIFIER, '.', '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', '(', ')', ']', ':', '{', '}', ';']
  614                      | . type_argument_list

    SEMI_SEMI  shift, and go to state 28
    '<'        shift, and go to state 29

    '<'       [reduce using rule 613 (type_argument_listopt)]
    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 32


state 150

    8 type: type_name .  [OPERATOR, THIS, IDENTIFIER, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', '(', ')', ']', ':', '}', ';']
   31 non_nullable_value_type: type_name .  ['?']
   35 class_type: type_name . OBJECT

    OBJECT  shift, and go to state 180

    '?'       reduce using rule 8 (type)
    '?'       [reduce using rule 31 (non_nullable_value_type)]
    $default  reduce using rule 8 (type)


state 151

  496 type_argument: type .

    $default  reduce using rule 496 (type_argument)


state 152

    9 type: value_type .  [OPERATOR, THIS, IDENTIFIER, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', '(', ')', ']', ':', '}', ';']
  427 non_array_type: value_type .  ['[']

    '['       reduce using rule 427 (non_array_type)
    $default  reduce using rule 9 (type)


state 153

   11 value_type: struct_type .

    $default  reduce using rule 11 (value_type)


state 154

   12 struct_type: simple_type .  [OPERATOR, THIS, IDENTIFIER, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', '(', ')', '[', ']', ':', '}', ';']
   32 non_nullable_value_type: simple_type .  ['?']

    '?'       reduce using rule 12 (struct_type)
    '?'       [reduce using rule 32 (non_nullable_value_type)]
    $default  reduce using rule 12 (struct_type)


state 155

   14 simple_type: numeric_type .

    $default  reduce using rule 14 (simple_type)


state 156

   16 numeric_type: integral_type .

    $default  reduce using rule 16 (numeric_type)


state 157

   17 numeric_type: floating_point_type .

    $default  reduce using rule 17 (numeric_type)


state 158

   13 struct_type: nullable_type .

    $default  reduce using rule 13 (struct_type)


state 159

   30 nullable_type: non_nullable_value_type . '?'

    '?'  shift, and go to state 181


state 160

   10 type: reference_type .

    $default  reduce using rule 10 (type)


state 161

   33 reference_type: class_type .  [OPERATOR, THIS, IDENTIFIER, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', '(', ')', ']', ':', '}', ';']
  428 non_array_type: class_type .  ['[']

    '['       reduce using rule 428 (non_array_type)
    $default  reduce using rule 33 (reference_type)


state 162

   34 reference_type: array_type .

    $default  reduce using rule 34 (reference_type)


state 163

  426 array_type: non_array_type . rank_specifiers
  429 rank_specifiers: . rank_specifier
  430                | . rank_specifiers rank_specifier
  431 rank_specifier: . '[' dim_separatorsopt ']'

    '['  shift, and go to state 182

    rank_specifiers  go to state 183
    rank_specifier   go to state 184


state 164

  493 type_argument_list: '<' type_arguments . '>'
  495 type_arguments: type_arguments . ',' type_argument

    '>'  shift, and go to state 185
    ','  shift, and go to state 186


state 165

  494 type_arguments: type_argument .

    $default  reduce using rule 494 (type_arguments)


state 166

    7 namespace_or_type_name: namespace_or_type_name . '.' IDENTIFIER type_argument_listopt
  271 using_alias_directive: USING IDENTIFIER '=' namespace_or_type_name . ';'

    '.'  shift, and go to state 34
    ';'  shift, and go to state 187


state 167

    7 namespace_or_type_name: namespace_or_type_name '.' IDENTIFIER . type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [OBJECT, OPERATOR, THIS, WHERE, IDENTIFIER, '.', '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', '(', ')', ']', ':', '{', '}', ';']
  614                      | . type_argument_list

    '<'  shift, and go to state 29

    '<'       [reduce using rule 613 (type_argument_listopt)]
    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 188


state 168

  469 attribute_section: '[' attribute_target_specifier attribute_list . ']'
  471                  | '[' attribute_target_specifier attribute_list . ',' ']'
  477 attribute_list: attribute_list . ',' attribute

    ','  shift, and go to state 189
    ']'  shift, and go to state 190


state 169

  473 attribute_target_specifier: attribute_target ':' .

    $default  reduce using rule 473 (attribute_target_specifier)


state 170

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  472 attribute_section: '[' attribute_list ',' . ']'
  477 attribute_list: attribute_list ',' . attribute
  478 attribute: . attribute_name attribute_argumentsopt
  479 attribute_name: . type_name

    IDENTIFIER  shift, and go to state 149
    ']'         shift, and go to state 191

    type_name               go to state 121
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20
    attribute               go to state 192
    attribute_name          go to state 128


state 171

  470 attribute_section: '[' attribute_list ']' .

    $default  reduce using rule 470 (attribute_section)


state 172

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  480 attribute_arguments: '(' . positional_argument_listopt ')'
  481                    | '(' . positional_argument_list ',' named_argument_list ')'
  482                    | '(' . named_argument_list ')'
  483 positional_argument_list: . positional_argument
  484                         | . positional_argument_list ',' positional_argument
  485 positional_argument: . attribute_argument_expression
  486 named_argument_list: . named_argument
  487                    | . named_argument_list ',' named_argument
  488 named_argument: . IDENTIFIER '=' attribute_argument_expression
  489 attribute_argument_expression: . expression
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  689 positional_argument_listopt: .  [')']
  690                            | . positional_argument_list

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 206
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    $default  reduce using rule 689 (positional_argument_listopt)

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 263
    qualified_alias_member                go to state 264
    positional_argument_list              go to state 265
    positional_argument                   go to state 266
    named_argument_list                   go to state 267
    named_argument                        go to state 268
    attribute_argument_expression         go to state 269
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    positional_argument_listopt           go to state 277


state 173

  688 attribute_argumentsopt: attribute_arguments .

    $default  reduce using rule 688 (attribute_argumentsopt)


state 174

  478 attribute: attribute_name attribute_argumentsopt .

    $default  reduce using rule 478 (attribute)


state 175

  261 qualified_identifier: IDENTIFIER .

    $default  reduce using rule 261 (qualified_identifier)


state 176

  260 namespace_declaration: NAMESPACE qualified_identifier . namespace_body SemicolonOpt
  262 qualified_identifier: qualified_identifier . '.' IDENTIFIER
  263 namespace_body: . '{' extern_alias_directivesopt using_directivesopt namespace_member_declarationsopt '}'

    '.'  shift, and go to state 278
    '{'  shift, and go to state 279

    namespace_body  go to state 280


state 177

  274 namespace_member_declarations: namespace_member_declarations namespace_member_declaration .

    $default  reduce using rule 274 (namespace_member_declarations)


state 178

  284 modifiers_opt: modifiers_opt . modifier
  285 modifier: . NEW
  286         | . PARTIAL
  287         | . PUBLIC
  288         | . PROTECTED
  289         | . INTERNAL
  290         | . PRIVATE
  291         | . STATIC
  292         | . VIRTUAL
  293         | . SEALED
  294         | . OVERRIDE
  295         | . ABSTRACT
  296         | . EXTERN
  297 class_declaration: attributesopt modifiers_opt . CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  411 struct_declaration: attributesopt modifiers_opt . STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  438 interface_declaration: attributesopt modifiers_opt . INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: attributesopt modifiers_opt . ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: attributesopt modifiers_opt . DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | attributesopt modifiers_opt . DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    ABSTRACT   shift, and go to state 281
    CLASS      shift, and go to state 282
    DELEGATE   shift, and go to state 283
    ENUM       shift, and go to state 284
    EXTERN     shift, and go to state 285
    INTERFACE  shift, and go to state 286
    INTERNAL   shift, and go to state 287
    OVERRIDE   shift, and go to state 288
    PRIVATE    shift, and go to state 289
    PROTECTED  shift, and go to state 290
    PUBLIC     shift, and go to state 291
    SEALED     shift, and go to state 292
    STATIC     shift, and go to state 293
    STRUCT     shift, and go to state 294
    VIRTUAL    shift, and go to state 295
    PARTIAL    shift, and go to state 296
    NEW        shift, and go to state 297

    modifier  go to state 298


state 179

  282 qualified_alias_member: IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt .

    $default  reduce using rule 282 (qualified_alias_member)


state 180

   35 class_type: type_name OBJECT .

    $default  reduce using rule 35 (class_type)


state 181

   30 nullable_type: non_nullable_value_type '?' .

    $default  reduce using rule 30 (nullable_type)


state 182

  431 rank_specifier: '[' . dim_separatorsopt ']'
  432 dim_separators: . ','
  433               | . dim_separators ','
  615 dim_separatorsopt: .  [']']
  616                  | . dim_separators

    ','  shift, and go to state 299

    $default  reduce using rule 615 (dim_separatorsopt)

    dim_separators     go to state 300
    dim_separatorsopt  go to state 301


state 183

  426 array_type: non_array_type rank_specifiers .  [OPERATOR, THIS, IDENTIFIER, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', '(', ')', ']', ':', '{', '}', ';']
  430 rank_specifiers: rank_specifiers . rank_specifier
  431 rank_specifier: . '[' dim_separatorsopt ']'

    '['  shift, and go to state 182

    $default  reduce using rule 426 (array_type)

    rank_specifier  go to state 302


state 184

  429 rank_specifiers: rank_specifier .

    $default  reduce using rule 429 (rank_specifiers)


state 185

  493 type_argument_list: '<' type_arguments '>' .

    $default  reduce using rule 493 (type_argument_list)


state 186

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  495 type_arguments: type_arguments ',' . type_argument
  496 type_argument: . type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 151
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163
    type_argument            go to state 303


state 187

  271 using_alias_directive: USING IDENTIFIER '=' namespace_or_type_name ';' .

    $default  reduce using rule 271 (using_alias_directive)


state 188

    7 namespace_or_type_name: namespace_or_type_name '.' IDENTIFIER type_argument_listopt .

    $default  reduce using rule 7 (namespace_or_type_name)


state 189

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  471 attribute_section: '[' attribute_target_specifier attribute_list ',' . ']'
  477 attribute_list: attribute_list ',' . attribute
  478 attribute: . attribute_name attribute_argumentsopt
  479 attribute_name: . type_name

    IDENTIFIER  shift, and go to state 149
    ']'         shift, and go to state 304

    type_name               go to state 121
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20
    attribute               go to state 192
    attribute_name          go to state 128


state 190

  469 attribute_section: '[' attribute_target_specifier attribute_list ']' .

    $default  reduce using rule 469 (attribute_section)


state 191

  472 attribute_section: '[' attribute_list ',' ']' .

    $default  reduce using rule 472 (attribute_section)


state 192

  477 attribute_list: attribute_list ',' attribute .

    $default  reduce using rule 477 (attribute_list)


state 193

   78 base_access: BASE . '.' IDENTIFIER type_argument_listopt
   79            | BASE . '[' expression_list ']'

    '.'  shift, and go to state 305
    '['  shift, and go to state 306


state 194

   66 predefined_type: BOOL .

    $default  reduce using rule 66 (predefined_type)


state 195

   67 predefined_type: DECIMAL .

    $default  reduce using rule 67 (predefined_type)


state 196

   96 default_value_expression: DEFAULT . '(' type ')'

    '('  shift, and go to state 307


state 197

   97 anonymous_method_expression: DELEGATE . anonymous_method_signatureopt block
   98 anonymous_method_signature: . '(' anonymous_method_parameter_listopt ')'
  627 anonymous_method_signatureopt: .  ['{']
  628                              | . anonymous_method_signature

    '('  shift, and go to state 308

    $default  reduce using rule 627 (anonymous_method_signatureopt)

    anonymous_method_signature     go to state 309
    anonymous_method_signatureopt  go to state 310


state 198

   68 predefined_type: DOUBLE .

    $default  reduce using rule 68 (predefined_type)


state 199

  596 boolean_literal: FALSE .

    $default  reduce using rule 596 (boolean_literal)


state 200

   69 predefined_type: FLOAT .

    $default  reduce using rule 69 (predefined_type)


state 201

  594 literal: NULL .

    $default  reduce using rule 594 (literal)


state 202

   70 predefined_type: OBJECT .

    $default  reduce using rule 70 (predefined_type)


state 203

   71 predefined_type: STRING .

    $default  reduce using rule 71 (predefined_type)


state 204

   77 this_access: THIS .

    $default  reduce using rule 77 (this_access)


state 205

  595 boolean_literal: TRUE .

    $default  reduce using rule 595 (boolean_literal)


state 206

   61 simple_name: IDENTIFIER . type_argument_listopt
  282 qualified_alias_member: IDENTIFIER . SEMI_SEMI IDENTIFIER type_argument_listopt
  488 named_argument: IDENTIFIER . '=' attribute_argument_expression
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [LT_LT, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', ',', '(', ')', '[']
  614                      | . type_argument_list

    SEMI_SEMI  shift, and go to state 28
    '<'        shift, and go to state 29
    '='        shift, and go to state 311

    '<'       [reduce using rule 613 (type_argument_listopt)]
    '='       [reduce using rule 613 (type_argument_listopt)]
    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 312


state 207

   95 unchecked_expression: UNCHECKED . '(' expression ')'

    '('  shift, and go to state 313


state 208

   94 checked_expression: CHECKED . '(' expression ')'

    '('  shift, and go to state 314


state 209

   85 typeof_expression: TYPEOF . '(' type ')'
   86                  | TYPEOF . '(' unbound_type_name ')'
   87                  | TYPEOF . '(' VOID ')'

    '('  shift, and go to state 315


state 210

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   82 object_creation_expression: NEW . type '(' argument_listopt ')'
   83 array_creation_expression: NEW . non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | NEW . array_type array_initializer
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 316
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 317
    non_array_type           go to state 318


state 211

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  111                         | MINUS_MINUS . unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 320
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 212

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  110                         | PLUS_PLUS . unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 321
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 213

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  103                 | '+' . unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 322
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 214

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  104                 | '-' . unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 323
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 215

  603 character_literal: SINGLE_CHARACTER .

    $default  reduce using rule 603 (character_literal)


state 216

  602 hexadecimal_integer_literal: HEX_DIGITS_WITH_SUFFIX .

    $default  reduce using rule 602 (hexadecimal_integer_literal)


state 217

  599 decimal_integer_literal: DECIMAL_DIGITS .

    $default  reduce using rule 599 (decimal_integer_literal)


state 218

  606 string_literal: REGULAR_STRING_LITERAL .

    $default  reduce using rule 606 (string_literal)


state 219

  604 character_literal: SIMPLE_ESCAPE_SEQUENCE .

    $default  reduce using rule 604 (character_literal)


state 220

  600 decimal_integer_literal: DECIMAL_DIGITS_WITH_SUFFIX .

    $default  reduce using rule 600 (decimal_integer_literal)


state 221

  601 hexadecimal_integer_literal: HEX_DIGITS .

    $default  reduce using rule 601 (hexadecimal_integer_literal)


state 222

  605 character_literal: HEXADECIMAL_ESCAPE_SEQUENCE .

    $default  reduce using rule 605 (character_literal)


state 223

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   62                         | '(' . expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  112                | '(' . type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 324
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 325
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 326
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 327
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 328
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 329
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    type_name                             go to state 150
    namespace_or_type_name                go to state 122
    type                                  go to state 330
    value_type                            go to state 152
    struct_type                           go to state 153
    simple_type                           go to state 154
    numeric_type                          go to state 155
    integral_type                         go to state 331
    floating_point_type                   go to state 157
    nullable_type                         go to state 158
    non_nullable_value_type               go to state 159
    reference_type                        go to state 160
    class_type                            go to state 161
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 332
    qualified_alias_member                go to state 333
    array_type                            go to state 162
    non_array_type                        go to state 163
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 224

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  105                 | '!' . unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 334
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 225

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  106                 | '~' . unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 335
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 226

   72 predefined_type: integral_type .

    $default  reduce using rule 72 (predefined_type)


state 227

   63 member_access: primary_expression . '.' IDENTIFIER type_argument_listopt
   73 invocation_expression: primary_expression . '(' argument_listopt ')'
   80 post_increment_expression: primary_expression . PLUS_PLUS
   81 post_decrement_expression: primary_expression . MINUS_MINUS
  102 unary_expression: primary_expression .  [LT_LT, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', ',', ')', ']', ':', '}', ';']

    '.'          shift, and go to state 336
    MINUS_MINUS  shift, and go to state 337
    PLUS_PLUS    shift, and go to state 338
    '('          shift, and go to state 339

    $default  reduce using rule 102 (unary_expression)


state 228

   44 primary_expression: primary_no_array_creation_expression .  [LT_LT, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', ',', '(', ')', ']', ':', '}', ';']
   74 element_access: primary_no_array_creation_expression . '[' expression_list ']'

    '['  shift, and go to state 340

    $default  reduce using rule 44 (primary_expression)


state 229

   46 primary_no_array_creation_expression: simple_name .

    $default  reduce using rule 46 (primary_no_array_creation_expression)


state 230

   47 primary_no_array_creation_expression: parenthesized_expression .

    $default  reduce using rule 47 (primary_no_array_creation_expression)


state 231

   48 primary_no_array_creation_expression: member_access .

    $default  reduce using rule 48 (primary_no_array_creation_expression)


state 232

   64 member_access: predefined_type . '.' IDENTIFIER type_argument_listopt

    '.'  shift, and go to state 341


state 233

   49 primary_no_array_creation_expression: invocation_expression .

    $default  reduce using rule 49 (primary_no_array_creation_expression)


state 234

   50 primary_no_array_creation_expression: element_access .

    $default  reduce using rule 50 (primary_no_array_creation_expression)


state 235

   51 primary_no_array_creation_expression: this_access .

    $default  reduce using rule 51 (primary_no_array_creation_expression)


state 236

   52 primary_no_array_creation_expression: base_access .

    $default  reduce using rule 52 (primary_no_array_creation_expression)


state 237

   53 primary_no_array_creation_expression: post_increment_expression .

    $default  reduce using rule 53 (primary_no_array_creation_expression)


state 238

   54 primary_no_array_creation_expression: post_decrement_expression .

    $default  reduce using rule 54 (primary_no_array_creation_expression)


state 239

   55 primary_no_array_creation_expression: object_creation_expression .

    $default  reduce using rule 55 (primary_no_array_creation_expression)


state 240

   43 primary_expression: array_creation_expression .

    $default  reduce using rule 43 (primary_expression)


state 241

   56 primary_no_array_creation_expression: typeof_expression .

    $default  reduce using rule 56 (primary_no_array_creation_expression)


state 242

   57 primary_no_array_creation_expression: checked_expression .

    $default  reduce using rule 57 (primary_no_array_creation_expression)


state 243

   58 primary_no_array_creation_expression: unchecked_expression .

    $default  reduce using rule 58 (primary_no_array_creation_expression)


state 244

   59 primary_no_array_creation_expression: default_value_expression .

    $default  reduce using rule 59 (primary_no_array_creation_expression)


state 245

   60 primary_no_array_creation_expression: anonymous_method_expression .

    $default  reduce using rule 60 (primary_no_array_creation_expression)


state 246

  113 multiplicative_expression: unary_expression .  [LT_LT, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']
  147 assignment: unary_expression . assignment_operator expression
  148 assignment_operator: . '='
  149                    | . PLUS_EQ
  150                    | . MINUS_EQ
  151                    | . STAR_EQ
  152                    | . SLASH_EQ
  153                    | . PERCENT_EQ
  154                    | . AMP_EQ
  155                    | . BAR_EQ
  156                    | . CARET_EQ
  157                    | . LT_LT_EQ
  158                    | . RIGHT_SHIFT_ASSIGNMENT

    '='                     shift, and go to state 342
    BAR_EQ                  shift, and go to state 343
    CARET_EQ                shift, and go to state 344
    AMP_EQ                  shift, and go to state 345
    RIGHT_SHIFT_ASSIGNMENT  shift, and go to state 346
    LT_LT_EQ                shift, and go to state 347
    MINUS_EQ                shift, and go to state 348
    PLUS_EQ                 shift, and go to state 349
    PERCENT_EQ              shift, and go to state 350
    SLASH_EQ                shift, and go to state 351
    STAR_EQ                 shift, and go to state 352

    $default  reduce using rule 113 (multiplicative_expression)

    assignment_operator  go to state 353


state 247

  107 unary_expression: pre_increment_expression .

    $default  reduce using rule 107 (unary_expression)


state 248

  108 unary_expression: pre_decrement_expression .

    $default  reduce using rule 108 (unary_expression)


state 249

  109 unary_expression: cast_expression .

    $default  reduce using rule 109 (unary_expression)


state 250

  114 multiplicative_expression: multiplicative_expression . '*' unary_expression
  115                          | multiplicative_expression . '/' unary_expression
  116                          | multiplicative_expression . '%' unary_expression
  117 additive_expression: multiplicative_expression .  [LT_LT, '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '*'  shift, and go to state 354
    '/'  shift, and go to state 355
    '%'  shift, and go to state 356

    $default  reduce using rule 117 (additive_expression)


state 251

  118 additive_expression: additive_expression . '+' multiplicative_expression
  119                    | additive_expression . '-' multiplicative_expression
  120 shift_expression: additive_expression .  [LT_LT, RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '+'  shift, and go to state 357
    '-'  shift, and go to state 358

    $default  reduce using rule 120 (shift_expression)


state 252

  121 shift_expression: shift_expression . LT_LT additive_expression
  122                 | shift_expression . RIGHT_SHIFT additive_expression
  123 relational_expression: shift_expression .  ['<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    LT_LT        shift, and go to state 359
    RIGHT_SHIFT  shift, and go to state 360

    $default  reduce using rule 123 (relational_expression)


state 253

  124 relational_expression: relational_expression . '<' shift_expression
  125                      | relational_expression . '>' shift_expression
  126                      | relational_expression . LE shift_expression
  127                      | relational_expression . GE shift_expression
  128                      | relational_expression . IS type
  129                      | relational_expression . AS type
  130 equality_expression: relational_expression .  [NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '<'  shift, and go to state 361
    '>'  shift, and go to state 362
    AS   shift, and go to state 363
    IS   shift, and go to state 364
    GE   shift, and go to state 365
    LE   shift, and go to state 366

    $default  reduce using rule 130 (equality_expression)


state 254

  131 equality_expression: equality_expression . EQ_EQ relational_expression
  132                    | equality_expression . NE relational_expression
  133 and_expression: equality_expression .  ['&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    NE     shift, and go to state 367
    EQ_EQ  shift, and go to state 368

    $default  reduce using rule 133 (and_expression)


state 255

  134 and_expression: and_expression . '&' equality_expression
  135 exclusive_or_expression: and_expression .  ['^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '&'  shift, and go to state 369

    $default  reduce using rule 135 (exclusive_or_expression)


state 256

  136 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  137 inclusive_or_expression: exclusive_or_expression .  ['|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '^'  shift, and go to state 370

    $default  reduce using rule 137 (inclusive_or_expression)


state 257

  138 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  139 conditional_and_expression: inclusive_or_expression .  [AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '|'  shift, and go to state 371

    $default  reduce using rule 139 (conditional_and_expression)


state 258

  140 conditional_and_expression: conditional_and_expression . AMP_AMP inclusive_or_expression
  141 conditional_or_expression: conditional_and_expression .  [BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    AMP_AMP  shift, and go to state 372

    $default  reduce using rule 141 (conditional_or_expression)


state 259

  142 conditional_or_expression: conditional_or_expression . BAR_BAR conditional_and_expression
  143 null_coalescing_expression: conditional_or_expression .  ['?', ',', ')', ']', ':', '}', ';']
  144                           | conditional_or_expression . QM_QM null_coalescing_expression

    BAR_BAR  shift, and go to state 373
    QM_QM    shift, and go to state 374

    $default  reduce using rule 143 (null_coalescing_expression)


state 260

  145 conditional_expression: null_coalescing_expression .  [',', ')', ']', ':', '}', ';']
  146                       | null_coalescing_expression . '?' expression ':' expression

    '?'  shift, and go to state 375

    $default  reduce using rule 145 (conditional_expression)


state 261

  159 expression: conditional_expression .

    $default  reduce using rule 159 (expression)


state 262

  160 expression: assignment .

    $default  reduce using rule 160 (expression)


state 263

  489 attribute_argument_expression: expression .

    $default  reduce using rule 489 (attribute_argument_expression)


state 264

   65 member_access: qualified_alias_member . '.' IDENTIFIER type_argument_listopt

    '.'  shift, and go to state 376


state 265

  481 attribute_arguments: '(' positional_argument_list . ',' named_argument_list ')'
  484 positional_argument_list: positional_argument_list . ',' positional_argument
  690 positional_argument_listopt: positional_argument_list .  [')']

    ','  shift, and go to state 377

    $default  reduce using rule 690 (positional_argument_listopt)


state 266

  483 positional_argument_list: positional_argument .

    $default  reduce using rule 483 (positional_argument_list)


state 267

  482 attribute_arguments: '(' named_argument_list . ')'
  487 named_argument_list: named_argument_list . ',' named_argument

    ','  shift, and go to state 378
    ')'  shift, and go to state 379


state 268

  486 named_argument_list: named_argument .

    $default  reduce using rule 486 (named_argument_list)


state 269

  485 positional_argument: attribute_argument_expression .

    $default  reduce using rule 485 (positional_argument)


state 270

   45 primary_no_array_creation_expression: literal .

    $default  reduce using rule 45 (primary_no_array_creation_expression)


state 271

  590 literal: boolean_literal .

    $default  reduce using rule 590 (literal)


state 272

  591 literal: integer_literal .

    $default  reduce using rule 591 (literal)


state 273

  597 integer_literal: decimal_integer_literal .

    $default  reduce using rule 597 (integer_literal)


state 274

  598 integer_literal: hexadecimal_integer_literal .

    $default  reduce using rule 598 (integer_literal)


state 275

  592 literal: character_literal .

    $default  reduce using rule 592 (literal)


state 276

  593 literal: string_literal .

    $default  reduce using rule 593 (literal)


state 277

  480 attribute_arguments: '(' positional_argument_listopt . ')'

    ')'  shift, and go to state 380


state 278

  262 qualified_identifier: qualified_identifier '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 381


state 279

  263 namespace_body: '{' . extern_alias_directivesopt using_directivesopt namespace_member_declarationsopt '}'
  264 extern_alias_directives: . extern_alias_directive
  265                        | . extern_alias_directives extern_alias_directive
  266 extern_alias_directive: . EXTERN ALIAS IDENTIFIER ';'
  607 extern_alias_directivesopt: .  [ABSTRACT, CLASS, DELEGATE, ENUM, EXTERN, INTERFACE, INTERNAL, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEALED, STATIC, STRUCT, USING, VIRTUAL, PARTIAL, NEW, '[', '}']
  608                           | . extern_alias_directives

    EXTERN  shift, and go to state 2

    EXTERN    [reduce using rule 607 (extern_alias_directivesopt)]
    $default  reduce using rule 607 (extern_alias_directivesopt)

    extern_alias_directives     go to state 4
    extern_alias_directive      go to state 5
    extern_alias_directivesopt  go to state 382


state 280

  260 namespace_declaration: NAMESPACE qualified_identifier namespace_body . SemicolonOpt
  691 SemicolonOpt: .  [$end, ABSTRACT, CLASS, DELEGATE, ENUM, EXTERN, INTERFACE, INTERNAL, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEALED, STATIC, STRUCT, VIRTUAL, PARTIAL, NEW, '[', '}']
  692             | . ';'

    ';'  shift, and go to state 383

    $default  reduce using rule 691 (SemicolonOpt)

    SemicolonOpt  go to state 384


state 281

  295 modifier: ABSTRACT .

    $default  reduce using rule 295 (modifier)


state 282

  297 class_declaration: attributesopt modifiers_opt CLASS . IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt

    IDENTIFIER  shift, and go to state 385


state 283

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  464 delegate_declaration: attributesopt modifiers_opt DELEGATE . type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | attributesopt modifiers_opt DELEGATE . VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    VOID        shift, and go to state 386
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 387
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 284

  456 enum_declaration: attributesopt modifiers_opt ENUM . IDENTIFIER enum_baseopt enum_body SemicolonOpt

    IDENTIFIER  shift, and go to state 388


state 285

  296 modifier: EXTERN .

    $default  reduce using rule 296 (modifier)


state 286

  438 interface_declaration: attributesopt modifiers_opt INTERFACE . IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt

    IDENTIFIER  shift, and go to state 389


state 287

  289 modifier: INTERNAL .

    $default  reduce using rule 289 (modifier)


state 288

  294 modifier: OVERRIDE .

    $default  reduce using rule 294 (modifier)


state 289

  290 modifier: PRIVATE .

    $default  reduce using rule 290 (modifier)


state 290

  288 modifier: PROTECTED .

    $default  reduce using rule 288 (modifier)


state 291

  287 modifier: PUBLIC .

    $default  reduce using rule 287 (modifier)


state 292

  293 modifier: SEALED .

    $default  reduce using rule 293 (modifier)


state 293

  291 modifier: STATIC .

    $default  reduce using rule 291 (modifier)


state 294

  411 struct_declaration: attributesopt modifiers_opt STRUCT . IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt

    IDENTIFIER  shift, and go to state 390


state 295

  292 modifier: VIRTUAL .

    $default  reduce using rule 292 (modifier)


state 296

  286 modifier: PARTIAL .

    $default  reduce using rule 286 (modifier)


state 297

  285 modifier: NEW .

    $default  reduce using rule 285 (modifier)


state 298

  284 modifiers_opt: modifiers_opt modifier .

    $default  reduce using rule 284 (modifiers_opt)


state 299

  432 dim_separators: ',' .

    $default  reduce using rule 432 (dim_separators)


state 300

  433 dim_separators: dim_separators . ','
  616 dim_separatorsopt: dim_separators .  [']']

    ','  shift, and go to state 391

    $default  reduce using rule 616 (dim_separatorsopt)


state 301

  431 rank_specifier: '[' dim_separatorsopt . ']'

    ']'  shift, and go to state 392


state 302

  430 rank_specifiers: rank_specifiers rank_specifier .

    $default  reduce using rule 430 (rank_specifiers)


state 303

  495 type_arguments: type_arguments ',' type_argument .

    $default  reduce using rule 495 (type_arguments)


state 304

  471 attribute_section: '[' attribute_target_specifier attribute_list ',' ']' .

    $default  reduce using rule 471 (attribute_section)


state 305

   78 base_access: BASE '.' . IDENTIFIER type_argument_listopt

    IDENTIFIER  shift, and go to state 393


state 306

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   75 expression_list: . expression
   76                | . expression_list ',' expression
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   79            | BASE '[' . expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    expression_list                       go to state 394
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 395
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 307

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   96 default_value_expression: DEFAULT '(' . type ')'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 396
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 308

   98 anonymous_method_signature: '(' . anonymous_method_parameter_listopt ')'
   99 anonymous_method_parameter_list: . anonymous_method_parameter
  100                                | . anonymous_method_parameter_list ',' anonymous_method_parameter
  101 anonymous_method_parameter: . parameter_modifieropt type IDENTIFIER
  339 parameter_modifier: . REF
  340                   | . OUT
  629 anonymous_method_parameter_listopt: .  [')']
  630                                   | . anonymous_method_parameter_list
  631 parameter_modifieropt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  632                      | . parameter_modifier

    OUT  shift, and go to state 397
    REF  shift, and go to state 398

    ')'       reduce using rule 629 (anonymous_method_parameter_listopt)
    $default  reduce using rule 631 (parameter_modifieropt)

    anonymous_method_parameter_list     go to state 399
    anonymous_method_parameter          go to state 400
    parameter_modifier                  go to state 401
    anonymous_method_parameter_listopt  go to state 402
    parameter_modifieropt               go to state 403


state 309

  628 anonymous_method_signatureopt: anonymous_method_signature .

    $default  reduce using rule 628 (anonymous_method_signatureopt)


state 310

   97 anonymous_method_expression: DELEGATE anonymous_method_signatureopt . block
  178 block: . '{' statement_listopt '}'

    '{'  shift, and go to state 404

    block  go to state 405


state 311

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  488 named_argument: IDENTIFIER '=' . attribute_argument_expression
  489 attribute_argument_expression: . expression
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 263
    qualified_alias_member                go to state 264
    attribute_argument_expression         go to state 406
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 312

   61 simple_name: IDENTIFIER type_argument_listopt .

    $default  reduce using rule 61 (simple_name)


state 313

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   95                     | UNCHECKED '(' . expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 407
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 314

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   94                   | CHECKED '(' . expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 408
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 315

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   85 typeof_expression: TYPEOF '(' . type ')'
   86                  | TYPEOF '(' . unbound_type_name ')'
   87                  | TYPEOF '(' . VOID ')'
   88 unbound_type_name: . IDENTIFIER generic_dimension_specifieropt
   89                  | . IDENTIFIER SEMI_SEMI IDENTIFIER generic_dimension_specifieropt
   90                  | . unbound_type_name '.' IDENTIFIER generic_dimension_specifieropt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    VOID        shift, and go to state 409
    IDENTIFIER  shift, and go to state 410

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 411
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    unbound_type_name        go to state 412
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 316

   82 object_creation_expression: NEW type . '(' argument_listopt ')'

    '('  shift, and go to state 413


state 317

   34 reference_type: array_type .  ['(']
   84 array_creation_expression: NEW array_type . array_initializer
  434 array_initializer: . '{' variable_initializer_listopt '}'
  435                  | . '{' variable_initializer_list ',' '}'

    '{'  shift, and go to state 414

    $default  reduce using rule 34 (reference_type)

    array_initializer  go to state 415


state 318

   83 array_creation_expression: NEW non_array_type . '[' expression_list ']' rank_specifiersopt array_initializeropt
  426 array_type: non_array_type . rank_specifiers
  429 rank_specifiers: . rank_specifier
  430                | . rank_specifiers rank_specifier
  431 rank_specifier: . '[' dim_separatorsopt ']'

    '['  shift, and go to state 416

    rank_specifiers  go to state 183
    rank_specifier   go to state 184


state 319

   61 simple_name: IDENTIFIER . type_argument_listopt
  282 qualified_alias_member: IDENTIFIER . SEMI_SEMI IDENTIFIER type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [LT_LT, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', ',', '(', ')', '[', ']', ':', '}', ';']
  614                      | . type_argument_list

    SEMI_SEMI  shift, and go to state 28
    '<'        shift, and go to state 29

    '<'       [reduce using rule 613 (type_argument_listopt)]
    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 312


state 320

  111 pre_decrement_expression: MINUS_MINUS unary_expression .

    $default  reduce using rule 111 (pre_decrement_expression)


state 321

  110 pre_increment_expression: PLUS_PLUS unary_expression .

    $default  reduce using rule 110 (pre_increment_expression)


state 322

  103 unary_expression: '+' unary_expression .

    $default  reduce using rule 103 (unary_expression)


state 323

  104 unary_expression: '-' unary_expression .

    $default  reduce using rule 104 (unary_expression)


state 324

   15 simple_type: BOOL .  [IDENTIFIER, '?', ')', '[']
   66 predefined_type: BOOL .  ['.']

    '.'       reduce using rule 66 (predefined_type)
    $default  reduce using rule 15 (simple_type)


state 325

   18 numeric_type: DECIMAL .  [IDENTIFIER, '?', ')', '[']
   67 predefined_type: DECIMAL .  ['.']

    '.'       reduce using rule 67 (predefined_type)
    $default  reduce using rule 18 (numeric_type)


state 326

   29 floating_point_type: DOUBLE .  [IDENTIFIER, '?', ')', '[']
   68 predefined_type: DOUBLE .  ['.']

    '.'       reduce using rule 68 (predefined_type)
    $default  reduce using rule 29 (floating_point_type)


state 327

   28 floating_point_type: FLOAT .  [IDENTIFIER, '?', ')', '[']
   69 predefined_type: FLOAT .  ['.']

    '.'       reduce using rule 69 (predefined_type)
    $default  reduce using rule 28 (floating_point_type)


state 328

   36 class_type: STRING .  [IDENTIFIER, ')', '[']
   71 predefined_type: STRING .  ['.']

    '.'       reduce using rule 71 (predefined_type)
    $default  reduce using rule 36 (class_type)


state 329

    5 namespace_or_type_name: IDENTIFIER . type_argument_listopt
   61 simple_name: IDENTIFIER . type_argument_listopt
  282 qualified_alias_member: IDENTIFIER . SEMI_SEMI IDENTIFIER type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [OBJECT, LT_LT, IDENTIFIER, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', '(', ')', '[']
  614                      | . type_argument_list

    SEMI_SEMI  shift, and go to state 28
    '<'        shift, and go to state 29

    '<'       [reduce using rule 613 (type_argument_listopt)]
    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 417


state 330

  112 cast_expression: '(' type . ')' unary_expression

    ')'  shift, and go to state 418


state 331

   16 numeric_type: integral_type .  [IDENTIFIER, '?', ')', '[']
   72 predefined_type: integral_type .  ['.']

    '.'       reduce using rule 72 (predefined_type)
    $default  reduce using rule 16 (numeric_type)


state 332

   62 parenthesized_expression: '(' expression . ')'

    ')'  shift, and go to state 419


state 333

    6 namespace_or_type_name: qualified_alias_member .  [OBJECT, IDENTIFIER, '.', '?', ')']
   65 member_access: qualified_alias_member . '.' IDENTIFIER type_argument_listopt

    '.'  shift, and go to state 376

    '.'       [reduce using rule 6 (namespace_or_type_name)]
    $default  reduce using rule 6 (namespace_or_type_name)


state 334

  105 unary_expression: '!' unary_expression .

    $default  reduce using rule 105 (unary_expression)


state 335

  106 unary_expression: '~' unary_expression .

    $default  reduce using rule 106 (unary_expression)


state 336

   63 member_access: primary_expression '.' . IDENTIFIER type_argument_listopt

    IDENTIFIER  shift, and go to state 420


state 337

   81 post_decrement_expression: primary_expression MINUS_MINUS .

    $default  reduce using rule 81 (post_decrement_expression)


state 338

   80 post_increment_expression: primary_expression PLUS_PLUS .

    $default  reduce using rule 80 (post_increment_expression)


state 339

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   38 argument_list: . argument
   39              | . argument_list ',' argument
   40 argument: . expression
   41         | . REF variable_reference
   42         | . OUT variable_reference
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   73                      | primary_expression '(' . argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  617 argument_listopt: .  [')']
  618                 | . argument_list

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    OUT                          shift, and go to state 421
    REF                          shift, and go to state 422
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    $default  reduce using rule 617 (argument_listopt)

    integral_type                         go to state 226
    argument_list                         go to state 423
    argument                              go to state 424
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 425
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    argument_listopt                      go to state 426


state 340

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   74               | primary_no_array_creation_expression '[' . expression_list ']'
   75 expression_list: . expression
   76                | . expression_list ',' expression
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    expression_list                       go to state 427
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 395
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 341

   64 member_access: predefined_type '.' . IDENTIFIER type_argument_listopt

    IDENTIFIER  shift, and go to state 428


state 342

  148 assignment_operator: '=' .

    $default  reduce using rule 148 (assignment_operator)


state 343

  155 assignment_operator: BAR_EQ .

    $default  reduce using rule 155 (assignment_operator)


state 344

  156 assignment_operator: CARET_EQ .

    $default  reduce using rule 156 (assignment_operator)


state 345

  154 assignment_operator: AMP_EQ .

    $default  reduce using rule 154 (assignment_operator)


state 346

  158 assignment_operator: RIGHT_SHIFT_ASSIGNMENT .

    $default  reduce using rule 158 (assignment_operator)


state 347

  157 assignment_operator: LT_LT_EQ .

    $default  reduce using rule 157 (assignment_operator)


state 348

  150 assignment_operator: MINUS_EQ .

    $default  reduce using rule 150 (assignment_operator)


state 349

  149 assignment_operator: PLUS_EQ .

    $default  reduce using rule 149 (assignment_operator)


state 350

  153 assignment_operator: PERCENT_EQ .

    $default  reduce using rule 153 (assignment_operator)


state 351

  152 assignment_operator: SLASH_EQ .

    $default  reduce using rule 152 (assignment_operator)


state 352

  151 assignment_operator: STAR_EQ .

    $default  reduce using rule 151 (assignment_operator)


state 353

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  147           | unary_expression assignment_operator . expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 429
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 354

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  114 multiplicative_expression: multiplicative_expression '*' . unary_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 430
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 355

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  115 multiplicative_expression: multiplicative_expression '/' . unary_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 431
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 356

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  116 multiplicative_expression: multiplicative_expression '%' . unary_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 432
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 357

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  118 additive_expression: additive_expression '+' . multiplicative_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 434
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 358

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  119 additive_expression: additive_expression '-' . multiplicative_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 435
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 359

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  121 shift_expression: shift_expression LT_LT . additive_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 436
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 360

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  122 shift_expression: shift_expression RIGHT_SHIFT . additive_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 437
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 361

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  124 relational_expression: relational_expression '<' . shift_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 438
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 362

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  125 relational_expression: relational_expression '>' . shift_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 439
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 363

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  129 relational_expression: relational_expression AS . type
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 440
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 364

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  128 relational_expression: relational_expression IS . type
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 441
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 365

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  127 relational_expression: relational_expression GE . shift_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 442
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 366

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  126 relational_expression: relational_expression LE . shift_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 443
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 367

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  132 equality_expression: equality_expression NE . relational_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 444
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 368

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  131 equality_expression: equality_expression EQ_EQ . relational_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 445
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 369

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  134 and_expression: and_expression '&' . equality_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 446
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 370

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  136 exclusive_or_expression: exclusive_or_expression '^' . and_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 447
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 371

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  138 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 448
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 372

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  140 conditional_and_expression: conditional_and_expression AMP_AMP . inclusive_or_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 449
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 373

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  142 conditional_or_expression: conditional_or_expression BAR_BAR . conditional_and_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 450
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 374

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  144                           | conditional_or_expression QM_QM . null_coalescing_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 433
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 451
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 375

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  146                       | null_coalescing_expression '?' . expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 452
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 376

   65 member_access: qualified_alias_member '.' . IDENTIFIER type_argument_listopt

    IDENTIFIER  shift, and go to state 453


state 377

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  481 attribute_arguments: '(' positional_argument_list ',' . named_argument_list ')'
  484 positional_argument_list: positional_argument_list ',' . positional_argument
  485 positional_argument: . attribute_argument_expression
  486 named_argument_list: . named_argument
  487                    | . named_argument_list ',' named_argument
  488 named_argument: . IDENTIFIER '=' attribute_argument_expression
  489 attribute_argument_expression: . expression
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 206
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 263
    qualified_alias_member                go to state 264
    positional_argument                   go to state 454
    named_argument_list                   go to state 455
    named_argument                        go to state 268
    attribute_argument_expression         go to state 269
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 378

  487 named_argument_list: named_argument_list ',' . named_argument
  488 named_argument: . IDENTIFIER '=' attribute_argument_expression

    IDENTIFIER  shift, and go to state 456

    named_argument  go to state 457


state 379

  482 attribute_arguments: '(' named_argument_list ')' .

    $default  reduce using rule 482 (attribute_arguments)


state 380

  480 attribute_arguments: '(' positional_argument_listopt ')' .

    $default  reduce using rule 480 (attribute_arguments)


state 381

  262 qualified_identifier: qualified_identifier '.' IDENTIFIER .

    $default  reduce using rule 262 (qualified_identifier)


state 382

  263 namespace_body: '{' extern_alias_directivesopt . using_directivesopt namespace_member_declarationsopt '}'
  267 using_directives: . using_directive
  268                 | . using_directives using_directive
  269 using_directive: . using_alias_directive
  270                | . using_namespace_directive
  271 using_alias_directive: . USING IDENTIFIER '=' namespace_or_type_name ';'
  272 using_namespace_directive: . USING namespace_name ';'
  609 using_directivesopt: .  [ABSTRACT, CLASS, DELEGATE, ENUM, EXTERN, INTERFACE, INTERNAL, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEALED, STATIC, STRUCT, VIRTUAL, PARTIAL, NEW, '[', '}']
  610                    | . using_directives

    USING  shift, and go to state 10

    $default  reduce using rule 609 (using_directivesopt)

    using_directives           go to state 11
    using_directive            go to state 12
    using_alias_directive      go to state 13
    using_namespace_directive  go to state 14
    using_directivesopt        go to state 458


state 383

  692 SemicolonOpt: ';' .

    $default  reduce using rule 692 (SemicolonOpt)


state 384

  260 namespace_declaration: NAMESPACE qualified_identifier namespace_body SemicolonOpt .

    $default  reduce using rule 260 (namespace_declaration)


state 385

  297 class_declaration: attributesopt modifiers_opt CLASS IDENTIFIER . type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  490 type_parameter_list: . '<' type_parameters '>'
  653 type_parameter_listopt: .  [WHERE, ':', '{']
  654                       | . type_parameter_list

    '<'  shift, and go to state 459

    $default  reduce using rule 653 (type_parameter_listopt)

    type_parameter_list     go to state 460
    type_parameter_listopt  go to state 461


state 386

  465 delegate_declaration: attributesopt modifiers_opt DELEGATE VOID . IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    IDENTIFIER  shift, and go to state 462


state 387

  464 delegate_declaration: attributesopt modifiers_opt DELEGATE type . IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    IDENTIFIER  shift, and go to state 463


state 388

  456 enum_declaration: attributesopt modifiers_opt ENUM IDENTIFIER . enum_baseopt enum_body SemicolonOpt
  457 enum_base: . ':' integral_type
  683 enum_baseopt: .  ['{']
  684             | . enum_base

    ':'  shift, and go to state 464

    $default  reduce using rule 683 (enum_baseopt)

    enum_base     go to state 465
    enum_baseopt  go to state 466


state 389

  438 interface_declaration: attributesopt modifiers_opt INTERFACE IDENTIFIER . type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  490 type_parameter_list: . '<' type_parameters '>'
  653 type_parameter_listopt: .  [WHERE, ':', '{']
  654                       | . type_parameter_list

    '<'  shift, and go to state 459

    $default  reduce using rule 653 (type_parameter_listopt)

    type_parameter_list     go to state 460
    type_parameter_listopt  go to state 467


state 390

  411 struct_declaration: attributesopt modifiers_opt STRUCT IDENTIFIER . type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  490 type_parameter_list: . '<' type_parameters '>'
  653 type_parameter_listopt: .  [WHERE, ':', '{']
  654                       | . type_parameter_list

    '<'  shift, and go to state 459

    $default  reduce using rule 653 (type_parameter_listopt)

    type_parameter_list     go to state 460
    type_parameter_listopt  go to state 468


state 391

  433 dim_separators: dim_separators ',' .

    $default  reduce using rule 433 (dim_separators)


state 392

  431 rank_specifier: '[' dim_separatorsopt ']' .

    $default  reduce using rule 431 (rank_specifier)


state 393

   78 base_access: BASE '.' IDENTIFIER . type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [LT_LT, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', ',', '(', ')', '[', ']', ':', '}', ';']
  614                      | . type_argument_list

    '<'  shift, and go to state 29

    '<'       [reduce using rule 613 (type_argument_listopt)]
    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 469


state 394

   76 expression_list: expression_list . ',' expression
   79 base_access: BASE '[' expression_list . ']'

    ','  shift, and go to state 470
    ']'  shift, and go to state 471


state 395

   75 expression_list: expression .

    $default  reduce using rule 75 (expression_list)


state 396

   96 default_value_expression: DEFAULT '(' type . ')'

    ')'  shift, and go to state 472


state 397

  340 parameter_modifier: OUT .

    $default  reduce using rule 340 (parameter_modifier)


state 398

  339 parameter_modifier: REF .

    $default  reduce using rule 339 (parameter_modifier)


state 399

  100 anonymous_method_parameter_list: anonymous_method_parameter_list . ',' anonymous_method_parameter
  630 anonymous_method_parameter_listopt: anonymous_method_parameter_list .  [')']

    ','  shift, and go to state 473

    $default  reduce using rule 630 (anonymous_method_parameter_listopt)


state 400

   99 anonymous_method_parameter_list: anonymous_method_parameter .

    $default  reduce using rule 99 (anonymous_method_parameter_list)


state 401

  632 parameter_modifieropt: parameter_modifier .

    $default  reduce using rule 632 (parameter_modifieropt)


state 402

   98 anonymous_method_signature: '(' anonymous_method_parameter_listopt . ')'

    ')'  shift, and go to state 474


state 403

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  101 anonymous_method_parameter: parameter_modifieropt . type IDENTIFIER
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 475
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 404

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  163 statement: . labeled_statement
  164          | . declaration_statement
  165          | . embedded_statement
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  178      | '{' . statement_listopt '}'
  179 statement_list: . statement
  180               | . statement_list statement
  181 empty_statement: . ';'
  182 labeled_statement: . IDENTIFIER ':' statement
  183 declaration_statement: . local_variable_declaration ';'
  184                      | . local_constant_declaration ';'
  185 local_variable_declaration: . type local_variable_declarators
  192 local_constant_declaration: . CONST type constant_declarators_loc
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  633 statement_listopt: .  ['}']
  634                  | . statement_list

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 324
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONST                        shift, and go to state 477
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 325
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 326
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 327
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 328
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 492
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    $default  reduce using rule 633 (statement_listopt)

    type_name                             go to state 150
    namespace_or_type_name                go to state 122
    type                                  go to state 496
    value_type                            go to state 152
    struct_type                           go to state 153
    simple_type                           go to state 154
    numeric_type                          go to state 155
    integral_type                         go to state 331
    floating_point_type                   go to state 157
    nullable_type                         go to state 158
    non_nullable_value_type               go to state 159
    reference_type                        go to state 160
    class_type                            go to state 161
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    statement                             go to state 505
    embedded_statement                    go to state 506
    block                                 go to state 507
    statement_list                        go to state 508
    empty_statement                       go to state 509
    labeled_statement                     go to state 510
    declaration_statement                 go to state 511
    local_variable_declaration            go to state 512
    local_constant_declaration            go to state 513
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 333
    array_type                            go to state 162
    non_array_type                        go to state 163
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    statement_listopt                     go to state 536


state 405

   97 anonymous_method_expression: DELEGATE anonymous_method_signatureopt block .

    $default  reduce using rule 97 (anonymous_method_expression)


state 406

  488 named_argument: IDENTIFIER '=' attribute_argument_expression .

    $default  reduce using rule 488 (named_argument)


state 407

   95 unchecked_expression: UNCHECKED '(' expression . ')'

    ')'  shift, and go to state 537


state 408

   94 checked_expression: CHECKED '(' expression . ')'

    ')'  shift, and go to state 538


state 409

   87 typeof_expression: TYPEOF '(' VOID . ')'

    ')'  shift, and go to state 539


state 410

    5 namespace_or_type_name: IDENTIFIER . type_argument_listopt
   88 unbound_type_name: IDENTIFIER . generic_dimension_specifieropt
   89                  | IDENTIFIER . SEMI_SEMI IDENTIFIER generic_dimension_specifieropt
   91 generic_dimension_specifier: . '<' commasopt '>'
  282 qualified_alias_member: IDENTIFIER . SEMI_SEMI IDENTIFIER type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [OBJECT, '.', '?', ')']
  614                      | . type_argument_list
  623 generic_dimension_specifieropt: .  ['.', ')']
  624                               | . generic_dimension_specifier

    SEMI_SEMI  shift, and go to state 540
    '<'        shift, and go to state 541

    '.'       reduce using rule 613 (type_argument_listopt)
    '.'       [reduce using rule 623 (generic_dimension_specifieropt)]
    ')'       reduce using rule 613 (type_argument_listopt)
    ')'       [reduce using rule 623 (generic_dimension_specifieropt)]
    $default  reduce using rule 613 (type_argument_listopt)

    generic_dimension_specifier     go to state 542
    type_argument_list              go to state 31
    type_argument_listopt           go to state 32
    generic_dimension_specifieropt  go to state 543


state 411

   85 typeof_expression: TYPEOF '(' type . ')'

    ')'  shift, and go to state 544


state 412

   86 typeof_expression: TYPEOF '(' unbound_type_name . ')'
   90 unbound_type_name: unbound_type_name . '.' IDENTIFIER generic_dimension_specifieropt

    '.'  shift, and go to state 545
    ')'  shift, and go to state 546


state 413

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   38 argument_list: . argument
   39              | . argument_list ',' argument
   40 argument: . expression
   41         | . REF variable_reference
   42         | . OUT variable_reference
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   82                           | NEW type '(' . argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  617 argument_listopt: .  [')']
  618                 | . argument_list

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    OUT                          shift, and go to state 421
    REF                          shift, and go to state 422
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    $default  reduce using rule 617 (argument_listopt)

    integral_type                         go to state 226
    argument_list                         go to state 423
    argument                              go to state 424
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 425
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    argument_listopt                      go to state 547


state 414

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  324 variable_initializer: . expression
  325                     | . array_initializer
  434 array_initializer: . '{' variable_initializer_listopt '}'
  434                  | '{' . variable_initializer_listopt '}'
  435                  | . '{' variable_initializer_list ',' '}'
  435                  | '{' . variable_initializer_list ',' '}'
  436 variable_initializer_list: . variable_initializer
  437                          | . variable_initializer_list ',' variable_initializer
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  675 variable_initializer_listopt: .  ['}']
  676                             | . variable_initializer_list

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 414

    $default  reduce using rule 675 (variable_initializer_listopt)

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 548
    qualified_alias_member                go to state 264
    variable_initializer                  go to state 549
    array_initializer                     go to state 550
    variable_initializer_list             go to state 551
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    variable_initializer_listopt          go to state 552


state 415

   84 array_creation_expression: NEW array_type array_initializer .

    $default  reduce using rule 84 (array_creation_expression)


state 416

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   75 expression_list: . expression
   76                | . expression_list ',' expression
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   83                          | NEW non_array_type '[' . expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  431 rank_specifier: '[' . dim_separatorsopt ']'
  432 dim_separators: . ','
  433               | . dim_separators ','
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  615 dim_separatorsopt: .  [']']
  616                  | . dim_separators

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    ','                          shift, and go to state 299
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    $default  reduce using rule 615 (dim_separatorsopt)

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    expression_list                       go to state 553
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 395
    qualified_alias_member                go to state 264
    dim_separators                        go to state 300
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    dim_separatorsopt                     go to state 301


state 417

    5 namespace_or_type_name: IDENTIFIER type_argument_listopt .  [OBJECT, IDENTIFIER, '.', '?', ')']
   61 simple_name: IDENTIFIER type_argument_listopt .  [LT_LT, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', '(', ')', '[']

    OBJECT      reduce using rule 5 (namespace_or_type_name)
    IDENTIFIER  reduce using rule 5 (namespace_or_type_name)
    '.'         reduce using rule 5 (namespace_or_type_name)
    '.'         [reduce using rule 61 (simple_name)]
    '?'         reduce using rule 5 (namespace_or_type_name)
    '?'         [reduce using rule 61 (simple_name)]
    ')'         reduce using rule 5 (namespace_or_type_name)
    ')'         [reduce using rule 61 (simple_name)]
    $default    reduce using rule 61 (simple_name)


state 418

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  112                | '(' type ')' . unary_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 554
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 419

   62 parenthesized_expression: '(' expression ')' .

    $default  reduce using rule 62 (parenthesized_expression)


state 420

   63 member_access: primary_expression '.' IDENTIFIER . type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [LT_LT, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', ',', '(', ')', '[', ']', ':', '}', ';']
  614                      | . type_argument_list

    '<'  shift, and go to state 29

    '<'       [reduce using rule 613 (type_argument_listopt)]
    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 555


state 421

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   37 variable_reference: . expression
   42 argument: OUT . variable_reference
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    variable_reference                    go to state 556
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 557
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 422

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   37 variable_reference: . expression
   41 argument: REF . variable_reference
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    variable_reference                    go to state 558
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 557
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 423

   39 argument_list: argument_list . ',' argument
  618 argument_listopt: argument_list .  [')']

    ','  shift, and go to state 559

    $default  reduce using rule 618 (argument_listopt)


state 424

   38 argument_list: argument .

    $default  reduce using rule 38 (argument_list)


state 425

   40 argument: expression .

    $default  reduce using rule 40 (argument)


state 426

   73 invocation_expression: primary_expression '(' argument_listopt . ')'

    ')'  shift, and go to state 560


state 427

   74 element_access: primary_no_array_creation_expression '[' expression_list . ']'
   76 expression_list: expression_list . ',' expression

    ','  shift, and go to state 470
    ']'  shift, and go to state 561


state 428

   64 member_access: predefined_type '.' IDENTIFIER . type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [LT_LT, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', ',', '(', ')', '[', ']', ':', '}', ';']
  614                      | . type_argument_list

    '<'  shift, and go to state 29

    '<'       [reduce using rule 613 (type_argument_listopt)]
    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 562


state 429

  147 assignment: unary_expression assignment_operator expression .

    $default  reduce using rule 147 (assignment)


state 430

  114 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 114 (multiplicative_expression)


state 431

  115 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 115 (multiplicative_expression)


state 432

  116 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 116 (multiplicative_expression)


state 433

  113 multiplicative_expression: unary_expression .

    $default  reduce using rule 113 (multiplicative_expression)


state 434

  114 multiplicative_expression: multiplicative_expression . '*' unary_expression
  115                          | multiplicative_expression . '/' unary_expression
  116                          | multiplicative_expression . '%' unary_expression
  118 additive_expression: additive_expression '+' multiplicative_expression .  [LT_LT, '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '*'  shift, and go to state 354
    '/'  shift, and go to state 355
    '%'  shift, and go to state 356

    $default  reduce using rule 118 (additive_expression)


state 435

  114 multiplicative_expression: multiplicative_expression . '*' unary_expression
  115                          | multiplicative_expression . '/' unary_expression
  116                          | multiplicative_expression . '%' unary_expression
  119 additive_expression: additive_expression '-' multiplicative_expression .  [LT_LT, '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '*'  shift, and go to state 354
    '/'  shift, and go to state 355
    '%'  shift, and go to state 356

    $default  reduce using rule 119 (additive_expression)


state 436

  118 additive_expression: additive_expression . '+' multiplicative_expression
  119                    | additive_expression . '-' multiplicative_expression
  121 shift_expression: shift_expression LT_LT additive_expression .  [LT_LT, RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '+'  shift, and go to state 357
    '-'  shift, and go to state 358

    $default  reduce using rule 121 (shift_expression)


state 437

  118 additive_expression: additive_expression . '+' multiplicative_expression
  119                    | additive_expression . '-' multiplicative_expression
  122 shift_expression: shift_expression RIGHT_SHIFT additive_expression .  [LT_LT, RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '+'  shift, and go to state 357
    '-'  shift, and go to state 358

    $default  reduce using rule 122 (shift_expression)


state 438

  121 shift_expression: shift_expression . LT_LT additive_expression
  122                 | shift_expression . RIGHT_SHIFT additive_expression
  124 relational_expression: relational_expression '<' shift_expression .  ['<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    LT_LT        shift, and go to state 359
    RIGHT_SHIFT  shift, and go to state 360

    $default  reduce using rule 124 (relational_expression)


state 439

  121 shift_expression: shift_expression . LT_LT additive_expression
  122                 | shift_expression . RIGHT_SHIFT additive_expression
  125 relational_expression: relational_expression '>' shift_expression .  ['<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    LT_LT        shift, and go to state 359
    RIGHT_SHIFT  shift, and go to state 360

    $default  reduce using rule 125 (relational_expression)


state 440

  129 relational_expression: relational_expression AS type .

    $default  reduce using rule 129 (relational_expression)


state 441

  128 relational_expression: relational_expression IS type .

    $default  reduce using rule 128 (relational_expression)


state 442

  121 shift_expression: shift_expression . LT_LT additive_expression
  122                 | shift_expression . RIGHT_SHIFT additive_expression
  127 relational_expression: relational_expression GE shift_expression .  ['<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    LT_LT        shift, and go to state 359
    RIGHT_SHIFT  shift, and go to state 360

    $default  reduce using rule 127 (relational_expression)


state 443

  121 shift_expression: shift_expression . LT_LT additive_expression
  122                 | shift_expression . RIGHT_SHIFT additive_expression
  126 relational_expression: relational_expression LE shift_expression .  ['<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    LT_LT        shift, and go to state 359
    RIGHT_SHIFT  shift, and go to state 360

    $default  reduce using rule 126 (relational_expression)


state 444

  124 relational_expression: relational_expression . '<' shift_expression
  125                      | relational_expression . '>' shift_expression
  126                      | relational_expression . LE shift_expression
  127                      | relational_expression . GE shift_expression
  128                      | relational_expression . IS type
  129                      | relational_expression . AS type
  132 equality_expression: equality_expression NE relational_expression .  [NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '<'  shift, and go to state 361
    '>'  shift, and go to state 362
    AS   shift, and go to state 363
    IS   shift, and go to state 364
    GE   shift, and go to state 365
    LE   shift, and go to state 366

    $default  reduce using rule 132 (equality_expression)


state 445

  124 relational_expression: relational_expression . '<' shift_expression
  125                      | relational_expression . '>' shift_expression
  126                      | relational_expression . LE shift_expression
  127                      | relational_expression . GE shift_expression
  128                      | relational_expression . IS type
  129                      | relational_expression . AS type
  131 equality_expression: equality_expression EQ_EQ relational_expression .  [NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '<'  shift, and go to state 361
    '>'  shift, and go to state 362
    AS   shift, and go to state 363
    IS   shift, and go to state 364
    GE   shift, and go to state 365
    LE   shift, and go to state 366

    $default  reduce using rule 131 (equality_expression)


state 446

  131 equality_expression: equality_expression . EQ_EQ relational_expression
  132                    | equality_expression . NE relational_expression
  134 and_expression: and_expression '&' equality_expression .  ['&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    NE     shift, and go to state 367
    EQ_EQ  shift, and go to state 368

    $default  reduce using rule 134 (and_expression)


state 447

  134 and_expression: and_expression . '&' equality_expression
  136 exclusive_or_expression: exclusive_or_expression '^' and_expression .  ['^', '|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '&'  shift, and go to state 369

    $default  reduce using rule 136 (exclusive_or_expression)


state 448

  136 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  138 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .  ['|', AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '^'  shift, and go to state 370

    $default  reduce using rule 138 (inclusive_or_expression)


state 449

  138 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  140 conditional_and_expression: conditional_and_expression AMP_AMP inclusive_or_expression .  [AMP_AMP, BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    '|'  shift, and go to state 371

    $default  reduce using rule 140 (conditional_and_expression)


state 450

  140 conditional_and_expression: conditional_and_expression . AMP_AMP inclusive_or_expression
  142 conditional_or_expression: conditional_or_expression BAR_BAR conditional_and_expression .  [BAR_BAR, QM_QM, '?', ',', ')', ']', ':', '}', ';']

    AMP_AMP  shift, and go to state 372

    $default  reduce using rule 142 (conditional_or_expression)


state 451

  144 null_coalescing_expression: conditional_or_expression QM_QM null_coalescing_expression .

    $default  reduce using rule 144 (null_coalescing_expression)


state 452

  146 conditional_expression: null_coalescing_expression '?' expression . ':' expression

    ':'  shift, and go to state 563


state 453

   65 member_access: qualified_alias_member '.' IDENTIFIER . type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [LT_LT, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', ',', '(', ')', '[', ']', ':', '}', ';']
  614                      | . type_argument_list

    '<'  shift, and go to state 29

    '<'       [reduce using rule 613 (type_argument_listopt)]
    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 564


state 454

  484 positional_argument_list: positional_argument_list ',' positional_argument .

    $default  reduce using rule 484 (positional_argument_list)


state 455

  481 attribute_arguments: '(' positional_argument_list ',' named_argument_list . ')'
  487 named_argument_list: named_argument_list . ',' named_argument

    ','  shift, and go to state 378
    ')'  shift, and go to state 565


state 456

  488 named_argument: IDENTIFIER . '=' attribute_argument_expression

    '='  shift, and go to state 311


state 457

  487 named_argument_list: named_argument_list ',' named_argument .

    $default  reduce using rule 487 (named_argument_list)


state 458

  260 namespace_declaration: . NAMESPACE qualified_identifier namespace_body SemicolonOpt
  263 namespace_body: '{' extern_alias_directivesopt using_directivesopt . namespace_member_declarationsopt '}'
  273 namespace_member_declarations: . namespace_member_declaration
  274                              | . namespace_member_declarations namespace_member_declaration
  275 namespace_member_declaration: . namespace_declaration
  276                             | . type_declaration
  277 type_declaration: . class_declaration
  278                 | . struct_declaration
  279                 | . interface_declaration
  280                 | . enum_declaration
  281                 | . delegate_declaration
  297 class_declaration: . attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  411 struct_declaration: . attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  438 interface_declaration: . attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: . attributesopt modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: . attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | . attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  611 namespace_member_declarationsopt: .  ['}']
  612                                 | . namespace_member_declarations
  651 attributesopt: .  [ABSTRACT, CLASS, DELEGATE, ENUM, EXTERN, INTERFACE, INTERNAL, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SEALED, STATIC, STRUCT, VIRTUAL, PARTIAL, NEW]
  652              | . attributes

    NAMESPACE  shift, and go to state 131
    '['        shift, and go to state 22

    '}'       reduce using rule 611 (namespace_member_declarationsopt)
    $default  reduce using rule 651 (attributesopt)

    namespace_declaration             go to state 132
    namespace_member_declarations     go to state 133
    namespace_member_declaration      go to state 134
    type_declaration                  go to state 135
    class_declaration                 go to state 136
    struct_declaration                go to state 137
    interface_declaration             go to state 138
    enum_declaration                  go to state 139
    delegate_declaration              go to state 140
    attributes                        go to state 23
    attribute_sections                go to state 24
    attribute_section                 go to state 25
    namespace_member_declarationsopt  go to state 566
    attributesopt                     go to state 142


state 459

  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  490 type_parameter_list: '<' . type_parameters '>'
  491 type_parameters: . attributesopt IDENTIFIER
  492                | . type_parameters ',' attributesopt IDENTIFIER
  651 attributesopt: .  [IDENTIFIER]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    attributes          go to state 23
    attribute_sections  go to state 24
    attribute_section   go to state 25
    type_parameters     go to state 567
    attributesopt       go to state 568


state 460

  654 type_parameter_listopt: type_parameter_list .

    $default  reduce using rule 654 (type_parameter_listopt)


state 461

  297 class_declaration: attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt . class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  298 class_base: . type_name_list
  299 type_name_list: . ':' type_name
  300               | . type_name_list ',' type_name
  655 class_baseopt: .  [WHERE, '{']
  656              | . class_base

    ':'  shift, and go to state 569

    $default  reduce using rule 655 (class_baseopt)

    class_base      go to state 570
    type_name_list  go to state 571
    class_baseopt   go to state 572


state 462

  465 delegate_declaration: attributesopt modifiers_opt DELEGATE VOID IDENTIFIER . type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  490 type_parameter_list: . '<' type_parameters '>'
  653 type_parameter_listopt: .  ['(']
  654                       | . type_parameter_list

    '<'  shift, and go to state 459

    $default  reduce using rule 653 (type_parameter_listopt)

    type_parameter_list     go to state 460
    type_parameter_listopt  go to state 573


state 463

  464 delegate_declaration: attributesopt modifiers_opt DELEGATE type IDENTIFIER . type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  490 type_parameter_list: . '<' type_parameters '>'
  653 type_parameter_listopt: .  ['(']
  654                       | . type_parameter_list

    '<'  shift, and go to state 459

    $default  reduce using rule 653 (type_parameter_listopt)

    type_parameter_list     go to state 460
    type_parameter_listopt  go to state 574


state 464

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
  457 enum_base: ':' . integral_type

    BYTE    shift, and go to state 39
    CHAR    shift, and go to state 42
    INT     shift, and go to state 66
    LONG    shift, and go to state 70
    SBYTE   shift, and go to state 84
    SHORT   shift, and go to state 86
    UINT    shift, and go to state 97
    ULONG   shift, and go to state 98
    USHORT  shift, and go to state 100

    integral_type  go to state 575


state 465

  684 enum_baseopt: enum_base .

    $default  reduce using rule 684 (enum_baseopt)


state 466

  456 enum_declaration: attributesopt modifiers_opt ENUM IDENTIFIER enum_baseopt . enum_body SemicolonOpt
  458 enum_body: . '{' enum_member_declarationsopt '}'
  459          | . '{' enum_member_declarations ',' '}'

    '{'  shift, and go to state 576

    enum_body  go to state 577


state 467

  299 type_name_list: . ':' type_name
  300               | . type_name_list ',' type_name
  438 interface_declaration: attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt . interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  439 interface_base: . type_name_list
  677 interface_baseopt: .  [WHERE, '{']
  678                  | . interface_base

    ':'  shift, and go to state 569

    $default  reduce using rule 677 (interface_baseopt)

    type_name_list     go to state 578
    interface_base     go to state 579
    interface_baseopt  go to state 580


state 468

  299 type_name_list: . ':' type_name
  300               | . type_name_list ',' type_name
  411 struct_declaration: attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt . struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  412 struct_interfaces: . type_name_list
  671 struct_interfacesopt: .  [WHERE, '{']
  672                     | . struct_interfaces

    ':'  shift, and go to state 569

    $default  reduce using rule 671 (struct_interfacesopt)

    type_name_list        go to state 581
    struct_interfaces     go to state 582
    struct_interfacesopt  go to state 583


state 469

   78 base_access: BASE '.' IDENTIFIER type_argument_listopt .

    $default  reduce using rule 78 (base_access)


state 470

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   76 expression_list: expression_list ',' . expression
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 584
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 471

   79 base_access: BASE '[' expression_list ']' .

    $default  reduce using rule 79 (base_access)


state 472

   96 default_value_expression: DEFAULT '(' type ')' .

    $default  reduce using rule 96 (default_value_expression)


state 473

  100 anonymous_method_parameter_list: anonymous_method_parameter_list ',' . anonymous_method_parameter
  101 anonymous_method_parameter: . parameter_modifieropt type IDENTIFIER
  339 parameter_modifier: . REF
  340                   | . OUT
  631 parameter_modifieropt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  632                      | . parameter_modifier

    OUT  shift, and go to state 397
    REF  shift, and go to state 398

    $default  reduce using rule 631 (parameter_modifieropt)

    anonymous_method_parameter  go to state 585
    parameter_modifier          go to state 401
    parameter_modifieropt       go to state 403


state 474

   98 anonymous_method_signature: '(' anonymous_method_parameter_listopt ')' .

    $default  reduce using rule 98 (anonymous_method_signature)


state 475

  101 anonymous_method_parameter: parameter_modifieropt type . IDENTIFIER

    IDENTIFIER  shift, and go to state 586


state 476

  236 break_statement: BREAK . ';'

    ';'  shift, and go to state 587


state 477

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  192 local_constant_declaration: CONST . type constant_declarators_loc
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 588
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 478

  237 continue_statement: CONTINUE . ';'

    ';'  shift, and go to state 589


state 479

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  181 empty_statement: . ';'
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  222             | DO . embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    embedded_statement                    go to state 590
    block                                 go to state 507
    empty_statement                       go to state 509
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 480

  223 for_statement: FOR . '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement

    '('  shift, and go to state 591


state 481

  230 foreach_statement: FOREACH . '(' type IDENTIFIER IN expression ')' embedded_statement

    '('  shift, and go to state 592


state 482

  238 goto_statement: GOTO . IDENTIFIER ';'
  239               | GOTO . CASE constant_expression ';'
  240               | GOTO . DEFAULT ';'

    CASE        shift, and go to state 593
    DEFAULT     shift, and go to state 594
    IDENTIFIER  shift, and go to state 595


state 483

  206 if_statement: IF . '(' boolean_expression ')' embedded_statement
  207             | IF . '(' boolean_expression ')' embedded_statement ELSE embedded_statement

    '('  shift, and go to state 596


state 484

  254 lock_statement: LOCK . '(' expression ')' embedded_statement

    '('  shift, and go to state 597


state 485

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  241 return_statement: RETURN . expressionopt ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  643 expressionopt: .  [';']
  644              | . expression

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    $default  reduce using rule 643 (expressionopt)

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 598
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    expressionopt                         go to state 599


state 486

  208 switch_statement: SWITCH . '(' expression ')' switch_block

    '('  shift, and go to state 600


state 487

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  242 throw_statement: THROW . expressionopt ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  643 expressionopt: .  [';']
  644              | . expression

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    $default  reduce using rule 643 (expressionopt)

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 598
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    expressionopt                         go to state 601


state 488

  178 block: . '{' statement_listopt '}'
  243 try_statement: TRY . block catch_clauses
  244              | TRY . block catch_clausesopt finally_clause

    '{'  shift, and go to state 404

    block  go to state 602


state 489

  255 using_statement: USING . '(' resource_acquisition ')' embedded_statement

    '('  shift, and go to state 603


state 490

  221 while_statement: WHILE . '(' boolean_expression ')' embedded_statement

    '('  shift, and go to state 604


state 491

  258 yield_statement: YIELD . RETURN expression ';'
  259                | YIELD . BREAK ';'

    BREAK   shift, and go to state 605
    RETURN  shift, and go to state 606


state 492

    5 namespace_or_type_name: IDENTIFIER . type_argument_listopt
   61 simple_name: IDENTIFIER . type_argument_listopt
  182 labeled_statement: IDENTIFIER . ':' statement
  282 qualified_alias_member: IDENTIFIER . SEMI_SEMI IDENTIFIER type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [OBJECT, IDENTIFIER, '.', MINUS_MINUS, PLUS_PLUS, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', '(', '[']
  614                      | . type_argument_list

    SEMI_SEMI  shift, and go to state 28
    '<'        shift, and go to state 29
    ':'        shift, and go to state 607

    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 417


state 493

   95 unchecked_expression: UNCHECKED . '(' expression ')'
  178 block: . '{' statement_listopt '}'
  253 unchecked_statement: UNCHECKED . block

    '('  shift, and go to state 313
    '{'  shift, and go to state 404

    block  go to state 608


state 494

   94 checked_expression: CHECKED . '(' expression ')'
  178 block: . '{' statement_listopt '}'
  252 checked_statement: CHECKED . block

    '('  shift, and go to state 314
    '{'  shift, and go to state 404

    block  go to state 609


state 495

  181 empty_statement: ';' .

    $default  reduce using rule 181 (empty_statement)


state 496

  185 local_variable_declaration: type . local_variable_declarators
  186 local_variable_declarators: . local_variable_declarator
  187                           | . local_variable_declarators ',' local_variable_declarator
  188 local_variable_declarator: . IDENTIFIER
  189                          | . IDENTIFIER '=' local_variable_initializer

    IDENTIFIER  shift, and go to state 610

    local_variable_declarators  go to state 611
    local_variable_declarator   go to state 612


state 497

   49 primary_no_array_creation_expression: invocation_expression .  ['.', MINUS_MINUS, PLUS_PLUS, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '(', '[']
  197 statement_expression: invocation_expression .  [',', ')', ';']

    ','       reduce using rule 197 (statement_expression)
    ')'       reduce using rule 197 (statement_expression)
    ';'       reduce using rule 197 (statement_expression)
    $default  reduce using rule 49 (primary_no_array_creation_expression)


state 498

   53 primary_no_array_creation_expression: post_increment_expression .  ['.', MINUS_MINUS, PLUS_PLUS, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '(', '[']
  200 statement_expression: post_increment_expression .  [',', ')', ';']

    ','       reduce using rule 200 (statement_expression)
    ')'       reduce using rule 200 (statement_expression)
    ';'       reduce using rule 200 (statement_expression)
    $default  reduce using rule 53 (primary_no_array_creation_expression)


state 499

   54 primary_no_array_creation_expression: post_decrement_expression .  ['.', MINUS_MINUS, PLUS_PLUS, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '(', '[']
  201 statement_expression: post_decrement_expression .  [',', ')', ';']

    ','       reduce using rule 201 (statement_expression)
    ')'       reduce using rule 201 (statement_expression)
    ';'       reduce using rule 201 (statement_expression)
    $default  reduce using rule 54 (primary_no_array_creation_expression)


state 500

   55 primary_no_array_creation_expression: object_creation_expression .  ['.', MINUS_MINUS, PLUS_PLUS, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '(', '[']
  198 statement_expression: object_creation_expression .  [',', ')', ';']

    ','       reduce using rule 198 (statement_expression)
    ')'       reduce using rule 198 (statement_expression)
    ';'       reduce using rule 198 (statement_expression)
    $default  reduce using rule 55 (primary_no_array_creation_expression)


state 501

  147 assignment: unary_expression . assignment_operator expression
  148 assignment_operator: . '='
  149                    | . PLUS_EQ
  150                    | . MINUS_EQ
  151                    | . STAR_EQ
  152                    | . SLASH_EQ
  153                    | . PERCENT_EQ
  154                    | . AMP_EQ
  155                    | . BAR_EQ
  156                    | . CARET_EQ
  157                    | . LT_LT_EQ
  158                    | . RIGHT_SHIFT_ASSIGNMENT

    '='                     shift, and go to state 342
    BAR_EQ                  shift, and go to state 343
    CARET_EQ                shift, and go to state 344
    AMP_EQ                  shift, and go to state 345
    RIGHT_SHIFT_ASSIGNMENT  shift, and go to state 346
    LT_LT_EQ                shift, and go to state 347
    MINUS_EQ                shift, and go to state 348
    PLUS_EQ                 shift, and go to state 349
    PERCENT_EQ              shift, and go to state 350
    SLASH_EQ                shift, and go to state 351
    STAR_EQ                 shift, and go to state 352

    assignment_operator  go to state 353


state 502

  107 unary_expression: pre_increment_expression .  ['=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ]
  202 statement_expression: pre_increment_expression .  [',', ')', ';']

    ','       reduce using rule 202 (statement_expression)
    ')'       reduce using rule 202 (statement_expression)
    ';'       reduce using rule 202 (statement_expression)
    $default  reduce using rule 107 (unary_expression)


state 503

  108 unary_expression: pre_decrement_expression .  ['=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ]
  203 statement_expression: pre_decrement_expression .  [',', ')', ';']

    ','       reduce using rule 203 (statement_expression)
    ')'       reduce using rule 203 (statement_expression)
    ';'       reduce using rule 203 (statement_expression)
    $default  reduce using rule 108 (unary_expression)


state 504

  199 statement_expression: assignment .

    $default  reduce using rule 199 (statement_expression)


state 505

  179 statement_list: statement .

    $default  reduce using rule 179 (statement_list)


state 506

  165 statement: embedded_statement .

    $default  reduce using rule 165 (statement)


state 507

  166 embedded_statement: block .

    $default  reduce using rule 166 (embedded_statement)


state 508

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  163 statement: . labeled_statement
  164          | . declaration_statement
  165          | . embedded_statement
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  180 statement_list: statement_list . statement
  181 empty_statement: . ';'
  182 labeled_statement: . IDENTIFIER ':' statement
  183 declaration_statement: . local_variable_declaration ';'
  184                      | . local_constant_declaration ';'
  185 local_variable_declaration: . type local_variable_declarators
  192 local_constant_declaration: . CONST type constant_declarators_loc
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  634 statement_listopt: statement_list .  ['}']

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 324
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONST                        shift, and go to state 477
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 325
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 326
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 327
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 328
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 492
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    $default  reduce using rule 634 (statement_listopt)

    type_name                             go to state 150
    namespace_or_type_name                go to state 122
    type                                  go to state 496
    value_type                            go to state 152
    struct_type                           go to state 153
    simple_type                           go to state 154
    numeric_type                          go to state 155
    integral_type                         go to state 331
    floating_point_type                   go to state 157
    nullable_type                         go to state 158
    non_nullable_value_type               go to state 159
    reference_type                        go to state 160
    class_type                            go to state 161
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    statement                             go to state 613
    embedded_statement                    go to state 506
    block                                 go to state 507
    empty_statement                       go to state 509
    labeled_statement                     go to state 510
    declaration_statement                 go to state 511
    local_variable_declaration            go to state 512
    local_constant_declaration            go to state 513
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 333
    array_type                            go to state 162
    non_array_type                        go to state 163
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 509

  167 embedded_statement: empty_statement .

    $default  reduce using rule 167 (embedded_statement)


state 510

  163 statement: labeled_statement .

    $default  reduce using rule 163 (statement)


state 511

  164 statement: declaration_statement .

    $default  reduce using rule 164 (statement)


state 512

  183 declaration_statement: local_variable_declaration . ';'

    ';'  shift, and go to state 614


state 513

  184 declaration_statement: local_constant_declaration . ';'

    ';'  shift, and go to state 615


state 514

  168 embedded_statement: expression_statement .

    $default  reduce using rule 168 (embedded_statement)


state 515

  196 expression_statement: statement_expression . ';'

    ';'  shift, and go to state 616


state 516

  169 embedded_statement: selection_statement .

    $default  reduce using rule 169 (embedded_statement)


state 517

  204 selection_statement: if_statement .

    $default  reduce using rule 204 (selection_statement)


state 518

  205 selection_statement: switch_statement .

    $default  reduce using rule 205 (selection_statement)


state 519

  170 embedded_statement: iteration_statement .

    $default  reduce using rule 170 (embedded_statement)


state 520

  217 iteration_statement: while_statement .

    $default  reduce using rule 217 (iteration_statement)


state 521

  218 iteration_statement: do_statement .

    $default  reduce using rule 218 (iteration_statement)


state 522

  219 iteration_statement: for_statement .

    $default  reduce using rule 219 (iteration_statement)


state 523

  220 iteration_statement: foreach_statement .

    $default  reduce using rule 220 (iteration_statement)


state 524

  171 embedded_statement: jump_statement .

    $default  reduce using rule 171 (embedded_statement)


state 525

  231 jump_statement: break_statement .

    $default  reduce using rule 231 (jump_statement)


state 526

  232 jump_statement: continue_statement .

    $default  reduce using rule 232 (jump_statement)


state 527

  233 jump_statement: goto_statement .

    $default  reduce using rule 233 (jump_statement)


state 528

  234 jump_statement: return_statement .

    $default  reduce using rule 234 (jump_statement)


state 529

  235 jump_statement: throw_statement .

    $default  reduce using rule 235 (jump_statement)


state 530

  172 embedded_statement: try_statement .

    $default  reduce using rule 172 (embedded_statement)


state 531

  173 embedded_statement: checked_statement .

    $default  reduce using rule 173 (embedded_statement)


state 532

  174 embedded_statement: unchecked_statement .

    $default  reduce using rule 174 (embedded_statement)


state 533

  175 embedded_statement: lock_statement .

    $default  reduce using rule 175 (embedded_statement)


state 534

  176 embedded_statement: using_statement .

    $default  reduce using rule 176 (embedded_statement)


state 535

  177 embedded_statement: yield_statement .

    $default  reduce using rule 177 (embedded_statement)


state 536

  178 block: '{' statement_listopt . '}'

    '}'  shift, and go to state 617


state 537

   95 unchecked_expression: UNCHECKED '(' expression ')' .

    $default  reduce using rule 95 (unchecked_expression)


state 538

   94 checked_expression: CHECKED '(' expression ')' .

    $default  reduce using rule 94 (checked_expression)


state 539

   87 typeof_expression: TYPEOF '(' VOID ')' .

    $default  reduce using rule 87 (typeof_expression)


state 540

   89 unbound_type_name: IDENTIFIER SEMI_SEMI . IDENTIFIER generic_dimension_specifieropt
  282 qualified_alias_member: IDENTIFIER SEMI_SEMI . IDENTIFIER type_argument_listopt

    IDENTIFIER  shift, and go to state 618


state 541

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   91 generic_dimension_specifier: '<' . commasopt '>'
   92 commas: . ','
   93       | . commas ','
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  493 type_argument_list: '<' . type_arguments '>'
  494 type_arguments: . type_argument
  495               | . type_arguments ',' type_argument
  496 type_argument: . type
  625 commasopt: .  ['>']
  626          | . commas

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149
    ','         shift, and go to state 619

    $default  reduce using rule 625 (commasopt)

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 151
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    commas                   go to state 620
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163
    type_arguments           go to state 164
    type_argument            go to state 165
    commasopt                go to state 621


state 542

  624 generic_dimension_specifieropt: generic_dimension_specifier .

    $default  reduce using rule 624 (generic_dimension_specifieropt)


state 543

   88 unbound_type_name: IDENTIFIER generic_dimension_specifieropt .

    $default  reduce using rule 88 (unbound_type_name)


state 544

   85 typeof_expression: TYPEOF '(' type ')' .

    $default  reduce using rule 85 (typeof_expression)


state 545

   90 unbound_type_name: unbound_type_name '.' . IDENTIFIER generic_dimension_specifieropt

    IDENTIFIER  shift, and go to state 622


state 546

   86 typeof_expression: TYPEOF '(' unbound_type_name ')' .

    $default  reduce using rule 86 (typeof_expression)


state 547

   82 object_creation_expression: NEW type '(' argument_listopt . ')'

    ')'  shift, and go to state 623


state 548

  324 variable_initializer: expression .

    $default  reduce using rule 324 (variable_initializer)


state 549

  436 variable_initializer_list: variable_initializer .

    $default  reduce using rule 436 (variable_initializer_list)


state 550

  325 variable_initializer: array_initializer .

    $default  reduce using rule 325 (variable_initializer)


state 551

  435 array_initializer: '{' variable_initializer_list . ',' '}'
  437 variable_initializer_list: variable_initializer_list . ',' variable_initializer
  676 variable_initializer_listopt: variable_initializer_list .  ['}']

    ','  shift, and go to state 624

    $default  reduce using rule 676 (variable_initializer_listopt)


state 552

  434 array_initializer: '{' variable_initializer_listopt . '}'

    '}'  shift, and go to state 625


state 553

   76 expression_list: expression_list . ',' expression
   83 array_creation_expression: NEW non_array_type '[' expression_list . ']' rank_specifiersopt array_initializeropt

    ','  shift, and go to state 470
    ']'  shift, and go to state 626


state 554

  112 cast_expression: '(' type ')' unary_expression .

    $default  reduce using rule 112 (cast_expression)


state 555

   63 member_access: primary_expression '.' IDENTIFIER type_argument_listopt .

    $default  reduce using rule 63 (member_access)


state 556

   42 argument: OUT variable_reference .

    $default  reduce using rule 42 (argument)


state 557

   37 variable_reference: expression .

    $default  reduce using rule 37 (variable_reference)


state 558

   41 argument: REF variable_reference .

    $default  reduce using rule 41 (argument)


state 559

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   39 argument_list: argument_list ',' . argument
   40 argument: . expression
   41         | . REF variable_reference
   42         | . OUT variable_reference
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    OUT                          shift, and go to state 421
    REF                          shift, and go to state 422
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    argument                              go to state 627
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 425
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 560

   73 invocation_expression: primary_expression '(' argument_listopt ')' .

    $default  reduce using rule 73 (invocation_expression)


state 561

   74 element_access: primary_no_array_creation_expression '[' expression_list ']' .

    $default  reduce using rule 74 (element_access)


state 562

   64 member_access: predefined_type '.' IDENTIFIER type_argument_listopt .

    $default  reduce using rule 64 (member_access)


state 563

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  146                       | null_coalescing_expression '?' expression ':' . expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 628
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 564

   65 member_access: qualified_alias_member '.' IDENTIFIER type_argument_listopt .

    $default  reduce using rule 65 (member_access)


state 565

  481 attribute_arguments: '(' positional_argument_list ',' named_argument_list ')' .

    $default  reduce using rule 481 (attribute_arguments)


state 566

  263 namespace_body: '{' extern_alias_directivesopt using_directivesopt namespace_member_declarationsopt . '}'

    '}'  shift, and go to state 629


state 567

  490 type_parameter_list: '<' type_parameters . '>'
  492 type_parameters: type_parameters . ',' attributesopt IDENTIFIER

    '>'  shift, and go to state 630
    ','  shift, and go to state 631


state 568

  491 type_parameters: attributesopt . IDENTIFIER

    IDENTIFIER  shift, and go to state 632


state 569

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  299 type_name_list: ':' . type_name

    IDENTIFIER  shift, and go to state 149

    type_name               go to state 633
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20


state 570

  656 class_baseopt: class_base .

    $default  reduce using rule 656 (class_baseopt)


state 571

  298 class_base: type_name_list .  [WHERE, '{']
  300 type_name_list: type_name_list . ',' type_name

    ','  shift, and go to state 634

    $default  reduce using rule 298 (class_base)


state 572

  297 class_declaration: attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt . type_parameter_constraints_clausesopt class_body SemicolonOpt
  497 type_parameter_constraints_clauses: . type_parameter_constraints_clause
  498                                   | . type_parameter_constraints_clauses type_parameter_constraints_clause
  499 type_parameter_constraints_clause: . WHERE IDENTIFIER ':' type_parameter_constraints
  657 type_parameter_constraints_clausesopt: .  ['{']
  658                                      | . type_parameter_constraints_clauses

    WHERE  shift, and go to state 635

    $default  reduce using rule 657 (type_parameter_constraints_clausesopt)

    type_parameter_constraints_clauses     go to state 636
    type_parameter_constraints_clause      go to state 637
    type_parameter_constraints_clausesopt  go to state 638


state 573

  465 delegate_declaration: attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt . '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    '('  shift, and go to state 639


state 574

  464 delegate_declaration: attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt . '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    '('  shift, and go to state 640


state 575

  457 enum_base: ':' integral_type .

    $default  reduce using rule 457 (enum_base)


state 576

  458 enum_body: '{' . enum_member_declarationsopt '}'
  459          | '{' . enum_member_declarations ',' '}'
  460 enum_member_declarations: . enum_member_declaration
  461                         | . enum_member_declarations ',' enum_member_declaration
  462 enum_member_declaration: . attributesopt IDENTIFIER
  463                        | . attributesopt IDENTIFIER '=' constant_expression
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [IDENTIFIER]
  652              | . attributes
  685 enum_member_declarationsopt: .  ['}']
  686                            | . enum_member_declarations

    '['  shift, and go to state 22

    '}'       reduce using rule 685 (enum_member_declarationsopt)
    $default  reduce using rule 651 (attributesopt)

    enum_member_declarations     go to state 641
    enum_member_declaration      go to state 642
    attributes                   go to state 23
    attribute_sections           go to state 24
    attribute_section            go to state 25
    attributesopt                go to state 643
    enum_member_declarationsopt  go to state 644


state 577

  456 enum_declaration: attributesopt modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body . SemicolonOpt
  691 SemicolonOpt: .  [$end, ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, IDENTIFIER, NEW, '[', '~', '}']
  692             | . ';'

    ';'  shift, and go to state 383

    $default  reduce using rule 691 (SemicolonOpt)

    SemicolonOpt  go to state 645


state 578

  300 type_name_list: type_name_list . ',' type_name
  439 interface_base: type_name_list .  [WHERE, '{']

    ','  shift, and go to state 634

    $default  reduce using rule 439 (interface_base)


state 579

  678 interface_baseopt: interface_base .

    $default  reduce using rule 678 (interface_baseopt)


state 580

  438 interface_declaration: attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt . type_parameter_constraints_clausesopt interface_body SemicolonOpt
  497 type_parameter_constraints_clauses: . type_parameter_constraints_clause
  498                                   | . type_parameter_constraints_clauses type_parameter_constraints_clause
  499 type_parameter_constraints_clause: . WHERE IDENTIFIER ':' type_parameter_constraints
  657 type_parameter_constraints_clausesopt: .  ['{']
  658                                      | . type_parameter_constraints_clauses

    WHERE  shift, and go to state 635

    $default  reduce using rule 657 (type_parameter_constraints_clausesopt)

    type_parameter_constraints_clauses     go to state 636
    type_parameter_constraints_clause      go to state 637
    type_parameter_constraints_clausesopt  go to state 646


state 581

  300 type_name_list: type_name_list . ',' type_name
  412 struct_interfaces: type_name_list .  [WHERE, '{']

    ','  shift, and go to state 634

    $default  reduce using rule 412 (struct_interfaces)


state 582

  672 struct_interfacesopt: struct_interfaces .

    $default  reduce using rule 672 (struct_interfacesopt)


state 583

  411 struct_declaration: attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt . type_parameter_constraints_clausesopt struct_body SemicolonOpt
  497 type_parameter_constraints_clauses: . type_parameter_constraints_clause
  498                                   | . type_parameter_constraints_clauses type_parameter_constraints_clause
  499 type_parameter_constraints_clause: . WHERE IDENTIFIER ':' type_parameter_constraints
  657 type_parameter_constraints_clausesopt: .  ['{']
  658                                      | . type_parameter_constraints_clauses

    WHERE  shift, and go to state 635

    $default  reduce using rule 657 (type_parameter_constraints_clausesopt)

    type_parameter_constraints_clauses     go to state 636
    type_parameter_constraints_clause      go to state 637
    type_parameter_constraints_clausesopt  go to state 647


state 584

   76 expression_list: expression_list ',' expression .

    $default  reduce using rule 76 (expression_list)


state 585

  100 anonymous_method_parameter_list: anonymous_method_parameter_list ',' anonymous_method_parameter .

    $default  reduce using rule 100 (anonymous_method_parameter_list)


state 586

  101 anonymous_method_parameter: parameter_modifieropt type IDENTIFIER .

    $default  reduce using rule 101 (anonymous_method_parameter)


state 587

  236 break_statement: BREAK ';' .

    $default  reduce using rule 236 (break_statement)


state 588

  192 local_constant_declaration: CONST type . constant_declarators_loc
  193 constant_declarators_loc: . constant_declarator_loc
  194                         | . constant_declarators_loc ',' constant_declarator_loc
  195 constant_declarator_loc: . IDENTIFIER '=' constant_expression

    IDENTIFIER  shift, and go to state 648

    constant_declarators_loc  go to state 649
    constant_declarator_loc   go to state 650


state 589

  237 continue_statement: CONTINUE ';' .

    $default  reduce using rule 237 (continue_statement)


state 590

  222 do_statement: DO embedded_statement . WHILE '(' boolean_expression ')' ';'

    WHILE  shift, and go to state 651


state 591

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  185 local_variable_declaration: . type local_variable_declarators
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  223 for_statement: FOR '(' . for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  224 for_initializer: . local_variable_declaration
  225                | . statement_expression_list
  228 statement_expression_list: . statement_expression
  229                          | . statement_expression_list ',' statement_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  637 for_initializeropt: .  [';']
  638                   | . for_initializer

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 324
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 325
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 326
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 327
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 328
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 329
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    $default  reduce using rule 637 (for_initializeropt)

    type_name                             go to state 150
    namespace_or_type_name                go to state 122
    type                                  go to state 496
    value_type                            go to state 152
    struct_type                           go to state 153
    simple_type                           go to state 154
    numeric_type                          go to state 155
    integral_type                         go to state 331
    floating_point_type                   go to state 157
    nullable_type                         go to state 158
    non_nullable_value_type               go to state 159
    reference_type                        go to state 160
    class_type                            go to state 161
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    local_variable_declaration            go to state 652
    statement_expression                  go to state 653
    for_initializer                       go to state 654
    statement_expression_list             go to state 655
    qualified_alias_member                go to state 333
    array_type                            go to state 162
    non_array_type                        go to state 163
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    for_initializeropt                    go to state 656


state 592

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  230 foreach_statement: FOREACH '(' . type IDENTIFIER IN expression ')' embedded_statement
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 657
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 593

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  161 constant_expression: . expression
  239 goto_statement: GOTO CASE . constant_expression ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 658
    constant_expression                   go to state 659
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 594

  240 goto_statement: GOTO DEFAULT . ';'

    ';'  shift, and go to state 660


state 595

  238 goto_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 661


state 596

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  162 boolean_expression: . expression
  206 if_statement: IF '(' . boolean_expression ')' embedded_statement
  207             | IF '(' . boolean_expression ')' embedded_statement ELSE embedded_statement
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 662
    boolean_expression                    go to state 663
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 597

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  254 lock_statement: LOCK '(' . expression ')' embedded_statement
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 664
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 598

  644 expressionopt: expression .

    $default  reduce using rule 644 (expressionopt)


state 599

  241 return_statement: RETURN expressionopt . ';'

    ';'  shift, and go to state 665


state 600

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  208 switch_statement: SWITCH '(' . expression ')' switch_block
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 666
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 601

  242 throw_statement: THROW expressionopt . ';'

    ';'  shift, and go to state 667


state 602

  243 try_statement: TRY block . catch_clauses
  244              | TRY block . catch_clausesopt finally_clause
  245 catch_clauses: . specific_catch_clauses
  246              | . specific_catch_clausesopt general_catch_clause
  247 specific_catch_clauses: . specific_catch_clause
  248                       | . specific_catch_clauses specific_catch_clause
  249 specific_catch_clause: . CATCH '(' class_type identifieropt ')' block
  645 catch_clausesopt: .  [FINALLY]
  646                 | . catch_clauses
  647 specific_catch_clausesopt: .  [CATCH]
  648                          | . specific_catch_clauses

    CATCH  shift, and go to state 668

    CATCH     [reduce using rule 647 (specific_catch_clausesopt)]
    $default  reduce using rule 645 (catch_clausesopt)

    catch_clauses              go to state 669
    specific_catch_clauses     go to state 670
    specific_catch_clause      go to state 671
    catch_clausesopt           go to state 672
    specific_catch_clausesopt  go to state 673


state 603

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  185 local_variable_declaration: . type local_variable_declarators
  255 using_statement: USING '(' . resource_acquisition ')' embedded_statement
  256 resource_acquisition: . local_variable_declaration
  257                     | . expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 324
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 325
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 326
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 327
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 328
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 329
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    type_name                             go to state 150
    namespace_or_type_name                go to state 122
    type                                  go to state 496
    value_type                            go to state 152
    struct_type                           go to state 153
    simple_type                           go to state 154
    numeric_type                          go to state 155
    integral_type                         go to state 331
    floating_point_type                   go to state 157
    nullable_type                         go to state 158
    non_nullable_value_type               go to state 159
    reference_type                        go to state 160
    class_type                            go to state 161
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 674
    local_variable_declaration            go to state 675
    resource_acquisition                  go to state 676
    qualified_alias_member                go to state 333
    array_type                            go to state 162
    non_array_type                        go to state 163
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 604

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  162 boolean_expression: . expression
  221 while_statement: WHILE '(' . boolean_expression ')' embedded_statement
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 662
    boolean_expression                    go to state 677
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 605

  259 yield_statement: YIELD BREAK . ';'

    ';'  shift, and go to state 678


state 606

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  258 yield_statement: YIELD RETURN . expression ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 679
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 607

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  163 statement: . labeled_statement
  164          | . declaration_statement
  165          | . embedded_statement
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  181 empty_statement: . ';'
  182 labeled_statement: . IDENTIFIER ':' statement
  182                  | IDENTIFIER ':' . statement
  183 declaration_statement: . local_variable_declaration ';'
  184                      | . local_constant_declaration ';'
  185 local_variable_declaration: . type local_variable_declarators
  192 local_constant_declaration: . CONST type constant_declarators_loc
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 324
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONST                        shift, and go to state 477
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 325
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 326
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 327
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 328
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 492
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    type_name                             go to state 150
    namespace_or_type_name                go to state 122
    type                                  go to state 496
    value_type                            go to state 152
    struct_type                           go to state 153
    simple_type                           go to state 154
    numeric_type                          go to state 155
    integral_type                         go to state 331
    floating_point_type                   go to state 157
    nullable_type                         go to state 158
    non_nullable_value_type               go to state 159
    reference_type                        go to state 160
    class_type                            go to state 161
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    statement                             go to state 680
    embedded_statement                    go to state 506
    block                                 go to state 507
    empty_statement                       go to state 509
    labeled_statement                     go to state 510
    declaration_statement                 go to state 511
    local_variable_declaration            go to state 512
    local_constant_declaration            go to state 513
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 333
    array_type                            go to state 162
    non_array_type                        go to state 163
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 608

  253 unchecked_statement: UNCHECKED block .

    $default  reduce using rule 253 (unchecked_statement)


state 609

  252 checked_statement: CHECKED block .

    $default  reduce using rule 252 (checked_statement)


state 610

  188 local_variable_declarator: IDENTIFIER .  [',', ')', ';']
  189                          | IDENTIFIER . '=' local_variable_initializer

    '='  shift, and go to state 681

    $default  reduce using rule 188 (local_variable_declarator)


state 611

  185 local_variable_declaration: type local_variable_declarators .  [')', ';']
  187 local_variable_declarators: local_variable_declarators . ',' local_variable_declarator

    ','  shift, and go to state 682

    $default  reduce using rule 185 (local_variable_declaration)


state 612

  186 local_variable_declarators: local_variable_declarator .

    $default  reduce using rule 186 (local_variable_declarators)


state 613

  180 statement_list: statement_list statement .

    $default  reduce using rule 180 (statement_list)


state 614

  183 declaration_statement: local_variable_declaration ';' .

    $default  reduce using rule 183 (declaration_statement)


state 615

  184 declaration_statement: local_constant_declaration ';' .

    $default  reduce using rule 184 (declaration_statement)


state 616

  196 expression_statement: statement_expression ';' .

    $default  reduce using rule 196 (expression_statement)


state 617

  178 block: '{' statement_listopt '}' .

    $default  reduce using rule 178 (block)


state 618

   89 unbound_type_name: IDENTIFIER SEMI_SEMI IDENTIFIER . generic_dimension_specifieropt
   91 generic_dimension_specifier: . '<' commasopt '>'
  282 qualified_alias_member: IDENTIFIER SEMI_SEMI IDENTIFIER . type_argument_listopt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [OBJECT, '.', '?', ')']
  614                      | . type_argument_list
  623 generic_dimension_specifieropt: .  ['.', ')']
  624                               | . generic_dimension_specifier

    '<'  shift, and go to state 541

    '.'       reduce using rule 613 (type_argument_listopt)
    '.'       [reduce using rule 623 (generic_dimension_specifieropt)]
    ')'       reduce using rule 613 (type_argument_listopt)
    ')'       [reduce using rule 623 (generic_dimension_specifieropt)]
    $default  reduce using rule 613 (type_argument_listopt)

    generic_dimension_specifier     go to state 542
    type_argument_list              go to state 31
    type_argument_listopt           go to state 179
    generic_dimension_specifieropt  go to state 683


state 619

   92 commas: ',' .

    $default  reduce using rule 92 (commas)


state 620

   93 commas: commas . ','
  626 commasopt: commas .  ['>']

    ','  shift, and go to state 684

    $default  reduce using rule 626 (commasopt)


state 621

   91 generic_dimension_specifier: '<' commasopt . '>'

    '>'  shift, and go to state 685


state 622

   90 unbound_type_name: unbound_type_name '.' IDENTIFIER . generic_dimension_specifieropt
   91 generic_dimension_specifier: . '<' commasopt '>'
  623 generic_dimension_specifieropt: .  ['.', ')']
  624                               | . generic_dimension_specifier

    '<'  shift, and go to state 686

    $default  reduce using rule 623 (generic_dimension_specifieropt)

    generic_dimension_specifier     go to state 542
    generic_dimension_specifieropt  go to state 687


state 623

   82 object_creation_expression: NEW type '(' argument_listopt ')' .

    $default  reduce using rule 82 (object_creation_expression)


state 624

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  324 variable_initializer: . expression
  325                     | . array_initializer
  434 array_initializer: . '{' variable_initializer_listopt '}'
  435                  | . '{' variable_initializer_list ',' '}'
  435                  | '{' variable_initializer_list ',' . '}'
  437 variable_initializer_list: variable_initializer_list ',' . variable_initializer
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 414
    '}'                          shift, and go to state 688

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 548
    qualified_alias_member                go to state 264
    variable_initializer                  go to state 689
    array_initializer                     go to state 550
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 625

  434 array_initializer: '{' variable_initializer_listopt '}' .

    $default  reduce using rule 434 (array_initializer)


state 626

   83 array_creation_expression: NEW non_array_type '[' expression_list ']' . rank_specifiersopt array_initializeropt
  429 rank_specifiers: . rank_specifier
  430                | . rank_specifiers rank_specifier
  431 rank_specifier: . '[' dim_separatorsopt ']'
  619 rank_specifiersopt: .  [LT_LT, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', ',', '(', ')', ']', ':', '{', '}', ';']
  620                   | . rank_specifiers

    '['  shift, and go to state 182

    $default  reduce using rule 619 (rank_specifiersopt)

    rank_specifiers     go to state 690
    rank_specifier      go to state 184
    rank_specifiersopt  go to state 691


state 627

   39 argument_list: argument_list ',' argument .

    $default  reduce using rule 39 (argument_list)


state 628

  146 conditional_expression: null_coalescing_expression '?' expression ':' expression .

    $default  reduce using rule 146 (conditional_expression)


state 629

  263 namespace_body: '{' extern_alias_directivesopt using_directivesopt namespace_member_declarationsopt '}' .

    $default  reduce using rule 263 (namespace_body)


state 630

  490 type_parameter_list: '<' type_parameters '>' .

    $default  reduce using rule 490 (type_parameter_list)


state 631

  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  492 type_parameters: type_parameters ',' . attributesopt IDENTIFIER
  651 attributesopt: .  [IDENTIFIER]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    attributes          go to state 23
    attribute_sections  go to state 24
    attribute_section   go to state 25
    attributesopt       go to state 692


state 632

  491 type_parameters: attributesopt IDENTIFIER .

    $default  reduce using rule 491 (type_parameters)


state 633

  299 type_name_list: ':' type_name .

    $default  reduce using rule 299 (type_name_list)


state 634

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  300 type_name_list: type_name_list ',' . type_name

    IDENTIFIER  shift, and go to state 149

    type_name               go to state 693
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20


state 635

  499 type_parameter_constraints_clause: WHERE . IDENTIFIER ':' type_parameter_constraints

    IDENTIFIER  shift, and go to state 694


state 636

  498 type_parameter_constraints_clauses: type_parameter_constraints_clauses . type_parameter_constraints_clause
  499 type_parameter_constraints_clause: . WHERE IDENTIFIER ':' type_parameter_constraints
  658 type_parameter_constraints_clausesopt: type_parameter_constraints_clauses .  ['{', ';']

    WHERE  shift, and go to state 635

    $default  reduce using rule 658 (type_parameter_constraints_clausesopt)

    type_parameter_constraints_clause  go to state 695


state 637

  497 type_parameter_constraints_clauses: type_parameter_constraints_clause .

    $default  reduce using rule 497 (type_parameter_constraints_clauses)


state 638

  297 class_declaration: attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt . class_body SemicolonOpt
  301 class_body: . '{' class_member_declarationsopt '}'

    '{'  shift, and go to state 696

    class_body  go to state 697


state 639

  333 formal_parameter_list: . fixed_parameters
  334                      | . fixed_parameters ',' parameter_array
  335                      | . parameter_array
  336 fixed_parameters: . fixed_parameter
  337                 | . fixed_parameters ',' fixed_parameter
  338 fixed_parameter: . attributesopt parameter_modifieropt type IDENTIFIER
  341 parameter_array: . attributesopt PARAMS array_type IDENTIFIER
  465 delegate_declaration: attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' . formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, OUT, PARAMS, REF, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  652              | . attributes
  661 formal_parameter_listopt: .  [')']
  662                         | . formal_parameter_list

    '['  shift, and go to state 22

    ')'       reduce using rule 661 (formal_parameter_listopt)
    $default  reduce using rule 651 (attributesopt)

    formal_parameter_list     go to state 698
    fixed_parameters          go to state 699
    fixed_parameter           go to state 700
    parameter_array           go to state 701
    attributes                go to state 23
    attribute_sections        go to state 24
    attribute_section         go to state 25
    attributesopt             go to state 702
    formal_parameter_listopt  go to state 703


state 640

  333 formal_parameter_list: . fixed_parameters
  334                      | . fixed_parameters ',' parameter_array
  335                      | . parameter_array
  336 fixed_parameters: . fixed_parameter
  337                 | . fixed_parameters ',' fixed_parameter
  338 fixed_parameter: . attributesopt parameter_modifieropt type IDENTIFIER
  341 parameter_array: . attributesopt PARAMS array_type IDENTIFIER
  464 delegate_declaration: attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' . formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, OUT, PARAMS, REF, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  652              | . attributes
  661 formal_parameter_listopt: .  [')']
  662                         | . formal_parameter_list

    '['  shift, and go to state 22

    ')'       reduce using rule 661 (formal_parameter_listopt)
    $default  reduce using rule 651 (attributesopt)

    formal_parameter_list     go to state 698
    fixed_parameters          go to state 699
    fixed_parameter           go to state 700
    parameter_array           go to state 701
    attributes                go to state 23
    attribute_sections        go to state 24
    attribute_section         go to state 25
    attributesopt             go to state 702
    formal_parameter_listopt  go to state 704


state 641

  459 enum_body: '{' enum_member_declarations . ',' '}'
  461 enum_member_declarations: enum_member_declarations . ',' enum_member_declaration
  686 enum_member_declarationsopt: enum_member_declarations .  ['}']

    ','  shift, and go to state 705

    $default  reduce using rule 686 (enum_member_declarationsopt)


state 642

  460 enum_member_declarations: enum_member_declaration .

    $default  reduce using rule 460 (enum_member_declarations)


state 643

  462 enum_member_declaration: attributesopt . IDENTIFIER
  463                        | attributesopt . IDENTIFIER '=' constant_expression

    IDENTIFIER  shift, and go to state 706


state 644

  458 enum_body: '{' enum_member_declarationsopt . '}'

    '}'  shift, and go to state 707


state 645

  456 enum_declaration: attributesopt modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt .

    $default  reduce using rule 456 (enum_declaration)


state 646

  438 interface_declaration: attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt . interface_body SemicolonOpt
  440 interface_body: . '{' interface_member_declarationsopt '}'

    '{'  shift, and go to state 708

    interface_body  go to state 709


state 647

  411 struct_declaration: attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt . struct_body SemicolonOpt
  413 struct_body: . '{' struct_member_declarationsopt '}'

    '{'  shift, and go to state 710

    struct_body  go to state 711


state 648

  195 constant_declarator_loc: IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 712


state 649

  192 local_constant_declaration: CONST type constant_declarators_loc .  [';']
  194 constant_declarators_loc: constant_declarators_loc . ',' constant_declarator_loc

    ','  shift, and go to state 713

    $default  reduce using rule 192 (local_constant_declaration)


state 650

  193 constant_declarators_loc: constant_declarator_loc .

    $default  reduce using rule 193 (constant_declarators_loc)


state 651

  222 do_statement: DO embedded_statement WHILE . '(' boolean_expression ')' ';'

    '('  shift, and go to state 714


state 652

  224 for_initializer: local_variable_declaration .

    $default  reduce using rule 224 (for_initializer)


state 653

  228 statement_expression_list: statement_expression .

    $default  reduce using rule 228 (statement_expression_list)


state 654

  638 for_initializeropt: for_initializer .

    $default  reduce using rule 638 (for_initializeropt)


state 655

  225 for_initializer: statement_expression_list .  [';']
  229 statement_expression_list: statement_expression_list . ',' statement_expression

    ','  shift, and go to state 715

    $default  reduce using rule 225 (for_initializer)


state 656

  223 for_statement: FOR '(' for_initializeropt . ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement

    ';'  shift, and go to state 716


state 657

  230 foreach_statement: FOREACH '(' type . IDENTIFIER IN expression ')' embedded_statement

    IDENTIFIER  shift, and go to state 717


state 658

  161 constant_expression: expression .

    $default  reduce using rule 161 (constant_expression)


state 659

  239 goto_statement: GOTO CASE constant_expression . ';'

    ';'  shift, and go to state 718


state 660

  240 goto_statement: GOTO DEFAULT ';' .

    $default  reduce using rule 240 (goto_statement)


state 661

  238 goto_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 238 (goto_statement)


state 662

  162 boolean_expression: expression .

    $default  reduce using rule 162 (boolean_expression)


state 663

  206 if_statement: IF '(' boolean_expression . ')' embedded_statement
  207             | IF '(' boolean_expression . ')' embedded_statement ELSE embedded_statement

    ')'  shift, and go to state 719


state 664

  254 lock_statement: LOCK '(' expression . ')' embedded_statement

    ')'  shift, and go to state 720


state 665

  241 return_statement: RETURN expressionopt ';' .

    $default  reduce using rule 241 (return_statement)


state 666

  208 switch_statement: SWITCH '(' expression . ')' switch_block

    ')'  shift, and go to state 721


state 667

  242 throw_statement: THROW expressionopt ';' .

    $default  reduce using rule 242 (throw_statement)


state 668

  249 specific_catch_clause: CATCH . '(' class_type identifieropt ')' block

    '('  shift, and go to state 722


state 669

  243 try_statement: TRY block catch_clauses .  [BASE, BOOL, BREAK, BYTE, CASE, CHAR, CONST, CONTINUE, DECIMAL, DEFAULT, DELEGATE, DO, DOUBLE, ELSE, FALSE, FLOAT, FOR, FOREACH, GOTO, IF, INT, LOCK, LONG, NULL, OBJECT, RETURN, SBYTE, SHORT, STRING, SWITCH, THIS, THROW, TRUE, TRY, UINT, ULONG, USHORT, USING, WHILE, YIELD, IDENTIFIER, UNCHECKED, CHECKED, TYPEOF, NEW, MINUS_MINUS, PLUS_PLUS, '+', '-', SINGLE_CHARACTER, HEX_DIGITS_WITH_SUFFIX, DECIMAL_DIGITS, REGULAR_STRING_LITERAL, SIMPLE_ESCAPE_SEQUENCE, DECIMAL_DIGITS_WITH_SUFFIX, HEX_DIGITS, HEXADECIMAL_ESCAPE_SEQUENCE, '(', '!', '~', '{', '}', ';']
  646 catch_clausesopt: catch_clauses .  [FINALLY]

    FINALLY   reduce using rule 646 (catch_clausesopt)
    $default  reduce using rule 243 (try_statement)


state 670

  245 catch_clauses: specific_catch_clauses .  [BASE, BOOL, BREAK, BYTE, CASE, CHAR, CONST, CONTINUE, DECIMAL, DEFAULT, DELEGATE, DO, DOUBLE, ELSE, FALSE, FINALLY, FLOAT, FOR, FOREACH, GOTO, IF, INT, LOCK, LONG, NULL, OBJECT, RETURN, SBYTE, SHORT, STRING, SWITCH, THIS, THROW, TRUE, TRY, UINT, ULONG, USHORT, USING, WHILE, YIELD, IDENTIFIER, UNCHECKED, CHECKED, TYPEOF, NEW, MINUS_MINUS, PLUS_PLUS, '+', '-', SINGLE_CHARACTER, HEX_DIGITS_WITH_SUFFIX, DECIMAL_DIGITS, REGULAR_STRING_LITERAL, SIMPLE_ESCAPE_SEQUENCE, DECIMAL_DIGITS_WITH_SUFFIX, HEX_DIGITS, HEXADECIMAL_ESCAPE_SEQUENCE, '(', '!', '~', '{', '}', ';']
  248 specific_catch_clauses: specific_catch_clauses . specific_catch_clause
  249 specific_catch_clause: . CATCH '(' class_type identifieropt ')' block
  648 specific_catch_clausesopt: specific_catch_clauses .  [CATCH]

    CATCH  shift, and go to state 668

    CATCH     [reduce using rule 648 (specific_catch_clausesopt)]
    $default  reduce using rule 245 (catch_clauses)

    specific_catch_clause  go to state 723


state 671

  247 specific_catch_clauses: specific_catch_clause .

    $default  reduce using rule 247 (specific_catch_clauses)


state 672

  244 try_statement: TRY block catch_clausesopt . finally_clause
  251 finally_clause: . FINALLY block

    FINALLY  shift, and go to state 724

    finally_clause  go to state 725


state 673

  246 catch_clauses: specific_catch_clausesopt . general_catch_clause
  250 general_catch_clause: . CATCH block

    CATCH  shift, and go to state 726

    general_catch_clause  go to state 727


state 674

  257 resource_acquisition: expression .

    $default  reduce using rule 257 (resource_acquisition)


state 675

  256 resource_acquisition: local_variable_declaration .

    $default  reduce using rule 256 (resource_acquisition)


state 676

  255 using_statement: USING '(' resource_acquisition . ')' embedded_statement

    ')'  shift, and go to state 728


state 677

  221 while_statement: WHILE '(' boolean_expression . ')' embedded_statement

    ')'  shift, and go to state 729


state 678

  259 yield_statement: YIELD BREAK ';' .

    $default  reduce using rule 259 (yield_statement)


state 679

  258 yield_statement: YIELD RETURN expression . ';'

    ';'  shift, and go to state 730


state 680

  182 labeled_statement: IDENTIFIER ':' statement .

    $default  reduce using rule 182 (labeled_statement)


state 681

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  189 local_variable_declarator: IDENTIFIER '=' . local_variable_initializer
  190 local_variable_initializer: . expression
  191                           | . array_initializer
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  434 array_initializer: . '{' variable_initializer_listopt '}'
  435                  | . '{' variable_initializer_list ',' '}'
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 414

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 731
    local_variable_initializer            go to state 732
    qualified_alias_member                go to state 264
    array_initializer                     go to state 733
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 682

  187 local_variable_declarators: local_variable_declarators ',' . local_variable_declarator
  188 local_variable_declarator: . IDENTIFIER
  189                          | . IDENTIFIER '=' local_variable_initializer

    IDENTIFIER  shift, and go to state 610

    local_variable_declarator  go to state 734


state 683

   89 unbound_type_name: IDENTIFIER SEMI_SEMI IDENTIFIER generic_dimension_specifieropt .

    $default  reduce using rule 89 (unbound_type_name)


state 684

   93 commas: commas ',' .

    $default  reduce using rule 93 (commas)


state 685

   91 generic_dimension_specifier: '<' commasopt '>' .

    $default  reduce using rule 91 (generic_dimension_specifier)


state 686

   91 generic_dimension_specifier: '<' . commasopt '>'
   92 commas: . ','
   93       | . commas ','
  625 commasopt: .  ['>']
  626          | . commas

    ','  shift, and go to state 619

    $default  reduce using rule 625 (commasopt)

    commas     go to state 620
    commasopt  go to state 621


state 687

   90 unbound_type_name: unbound_type_name '.' IDENTIFIER generic_dimension_specifieropt .

    $default  reduce using rule 90 (unbound_type_name)


state 688

  435 array_initializer: '{' variable_initializer_list ',' '}' .

    $default  reduce using rule 435 (array_initializer)


state 689

  437 variable_initializer_list: variable_initializer_list ',' variable_initializer .

    $default  reduce using rule 437 (variable_initializer_list)


state 690

  430 rank_specifiers: rank_specifiers . rank_specifier
  431 rank_specifier: . '[' dim_separatorsopt ']'
  620 rank_specifiersopt: rank_specifiers .  [LT_LT, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', ',', '(', ')', ']', ':', '{', '}', ';']

    '['  shift, and go to state 182

    $default  reduce using rule 620 (rank_specifiersopt)

    rank_specifier  go to state 302


state 691

   83 array_creation_expression: NEW non_array_type '[' expression_list ']' rank_specifiersopt . array_initializeropt
  434 array_initializer: . '{' variable_initializer_listopt '}'
  435                  | . '{' variable_initializer_list ',' '}'
  621 array_initializeropt: .  [LT_LT, '.', MINUS_MINUS, PLUS_PLUS, '*', '/', '%', '+', '-', RIGHT_SHIFT, '<', '>', AS, IS, GE, LE, NE, EQ_EQ, '&', '^', '|', AMP_AMP, BAR_BAR, QM_QM, '=', BAR_EQ, CARET_EQ, AMP_EQ, RIGHT_SHIFT_ASSIGNMENT, LT_LT_EQ, MINUS_EQ, PLUS_EQ, PERCENT_EQ, SLASH_EQ, STAR_EQ, '?', ',', '(', ')', ']', ':', '}', ';']
  622                     | . array_initializer

    '{'  shift, and go to state 414

    $default  reduce using rule 621 (array_initializeropt)

    array_initializer     go to state 735
    array_initializeropt  go to state 736


state 692

  492 type_parameters: type_parameters ',' attributesopt . IDENTIFIER

    IDENTIFIER  shift, and go to state 737


state 693

  300 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 300 (type_name_list)


state 694

  499 type_parameter_constraints_clause: WHERE IDENTIFIER . ':' type_parameter_constraints

    ':'  shift, and go to state 738


state 695

  498 type_parameter_constraints_clauses: type_parameter_constraints_clauses type_parameter_constraints_clause .

    $default  reduce using rule 498 (type_parameter_constraints_clauses)


state 696

  277 type_declaration: . class_declaration
  278                 | . struct_declaration
  279                 | . interface_declaration
  280                 | . enum_declaration
  281                 | . delegate_declaration
  297 class_declaration: . attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  301 class_body: '{' . class_member_declarationsopt '}'
  302 class_member_declarations: . class_member_declaration
  303                          | . class_member_declarations class_member_declaration
  304 class_member_declaration: . constant_declaration
  305                         | . field_declaration
  306                         | . method_declaration
  307                         | . property_declaration
  308                         | . event_declaration
  309                         | . indexer_declaration
  310                         | . operator_declaration
  311                         | . constructor_declaration
  312                         | . finalizer_declaration
  313                         | . static_constructor_declaration
  314                         | . type_declaration
  315 constant_declaration: . attributesopt modifiers_opt CONST type constant_declarators ';'
  319 field_declaration: . attributesopt modifiers_opt type variable_declarators ';'
  326 method_declaration: . method_header method_body
  327 method_header: . attributesopt modifiers_opt type member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  328              | . attributesopt modifiers_opt VOID member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  342 property_declaration: . attributesopt modifiers_opt type member_name '{' accessor_declarations '}'
  354 event_declaration: . attributesopt modifiers_opt EVENT type variable_declarators ';'
  355                  | . attributesopt modifiers_opt EVENT type member_name '{' event_accessor_declarations '}'
  360 indexer_declaration: . attributesopt indexer_declarator '{' accessor_declarations '}'
  363 operator_declaration: . attributesopt modifiers_opt operator_declarator operator_body
  397 constructor_declaration: . attributesopt modifiers_opt constructor_declarator constructor_body
  403 static_constructor_declaration: . attributesopt static_constructor_modifiers IDENTIFIER '(' ')' static_constructor_body
  408 finalizer_declaration: . attributesopt modifiers_opt '~' IDENTIFIER '(' ')' finalizer_body
  411 struct_declaration: . attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  438 interface_declaration: . attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: . attributesopt modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: . attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | . attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, IDENTIFIER, NEW, '~']
  652              | . attributes
  659 class_member_declarationsopt: .  ['}']
  660                             | . class_member_declarations

    '['  shift, and go to state 22

    '}'       reduce using rule 659 (class_member_declarationsopt)
    $default  reduce using rule 651 (attributesopt)

    type_declaration                go to state 739
    class_declaration               go to state 136
    class_member_declarations       go to state 740
    class_member_declaration        go to state 741
    constant_declaration            go to state 742
    field_declaration               go to state 743
    method_declaration              go to state 744
    method_header                   go to state 745
    property_declaration            go to state 746
    event_declaration               go to state 747
    indexer_declaration             go to state 748
    operator_declaration            go to state 749
    constructor_declaration         go to state 750
    static_constructor_declaration  go to state 751
    finalizer_declaration           go to state 752
    struct_declaration              go to state 137
    interface_declaration           go to state 138
    enum_declaration                go to state 139
    delegate_declaration            go to state 140
    attributes                      go to state 23
    attribute_sections              go to state 24
    attribute_section               go to state 25
    attributesopt                   go to state 753
    class_member_declarationsopt    go to state 754


state 697

  297 class_declaration: attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body . SemicolonOpt
  691 SemicolonOpt: .  [$end, ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, IDENTIFIER, NEW, '[', '~', '}']
  692             | . ';'

    ';'  shift, and go to state 383

    $default  reduce using rule 691 (SemicolonOpt)

    SemicolonOpt  go to state 755


state 698

  662 formal_parameter_listopt: formal_parameter_list .

    $default  reduce using rule 662 (formal_parameter_listopt)


state 699

  333 formal_parameter_list: fixed_parameters .  [')', ']']
  334                      | fixed_parameters . ',' parameter_array
  337 fixed_parameters: fixed_parameters . ',' fixed_parameter

    ','  shift, and go to state 756

    $default  reduce using rule 333 (formal_parameter_list)


state 700

  336 fixed_parameters: fixed_parameter .

    $default  reduce using rule 336 (fixed_parameters)


state 701

  335 formal_parameter_list: parameter_array .

    $default  reduce using rule 335 (formal_parameter_list)


state 702

  338 fixed_parameter: attributesopt . parameter_modifieropt type IDENTIFIER
  339 parameter_modifier: . REF
  340                   | . OUT
  341 parameter_array: attributesopt . PARAMS array_type IDENTIFIER
  631 parameter_modifieropt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  632                      | . parameter_modifier

    OUT     shift, and go to state 397
    PARAMS  shift, and go to state 757
    REF     shift, and go to state 398

    $default  reduce using rule 631 (parameter_modifieropt)

    parameter_modifier     go to state 401
    parameter_modifieropt  go to state 758


state 703

  465 delegate_declaration: attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt . ')' type_parameter_constraints_clausesopt ';'

    ')'  shift, and go to state 759


state 704

  464 delegate_declaration: attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt . ')' type_parameter_constraints_clausesopt ';'

    ')'  shift, and go to state 760


state 705

  459 enum_body: '{' enum_member_declarations ',' . '}'
  461 enum_member_declarations: enum_member_declarations ',' . enum_member_declaration
  462 enum_member_declaration: . attributesopt IDENTIFIER
  463                        | . attributesopt IDENTIFIER '=' constant_expression
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [IDENTIFIER]
  652              | . attributes

    '['  shift, and go to state 22
    '}'  shift, and go to state 761

    $default  reduce using rule 651 (attributesopt)

    enum_member_declaration  go to state 762
    attributes               go to state 23
    attribute_sections       go to state 24
    attribute_section        go to state 25
    attributesopt            go to state 643


state 706

  462 enum_member_declaration: attributesopt IDENTIFIER .  [',', '}']
  463                        | attributesopt IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 763

    $default  reduce using rule 462 (enum_member_declaration)


state 707

  458 enum_body: '{' enum_member_declarationsopt '}' .

    $default  reduce using rule 458 (enum_body)


state 708

  440 interface_body: '{' . interface_member_declarationsopt '}'
  441 interface_member_declarations: . interface_member_declaration
  442                              | . interface_member_declarations interface_member_declaration
  443 interface_member_declaration: . interface_method_declaration
  444                             | . interface_property_declaration
  445                             | . interface_event_declaration
  446                             | . interface_indexer_declaration
  447 interface_method_declaration: . attributesopt newopt type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  448                             | . attributesopt newopt VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  449 interface_property_declaration: . attributesopt newopt type IDENTIFIER '{' interface_accessors '}'
  454 interface_event_declaration: . attributesopt newopt EVENT type IDENTIFIER ';'
  455 interface_indexer_declaration: . attributesopt newopt type THIS '[' formal_parameter_list ']' '{' interface_accessors '}'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, EVENT, FLOAT, INT, LONG, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, VOID, IDENTIFIER, NEW]
  652              | . attributes
  679 interface_member_declarationsopt: .  ['}']
  680                                 | . interface_member_declarations

    '['  shift, and go to state 22

    '}'       reduce using rule 679 (interface_member_declarationsopt)
    $default  reduce using rule 651 (attributesopt)

    interface_member_declarations     go to state 764
    interface_member_declaration      go to state 765
    interface_method_declaration      go to state 766
    interface_property_declaration    go to state 767
    interface_event_declaration       go to state 768
    interface_indexer_declaration     go to state 769
    attributes                        go to state 23
    attribute_sections                go to state 24
    attribute_section                 go to state 25
    attributesopt                     go to state 770
    interface_member_declarationsopt  go to state 771


state 709

  438 interface_declaration: attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body . SemicolonOpt
  691 SemicolonOpt: .  [$end, ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, IDENTIFIER, NEW, '[', '~', '}']
  692             | . ';'

    ';'  shift, and go to state 383

    $default  reduce using rule 691 (SemicolonOpt)

    SemicolonOpt  go to state 772


state 710

  277 type_declaration: . class_declaration
  278                 | . struct_declaration
  279                 | . interface_declaration
  280                 | . enum_declaration
  281                 | . delegate_declaration
  297 class_declaration: . attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  315 constant_declaration: . attributesopt modifiers_opt CONST type constant_declarators ';'
  319 field_declaration: . attributesopt modifiers_opt type variable_declarators ';'
  326 method_declaration: . method_header method_body
  327 method_header: . attributesopt modifiers_opt type member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  328              | . attributesopt modifiers_opt VOID member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  342 property_declaration: . attributesopt modifiers_opt type member_name '{' accessor_declarations '}'
  354 event_declaration: . attributesopt modifiers_opt EVENT type variable_declarators ';'
  355                  | . attributesopt modifiers_opt EVENT type member_name '{' event_accessor_declarations '}'
  360 indexer_declaration: . attributesopt indexer_declarator '{' accessor_declarations '}'
  363 operator_declaration: . attributesopt modifiers_opt operator_declarator operator_body
  397 constructor_declaration: . attributesopt modifiers_opt constructor_declarator constructor_body
  403 static_constructor_declaration: . attributesopt static_constructor_modifiers IDENTIFIER '(' ')' static_constructor_body
  411 struct_declaration: . attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  413 struct_body: '{' . struct_member_declarationsopt '}'
  414 struct_member_declarations: . struct_member_declaration
  415                           | . struct_member_declarations struct_member_declaration
  416 struct_member_declaration: . constant_declaration
  417                          | . field_declaration
  418                          | . method_declaration
  419                          | . property_declaration
  420                          | . event_declaration
  421                          | . indexer_declaration
  422                          | . operator_declaration
  423                          | . constructor_declaration
  424                          | . static_constructor_declaration
  425                          | . type_declaration
  438 interface_declaration: . attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: . attributesopt modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: . attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | . attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, IDENTIFIER, NEW]
  652              | . attributes
  673 struct_member_declarationsopt: .  ['}']
  674                              | . struct_member_declarations

    '['  shift, and go to state 22

    '}'       reduce using rule 673 (struct_member_declarationsopt)
    $default  reduce using rule 651 (attributesopt)

    type_declaration                go to state 773
    class_declaration               go to state 136
    constant_declaration            go to state 774
    field_declaration               go to state 775
    method_declaration              go to state 776
    method_header                   go to state 745
    property_declaration            go to state 777
    event_declaration               go to state 778
    indexer_declaration             go to state 779
    operator_declaration            go to state 780
    constructor_declaration         go to state 781
    static_constructor_declaration  go to state 782
    struct_declaration              go to state 137
    struct_member_declarations      go to state 783
    struct_member_declaration       go to state 784
    interface_declaration           go to state 138
    enum_declaration                go to state 139
    delegate_declaration            go to state 140
    attributes                      go to state 23
    attribute_sections              go to state 24
    attribute_section               go to state 25
    attributesopt                   go to state 785
    struct_member_declarationsopt   go to state 786


state 711

  411 struct_declaration: attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body . SemicolonOpt
  691 SemicolonOpt: .  [$end, ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, NAMESPACE, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, IDENTIFIER, NEW, '[', '~', '}']
  692             | . ';'

    ';'  shift, and go to state 383

    $default  reduce using rule 691 (SemicolonOpt)

    SemicolonOpt  go to state 787


state 712

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  161 constant_expression: . expression
  195 constant_declarator_loc: IDENTIFIER '=' . constant_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 658
    constant_expression                   go to state 788
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 713

  194 constant_declarators_loc: constant_declarators_loc ',' . constant_declarator_loc
  195 constant_declarator_loc: . IDENTIFIER '=' constant_expression

    IDENTIFIER  shift, and go to state 648

    constant_declarator_loc  go to state 789


state 714

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  162 boolean_expression: . expression
  222 do_statement: DO embedded_statement WHILE '(' . boolean_expression ')' ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 662
    boolean_expression                    go to state 790
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 715

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  229 statement_expression_list: statement_expression_list ',' . statement_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    statement_expression                  go to state 791
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 716

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  162 boolean_expression: . expression
  223 for_statement: FOR '(' for_initializeropt ';' . for_conditionopt ';' for_iteratoropt ')' embedded_statement
  226 for_condition: . boolean_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  639 for_conditionopt: .  [';']
  640                 | . for_condition

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    $default  reduce using rule 639 (for_conditionopt)

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 662
    boolean_expression                    go to state 792
    for_condition                         go to state 793
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    for_conditionopt                      go to state 794


state 717

  230 foreach_statement: FOREACH '(' type IDENTIFIER . IN expression ')' embedded_statement

    IN  shift, and go to state 795


state 718

  239 goto_statement: GOTO CASE constant_expression ';' .

    $default  reduce using rule 239 (goto_statement)


state 719

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  181 empty_statement: . ';'
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  206             | IF '(' boolean_expression ')' . embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  207             | IF '(' boolean_expression ')' . embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    embedded_statement                    go to state 796
    block                                 go to state 507
    empty_statement                       go to state 509
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 720

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  181 empty_statement: . ';'
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  254               | LOCK '(' expression ')' . embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    embedded_statement                    go to state 797
    block                                 go to state 507
    empty_statement                       go to state 509
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 721

  208 switch_statement: SWITCH '(' expression ')' . switch_block
  209 switch_block: . '{' switch_sectionsopt '}'

    '{'  shift, and go to state 798

    switch_block  go to state 799


state 722

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
   35 class_type: . type_name OBJECT
   36           | . STRING
  249 specific_catch_clause: CATCH '(' . class_type identifieropt ')' block
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt

    STRING      shift, and go to state 148
    IDENTIFIER  shift, and go to state 149

    type_name               go to state 800
    namespace_or_type_name  go to state 122
    class_type              go to state 801
    qualified_alias_member  go to state 20


state 723

  248 specific_catch_clauses: specific_catch_clauses specific_catch_clause .

    $default  reduce using rule 248 (specific_catch_clauses)


state 724

  178 block: . '{' statement_listopt '}'
  251 finally_clause: FINALLY . block

    '{'  shift, and go to state 404

    block  go to state 802


state 725

  244 try_statement: TRY block catch_clausesopt finally_clause .

    $default  reduce using rule 244 (try_statement)


state 726

  178 block: . '{' statement_listopt '}'
  250 general_catch_clause: CATCH . block

    '{'  shift, and go to state 404

    block  go to state 803


state 727

  246 catch_clauses: specific_catch_clausesopt general_catch_clause .

    $default  reduce using rule 246 (catch_clauses)


state 728

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  181 empty_statement: . ';'
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  255                | USING '(' resource_acquisition ')' . embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    embedded_statement                    go to state 804
    block                                 go to state 507
    empty_statement                       go to state 509
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 729

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  181 empty_statement: . ';'
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  221                | WHILE '(' boolean_expression ')' . embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    embedded_statement                    go to state 805
    block                                 go to state 507
    empty_statement                       go to state 509
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 730

  258 yield_statement: YIELD RETURN expression ';' .

    $default  reduce using rule 258 (yield_statement)


state 731

  190 local_variable_initializer: expression .

    $default  reduce using rule 190 (local_variable_initializer)


state 732

  189 local_variable_declarator: IDENTIFIER '=' local_variable_initializer .

    $default  reduce using rule 189 (local_variable_declarator)


state 733

  191 local_variable_initializer: array_initializer .

    $default  reduce using rule 191 (local_variable_initializer)


state 734

  187 local_variable_declarators: local_variable_declarators ',' local_variable_declarator .

    $default  reduce using rule 187 (local_variable_declarators)


state 735

  622 array_initializeropt: array_initializer .

    $default  reduce using rule 622 (array_initializeropt)


state 736

   83 array_creation_expression: NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt .

    $default  reduce using rule 83 (array_creation_expression)


state 737

  492 type_parameters: type_parameters ',' attributesopt IDENTIFIER .

    $default  reduce using rule 492 (type_parameters)


state 738

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  499 type_parameter_constraints_clause: WHERE IDENTIFIER ':' . type_parameter_constraints
  500 type_parameter_constraints: . primary_constraint
  501                           | . secondary_constraints
  502                           | . constructor_constraint
  503                           | . primary_constraint ',' secondary_constraints
  504                           | . primary_constraint ',' constructor_constraint
  505                           | . secondary_constraints ',' constructor_constraint
  506                           | . primary_constraint ',' secondary_constraints ',' constructor_constraint
  507 primary_constraint: . class_type
  508                   | . CLASS
  509                   | . STRUCT
  510 secondary_constraints: . type_name
  511                      | . secondary_constraints ',' type_name
  512 constructor_constraint: . NEW '(' ')'

    CLASS       shift, and go to state 806
    STRING      shift, and go to state 148
    STRUCT      shift, and go to state 807
    IDENTIFIER  shift, and go to state 149
    NEW         shift, and go to state 808

    type_name                   go to state 809
    namespace_or_type_name      go to state 122
    class_type                  go to state 810
    qualified_alias_member      go to state 20
    type_parameter_constraints  go to state 811
    primary_constraint          go to state 812
    secondary_constraints       go to state 813
    constructor_constraint      go to state 814


state 739

  314 class_member_declaration: type_declaration .

    $default  reduce using rule 314 (class_member_declaration)


state 740

  277 type_declaration: . class_declaration
  278                 | . struct_declaration
  279                 | . interface_declaration
  280                 | . enum_declaration
  281                 | . delegate_declaration
  297 class_declaration: . attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  303 class_member_declarations: class_member_declarations . class_member_declaration
  304 class_member_declaration: . constant_declaration
  305                         | . field_declaration
  306                         | . method_declaration
  307                         | . property_declaration
  308                         | . event_declaration
  309                         | . indexer_declaration
  310                         | . operator_declaration
  311                         | . constructor_declaration
  312                         | . finalizer_declaration
  313                         | . static_constructor_declaration
  314                         | . type_declaration
  315 constant_declaration: . attributesopt modifiers_opt CONST type constant_declarators ';'
  319 field_declaration: . attributesopt modifiers_opt type variable_declarators ';'
  326 method_declaration: . method_header method_body
  327 method_header: . attributesopt modifiers_opt type member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  328              | . attributesopt modifiers_opt VOID member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  342 property_declaration: . attributesopt modifiers_opt type member_name '{' accessor_declarations '}'
  354 event_declaration: . attributesopt modifiers_opt EVENT type variable_declarators ';'
  355                  | . attributesopt modifiers_opt EVENT type member_name '{' event_accessor_declarations '}'
  360 indexer_declaration: . attributesopt indexer_declarator '{' accessor_declarations '}'
  363 operator_declaration: . attributesopt modifiers_opt operator_declarator operator_body
  397 constructor_declaration: . attributesopt modifiers_opt constructor_declarator constructor_body
  403 static_constructor_declaration: . attributesopt static_constructor_modifiers IDENTIFIER '(' ')' static_constructor_body
  408 finalizer_declaration: . attributesopt modifiers_opt '~' IDENTIFIER '(' ')' finalizer_body
  411 struct_declaration: . attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  438 interface_declaration: . attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: . attributesopt modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: . attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | . attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, IDENTIFIER, NEW, '~']
  652              | . attributes
  660 class_member_declarationsopt: class_member_declarations .  ['}']

    '['  shift, and go to state 22

    '}'       reduce using rule 660 (class_member_declarationsopt)
    $default  reduce using rule 651 (attributesopt)

    type_declaration                go to state 739
    class_declaration               go to state 136
    class_member_declaration        go to state 815
    constant_declaration            go to state 742
    field_declaration               go to state 743
    method_declaration              go to state 744
    method_header                   go to state 745
    property_declaration            go to state 746
    event_declaration               go to state 747
    indexer_declaration             go to state 748
    operator_declaration            go to state 749
    constructor_declaration         go to state 750
    static_constructor_declaration  go to state 751
    finalizer_declaration           go to state 752
    struct_declaration              go to state 137
    interface_declaration           go to state 138
    enum_declaration                go to state 139
    delegate_declaration            go to state 140
    attributes                      go to state 23
    attribute_sections              go to state 24
    attribute_section               go to state 25
    attributesopt                   go to state 753


state 741

  302 class_member_declarations: class_member_declaration .

    $default  reduce using rule 302 (class_member_declarations)


state 742

  304 class_member_declaration: constant_declaration .

    $default  reduce using rule 304 (class_member_declaration)


state 743

  305 class_member_declaration: field_declaration .

    $default  reduce using rule 305 (class_member_declaration)


state 744

  306 class_member_declaration: method_declaration .

    $default  reduce using rule 306 (class_member_declaration)


state 745

  178 block: . '{' statement_listopt '}'
  326 method_declaration: method_header . method_body
  331 method_body: . block
  332            | . ';'

    '{'  shift, and go to state 404
    ';'  shift, and go to state 816

    block        go to state 817
    method_body  go to state 818


state 746

  307 class_member_declaration: property_declaration .

    $default  reduce using rule 307 (class_member_declaration)


state 747

  308 class_member_declaration: event_declaration .

    $default  reduce using rule 308 (class_member_declaration)


state 748

  309 class_member_declaration: indexer_declaration .

    $default  reduce using rule 309 (class_member_declaration)


state 749

  310 class_member_declaration: operator_declaration .

    $default  reduce using rule 310 (class_member_declaration)


state 750

  311 class_member_declaration: constructor_declaration .

    $default  reduce using rule 311 (class_member_declaration)


state 751

  313 class_member_declaration: static_constructor_declaration .

    $default  reduce using rule 313 (class_member_declaration)


state 752

  312 class_member_declaration: finalizer_declaration .

    $default  reduce using rule 312 (class_member_declaration)


state 753

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  283 modifiers_opt: .  [ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, IDENTIFIER, NEW, '~']
  284              | . modifiers_opt modifier
  297 class_declaration: attributesopt . modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  315 constant_declaration: attributesopt . modifiers_opt CONST type constant_declarators ';'
  319 field_declaration: attributesopt . modifiers_opt type variable_declarators ';'
  327 method_header: attributesopt . modifiers_opt type member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  328              | attributesopt . modifiers_opt VOID member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  342 property_declaration: attributesopt . modifiers_opt type member_name '{' accessor_declarations '}'
  354 event_declaration: attributesopt . modifiers_opt EVENT type variable_declarators ';'
  355                  | attributesopt . modifiers_opt EVENT type member_name '{' event_accessor_declarations '}'
  360 indexer_declaration: attributesopt . indexer_declarator '{' accessor_declarations '}'
  361 indexer_declarator: . type THIS '[' formal_parameter_list ']'
  362                   | . type type_name '.' THIS '[' formal_parameter_list ']'
  363 operator_declaration: attributesopt . modifiers_opt operator_declarator operator_body
  397 constructor_declaration: attributesopt . modifiers_opt constructor_declarator constructor_body
  403 static_constructor_declaration: attributesopt . static_constructor_modifiers IDENTIFIER '(' ')' static_constructor_body
  404 static_constructor_modifiers: . modifiers_opt STATIC
  405                             | . STATIC modifiers_opt
  408 finalizer_declaration: attributesopt . modifiers_opt '~' IDENTIFIER '(' ')' finalizer_body
  411 struct_declaration: attributesopt . modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  438 interface_declaration: attributesopt . modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: attributesopt . modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: attributesopt . modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | attributesopt . modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STATIC      shift, and go to state 819
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    BOOL        [reduce using rule 283 (modifiers_opt)]
    BYTE        [reduce using rule 283 (modifiers_opt)]
    CHAR        [reduce using rule 283 (modifiers_opt)]
    DECIMAL     [reduce using rule 283 (modifiers_opt)]
    DOUBLE      [reduce using rule 283 (modifiers_opt)]
    FLOAT       [reduce using rule 283 (modifiers_opt)]
    INT         [reduce using rule 283 (modifiers_opt)]
    LONG        [reduce using rule 283 (modifiers_opt)]
    SBYTE       [reduce using rule 283 (modifiers_opt)]
    SHORT       [reduce using rule 283 (modifiers_opt)]
    STATIC      [reduce using rule 283 (modifiers_opt)]
    STRING      [reduce using rule 283 (modifiers_opt)]
    UINT        [reduce using rule 283 (modifiers_opt)]
    ULONG       [reduce using rule 283 (modifiers_opt)]
    USHORT      [reduce using rule 283 (modifiers_opt)]
    IDENTIFIER  [reduce using rule 283 (modifiers_opt)]
    $default    reduce using rule 283 (modifiers_opt)

    type_name                     go to state 150
    namespace_or_type_name        go to state 122
    type                          go to state 820
    value_type                    go to state 152
    struct_type                   go to state 153
    simple_type                   go to state 154
    numeric_type                  go to state 155
    integral_type                 go to state 156
    floating_point_type           go to state 157
    nullable_type                 go to state 158
    non_nullable_value_type       go to state 159
    reference_type                go to state 160
    class_type                    go to state 161
    qualified_alias_member        go to state 20
    modifiers_opt                 go to state 821
    indexer_declarator            go to state 822
    static_constructor_modifiers  go to state 823
    array_type                    go to state 162
    non_array_type                go to state 163


state 754

  301 class_body: '{' class_member_declarationsopt . '}'

    '}'  shift, and go to state 824


state 755

  297 class_declaration: attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt .

    $default  reduce using rule 297 (class_declaration)


state 756

  334 formal_parameter_list: fixed_parameters ',' . parameter_array
  337 fixed_parameters: fixed_parameters ',' . fixed_parameter
  338 fixed_parameter: . attributesopt parameter_modifieropt type IDENTIFIER
  341 parameter_array: . attributesopt PARAMS array_type IDENTIFIER
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, OUT, PARAMS, REF, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    fixed_parameter     go to state 825
    parameter_array     go to state 826
    attributes          go to state 23
    attribute_sections  go to state 24
    attribute_section   go to state 25
    attributesopt       go to state 702


state 757

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  341 parameter_array: attributesopt PARAMS . array_type IDENTIFIER
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 827
    namespace_or_type_name   go to state 122
    value_type               go to state 828
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    class_type               go to state 829
    qualified_alias_member   go to state 20
    array_type               go to state 830
    non_array_type           go to state 163


state 758

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  338 fixed_parameter: attributesopt parameter_modifieropt . type IDENTIFIER
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 831
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 759

  465 delegate_declaration: attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' . type_parameter_constraints_clausesopt ';'
  497 type_parameter_constraints_clauses: . type_parameter_constraints_clause
  498                                   | . type_parameter_constraints_clauses type_parameter_constraints_clause
  499 type_parameter_constraints_clause: . WHERE IDENTIFIER ':' type_parameter_constraints
  657 type_parameter_constraints_clausesopt: .  [';']
  658                                      | . type_parameter_constraints_clauses

    WHERE  shift, and go to state 635

    $default  reduce using rule 657 (type_parameter_constraints_clausesopt)

    type_parameter_constraints_clauses     go to state 636
    type_parameter_constraints_clause      go to state 637
    type_parameter_constraints_clausesopt  go to state 832


state 760

  464 delegate_declaration: attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' . type_parameter_constraints_clausesopt ';'
  497 type_parameter_constraints_clauses: . type_parameter_constraints_clause
  498                                   | . type_parameter_constraints_clauses type_parameter_constraints_clause
  499 type_parameter_constraints_clause: . WHERE IDENTIFIER ':' type_parameter_constraints
  657 type_parameter_constraints_clausesopt: .  [';']
  658                                      | . type_parameter_constraints_clauses

    WHERE  shift, and go to state 635

    $default  reduce using rule 657 (type_parameter_constraints_clausesopt)

    type_parameter_constraints_clauses     go to state 636
    type_parameter_constraints_clause      go to state 637
    type_parameter_constraints_clausesopt  go to state 833


state 761

  459 enum_body: '{' enum_member_declarations ',' '}' .

    $default  reduce using rule 459 (enum_body)


state 762

  461 enum_member_declarations: enum_member_declarations ',' enum_member_declaration .

    $default  reduce using rule 461 (enum_member_declarations)


state 763

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  161 constant_expression: . expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  463 enum_member_declaration: attributesopt IDENTIFIER '=' . constant_expression
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 658
    constant_expression                   go to state 834
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 764

  442 interface_member_declarations: interface_member_declarations . interface_member_declaration
  443 interface_member_declaration: . interface_method_declaration
  444                             | . interface_property_declaration
  445                             | . interface_event_declaration
  446                             | . interface_indexer_declaration
  447 interface_method_declaration: . attributesopt newopt type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  448                             | . attributesopt newopt VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  449 interface_property_declaration: . attributesopt newopt type IDENTIFIER '{' interface_accessors '}'
  454 interface_event_declaration: . attributesopt newopt EVENT type IDENTIFIER ';'
  455 interface_indexer_declaration: . attributesopt newopt type THIS '[' formal_parameter_list ']' '{' interface_accessors '}'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, EVENT, FLOAT, INT, LONG, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, VOID, IDENTIFIER, NEW]
  652              | . attributes
  680 interface_member_declarationsopt: interface_member_declarations .  ['}']

    '['  shift, and go to state 22

    '}'       reduce using rule 680 (interface_member_declarationsopt)
    $default  reduce using rule 651 (attributesopt)

    interface_member_declaration    go to state 835
    interface_method_declaration    go to state 766
    interface_property_declaration  go to state 767
    interface_event_declaration     go to state 768
    interface_indexer_declaration   go to state 769
    attributes                      go to state 23
    attribute_sections              go to state 24
    attribute_section               go to state 25
    attributesopt                   go to state 770


state 765

  441 interface_member_declarations: interface_member_declaration .

    $default  reduce using rule 441 (interface_member_declarations)


state 766

  443 interface_member_declaration: interface_method_declaration .

    $default  reduce using rule 443 (interface_member_declaration)


state 767

  444 interface_member_declaration: interface_property_declaration .

    $default  reduce using rule 444 (interface_member_declaration)


state 768

  445 interface_member_declaration: interface_event_declaration .

    $default  reduce using rule 445 (interface_member_declaration)


state 769

  446 interface_member_declaration: interface_indexer_declaration .

    $default  reduce using rule 446 (interface_member_declaration)


state 770

  447 interface_method_declaration: attributesopt . newopt type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  448                             | attributesopt . newopt VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  449 interface_property_declaration: attributesopt . newopt type IDENTIFIER '{' interface_accessors '}'
  454 interface_event_declaration: attributesopt . newopt EVENT type IDENTIFIER ';'
  455 interface_indexer_declaration: attributesopt . newopt type THIS '[' formal_parameter_list ']' '{' interface_accessors '}'
  681 newopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, EVENT, FLOAT, INT, LONG, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, VOID, IDENTIFIER]
  682       | . NEW

    NEW  shift, and go to state 836

    $default  reduce using rule 681 (newopt)

    newopt  go to state 837


state 771

  440 interface_body: '{' interface_member_declarationsopt . '}'

    '}'  shift, and go to state 838


state 772

  438 interface_declaration: attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt .

    $default  reduce using rule 438 (interface_declaration)


state 773

  425 struct_member_declaration: type_declaration .

    $default  reduce using rule 425 (struct_member_declaration)


state 774

  416 struct_member_declaration: constant_declaration .

    $default  reduce using rule 416 (struct_member_declaration)


state 775

  417 struct_member_declaration: field_declaration .

    $default  reduce using rule 417 (struct_member_declaration)


state 776

  418 struct_member_declaration: method_declaration .

    $default  reduce using rule 418 (struct_member_declaration)


state 777

  419 struct_member_declaration: property_declaration .

    $default  reduce using rule 419 (struct_member_declaration)


state 778

  420 struct_member_declaration: event_declaration .

    $default  reduce using rule 420 (struct_member_declaration)


state 779

  421 struct_member_declaration: indexer_declaration .

    $default  reduce using rule 421 (struct_member_declaration)


state 780

  422 struct_member_declaration: operator_declaration .

    $default  reduce using rule 422 (struct_member_declaration)


state 781

  423 struct_member_declaration: constructor_declaration .

    $default  reduce using rule 423 (struct_member_declaration)


state 782

  424 struct_member_declaration: static_constructor_declaration .

    $default  reduce using rule 424 (struct_member_declaration)


state 783

  277 type_declaration: . class_declaration
  278                 | . struct_declaration
  279                 | . interface_declaration
  280                 | . enum_declaration
  281                 | . delegate_declaration
  297 class_declaration: . attributesopt modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  315 constant_declaration: . attributesopt modifiers_opt CONST type constant_declarators ';'
  319 field_declaration: . attributesopt modifiers_opt type variable_declarators ';'
  326 method_declaration: . method_header method_body
  327 method_header: . attributesopt modifiers_opt type member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  328              | . attributesopt modifiers_opt VOID member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  342 property_declaration: . attributesopt modifiers_opt type member_name '{' accessor_declarations '}'
  354 event_declaration: . attributesopt modifiers_opt EVENT type variable_declarators ';'
  355                  | . attributesopt modifiers_opt EVENT type member_name '{' event_accessor_declarations '}'
  360 indexer_declaration: . attributesopt indexer_declarator '{' accessor_declarations '}'
  363 operator_declaration: . attributesopt modifiers_opt operator_declarator operator_body
  397 constructor_declaration: . attributesopt modifiers_opt constructor_declarator constructor_body
  403 static_constructor_declaration: . attributesopt static_constructor_modifiers IDENTIFIER '(' ')' static_constructor_body
  411 struct_declaration: . attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  415 struct_member_declarations: struct_member_declarations . struct_member_declaration
  416 struct_member_declaration: . constant_declaration
  417                          | . field_declaration
  418                          | . method_declaration
  419                          | . property_declaration
  420                          | . event_declaration
  421                          | . indexer_declaration
  422                          | . operator_declaration
  423                          | . constructor_declaration
  424                          | . static_constructor_declaration
  425                          | . type_declaration
  438 interface_declaration: . attributesopt modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: . attributesopt modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: . attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | . attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, IDENTIFIER, NEW]
  652              | . attributes
  674 struct_member_declarationsopt: struct_member_declarations .  ['}']

    '['  shift, and go to state 22

    '}'       reduce using rule 674 (struct_member_declarationsopt)
    $default  reduce using rule 651 (attributesopt)

    type_declaration                go to state 773
    class_declaration               go to state 136
    constant_declaration            go to state 774
    field_declaration               go to state 775
    method_declaration              go to state 776
    method_header                   go to state 745
    property_declaration            go to state 777
    event_declaration               go to state 778
    indexer_declaration             go to state 779
    operator_declaration            go to state 780
    constructor_declaration         go to state 781
    static_constructor_declaration  go to state 782
    struct_declaration              go to state 137
    struct_member_declaration       go to state 839
    interface_declaration           go to state 138
    enum_declaration                go to state 139
    delegate_declaration            go to state 140
    attributes                      go to state 23
    attribute_sections              go to state 24
    attribute_section               go to state 25
    attributesopt                   go to state 785


state 784

  414 struct_member_declarations: struct_member_declaration .

    $default  reduce using rule 414 (struct_member_declarations)


state 785

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  283 modifiers_opt: .  [ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, IDENTIFIER, NEW]
  284              | . modifiers_opt modifier
  297 class_declaration: attributesopt . modifiers_opt CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  315 constant_declaration: attributesopt . modifiers_opt CONST type constant_declarators ';'
  319 field_declaration: attributesopt . modifiers_opt type variable_declarators ';'
  327 method_header: attributesopt . modifiers_opt type member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  328              | attributesopt . modifiers_opt VOID member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  342 property_declaration: attributesopt . modifiers_opt type member_name '{' accessor_declarations '}'
  354 event_declaration: attributesopt . modifiers_opt EVENT type variable_declarators ';'
  355                  | attributesopt . modifiers_opt EVENT type member_name '{' event_accessor_declarations '}'
  360 indexer_declaration: attributesopt . indexer_declarator '{' accessor_declarations '}'
  361 indexer_declarator: . type THIS '[' formal_parameter_list ']'
  362                   | . type type_name '.' THIS '[' formal_parameter_list ']'
  363 operator_declaration: attributesopt . modifiers_opt operator_declarator operator_body
  397 constructor_declaration: attributesopt . modifiers_opt constructor_declarator constructor_body
  403 static_constructor_declaration: attributesopt . static_constructor_modifiers IDENTIFIER '(' ')' static_constructor_body
  404 static_constructor_modifiers: . modifiers_opt STATIC
  405                             | . STATIC modifiers_opt
  411 struct_declaration: attributesopt . modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  438 interface_declaration: attributesopt . modifiers_opt INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: attributesopt . modifiers_opt ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: attributesopt . modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | attributesopt . modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STATIC      shift, and go to state 819
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    BOOL        [reduce using rule 283 (modifiers_opt)]
    BYTE        [reduce using rule 283 (modifiers_opt)]
    CHAR        [reduce using rule 283 (modifiers_opt)]
    DECIMAL     [reduce using rule 283 (modifiers_opt)]
    DOUBLE      [reduce using rule 283 (modifiers_opt)]
    FLOAT       [reduce using rule 283 (modifiers_opt)]
    INT         [reduce using rule 283 (modifiers_opt)]
    LONG        [reduce using rule 283 (modifiers_opt)]
    SBYTE       [reduce using rule 283 (modifiers_opt)]
    SHORT       [reduce using rule 283 (modifiers_opt)]
    STATIC      [reduce using rule 283 (modifiers_opt)]
    STRING      [reduce using rule 283 (modifiers_opt)]
    UINT        [reduce using rule 283 (modifiers_opt)]
    ULONG       [reduce using rule 283 (modifiers_opt)]
    USHORT      [reduce using rule 283 (modifiers_opt)]
    IDENTIFIER  [reduce using rule 283 (modifiers_opt)]
    $default    reduce using rule 283 (modifiers_opt)

    type_name                     go to state 150
    namespace_or_type_name        go to state 122
    type                          go to state 820
    value_type                    go to state 152
    struct_type                   go to state 153
    simple_type                   go to state 154
    numeric_type                  go to state 155
    integral_type                 go to state 156
    floating_point_type           go to state 157
    nullable_type                 go to state 158
    non_nullable_value_type       go to state 159
    reference_type                go to state 160
    class_type                    go to state 161
    qualified_alias_member        go to state 20
    modifiers_opt                 go to state 840
    indexer_declarator            go to state 822
    static_constructor_modifiers  go to state 823
    array_type                    go to state 162
    non_array_type                go to state 163


state 786

  413 struct_body: '{' struct_member_declarationsopt . '}'

    '}'  shift, and go to state 841


state 787

  411 struct_declaration: attributesopt modifiers_opt STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt .

    $default  reduce using rule 411 (struct_declaration)


state 788

  195 constant_declarator_loc: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 195 (constant_declarator_loc)


state 789

  194 constant_declarators_loc: constant_declarators_loc ',' constant_declarator_loc .

    $default  reduce using rule 194 (constant_declarators_loc)


state 790

  222 do_statement: DO embedded_statement WHILE '(' boolean_expression . ')' ';'

    ')'  shift, and go to state 842


state 791

  229 statement_expression_list: statement_expression_list ',' statement_expression .

    $default  reduce using rule 229 (statement_expression_list)


state 792

  226 for_condition: boolean_expression .

    $default  reduce using rule 226 (for_condition)


state 793

  640 for_conditionopt: for_condition .

    $default  reduce using rule 640 (for_conditionopt)


state 794

  223 for_statement: FOR '(' for_initializeropt ';' for_conditionopt . ';' for_iteratoropt ')' embedded_statement

    ';'  shift, and go to state 843


state 795

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  230 foreach_statement: FOREACH '(' type IDENTIFIER IN . expression ')' embedded_statement
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 844
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 796

  206 if_statement: IF '(' boolean_expression ')' embedded_statement .  [BASE, BOOL, BREAK, BYTE, CASE, CHAR, CONST, CONTINUE, DECIMAL, DEFAULT, DELEGATE, DO, DOUBLE, ELSE, FALSE, FLOAT, FOR, FOREACH, GOTO, IF, INT, LOCK, LONG, NULL, OBJECT, RETURN, SBYTE, SHORT, STRING, SWITCH, THIS, THROW, TRUE, TRY, UINT, ULONG, USHORT, USING, WHILE, YIELD, IDENTIFIER, UNCHECKED, CHECKED, TYPEOF, NEW, MINUS_MINUS, PLUS_PLUS, '+', '-', SINGLE_CHARACTER, HEX_DIGITS_WITH_SUFFIX, DECIMAL_DIGITS, REGULAR_STRING_LITERAL, SIMPLE_ESCAPE_SEQUENCE, DECIMAL_DIGITS_WITH_SUFFIX, HEX_DIGITS, HEXADECIMAL_ESCAPE_SEQUENCE, '(', '!', '~', '{', '}', ';']
  207             | IF '(' boolean_expression ')' embedded_statement . ELSE embedded_statement

    ELSE  shift, and go to state 845

    ELSE      [reduce using rule 206 (if_statement)]
    $default  reduce using rule 206 (if_statement)


state 797

  254 lock_statement: LOCK '(' expression ')' embedded_statement .

    $default  reduce using rule 254 (lock_statement)


state 798

  209 switch_block: '{' . switch_sectionsopt '}'
  210 switch_sections: . switch_section
  211                | . switch_sections switch_section
  212 switch_section: . switch_labels statement_list
  213 switch_labels: . switch_label
  214              | . switch_labels switch_label
  215 switch_label: . CASE constant_expression ':'
  216             | . DEFAULT ':'
  635 switch_sectionsopt: .  ['}']
  636                   | . switch_sections

    CASE     shift, and go to state 846
    DEFAULT  shift, and go to state 847

    $default  reduce using rule 635 (switch_sectionsopt)

    switch_sections     go to state 848
    switch_section      go to state 849
    switch_labels       go to state 850
    switch_label        go to state 851
    switch_sectionsopt  go to state 852


state 799

  208 switch_statement: SWITCH '(' expression ')' switch_block .

    $default  reduce using rule 208 (switch_statement)


state 800

   35 class_type: type_name . OBJECT

    OBJECT  shift, and go to state 180


state 801

  249 specific_catch_clause: CATCH '(' class_type . identifieropt ')' block
  649 identifieropt: .  [')']
  650              | . IDENTIFIER

    IDENTIFIER  shift, and go to state 853

    $default  reduce using rule 649 (identifieropt)

    identifieropt  go to state 854


state 802

  251 finally_clause: FINALLY block .

    $default  reduce using rule 251 (finally_clause)


state 803

  250 general_catch_clause: CATCH block .

    $default  reduce using rule 250 (general_catch_clause)


state 804

  255 using_statement: USING '(' resource_acquisition ')' embedded_statement .

    $default  reduce using rule 255 (using_statement)


state 805

  221 while_statement: WHILE '(' boolean_expression ')' embedded_statement .

    $default  reduce using rule 221 (while_statement)


state 806

  508 primary_constraint: CLASS .

    $default  reduce using rule 508 (primary_constraint)


state 807

  509 primary_constraint: STRUCT .

    $default  reduce using rule 509 (primary_constraint)


state 808

  512 constructor_constraint: NEW . '(' ')'

    '('  shift, and go to state 855


state 809

   35 class_type: type_name . OBJECT
  510 secondary_constraints: type_name .  [WHERE, ',', '{', ';']

    OBJECT  shift, and go to state 180

    $default  reduce using rule 510 (secondary_constraints)


state 810

  507 primary_constraint: class_type .

    $default  reduce using rule 507 (primary_constraint)


state 811

  499 type_parameter_constraints_clause: WHERE IDENTIFIER ':' type_parameter_constraints .

    $default  reduce using rule 499 (type_parameter_constraints_clause)


state 812

  500 type_parameter_constraints: primary_constraint .  [WHERE, '{', ';']
  503                           | primary_constraint . ',' secondary_constraints
  504                           | primary_constraint . ',' constructor_constraint
  506                           | primary_constraint . ',' secondary_constraints ',' constructor_constraint

    ','  shift, and go to state 856

    $default  reduce using rule 500 (type_parameter_constraints)


state 813

  501 type_parameter_constraints: secondary_constraints .  [WHERE, '{', ';']
  505                           | secondary_constraints . ',' constructor_constraint
  511 secondary_constraints: secondary_constraints . ',' type_name

    ','  shift, and go to state 857

    $default  reduce using rule 501 (type_parameter_constraints)


state 814

  502 type_parameter_constraints: constructor_constraint .

    $default  reduce using rule 502 (type_parameter_constraints)


state 815

  303 class_member_declarations: class_member_declarations class_member_declaration .

    $default  reduce using rule 303 (class_member_declarations)


state 816

  332 method_body: ';' .

    $default  reduce using rule 332 (method_body)


state 817

  331 method_body: block .

    $default  reduce using rule 331 (method_body)


state 818

  326 method_declaration: method_header method_body .

    $default  reduce using rule 326 (method_declaration)


state 819

  283 modifiers_opt: .
  284              | . modifiers_opt modifier
  405 static_constructor_modifiers: STATIC . modifiers_opt

    $default  reduce using rule 283 (modifiers_opt)

    modifiers_opt  go to state 858


state 820

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  361 indexer_declarator: type . THIS '[' formal_parameter_list ']'
  362                   | type . type_name '.' THIS '[' formal_parameter_list ']'

    THIS        shift, and go to state 859
    IDENTIFIER  shift, and go to state 149

    type_name               go to state 860
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20


state 821

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  284 modifiers_opt: modifiers_opt . modifier
  285 modifier: . NEW
  286         | . PARTIAL
  287         | . PUBLIC
  288         | . PROTECTED
  289         | . INTERNAL
  290         | . PRIVATE
  291         | . STATIC
  292         | . VIRTUAL
  293         | . SEALED
  294         | . OVERRIDE
  295         | . ABSTRACT
  296         | . EXTERN
  297 class_declaration: attributesopt modifiers_opt . CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  315 constant_declaration: attributesopt modifiers_opt . CONST type constant_declarators ';'
  319 field_declaration: attributesopt modifiers_opt . type variable_declarators ';'
  327 method_header: attributesopt modifiers_opt . type member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  328              | attributesopt modifiers_opt . VOID member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  342 property_declaration: attributesopt modifiers_opt . type member_name '{' accessor_declarations '}'
  354 event_declaration: attributesopt modifiers_opt . EVENT type variable_declarators ';'
  355                  | attributesopt modifiers_opt . EVENT type member_name '{' event_accessor_declarations '}'
  363 operator_declaration: attributesopt modifiers_opt . operator_declarator operator_body
  364 operator_declarator: . unary_operator_declarator
  365                    | . binary_operator_declarator
  366                    | . conversion_operator_declarator
  367 unary_operator_declarator: . type OPERATOR overloadable_unary_operator '(' type IDENTIFIER ')'
  376 binary_operator_declarator: . type OPERATOR overloadable_binary_operator '(' type IDENTIFIER ',' type IDENTIFIER ')'
  393 conversion_operator_declarator: . IMPLICIT OPERATOR type '(' type IDENTIFIER ')'
  394                               | . EXPLICIT OPERATOR type '(' type IDENTIFIER ')'
  397 constructor_declaration: attributesopt modifiers_opt . constructor_declarator constructor_body
  398 constructor_declarator: . IDENTIFIER '(' formal_parameter_listopt ')' constructor_initializeropt
  404 static_constructor_modifiers: modifiers_opt . STATIC
  408 finalizer_declaration: attributesopt modifiers_opt . '~' IDENTIFIER '(' ')' finalizer_body
  411 struct_declaration: attributesopt modifiers_opt . STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  438 interface_declaration: attributesopt modifiers_opt . INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: attributesopt modifiers_opt . ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: attributesopt modifiers_opt . DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | attributesopt modifiers_opt . DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    ABSTRACT    shift, and go to state 281
    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    CLASS       shift, and go to state 282
    CONST       shift, and go to state 861
    DECIMAL     shift, and go to state 145
    DELEGATE    shift, and go to state 283
    DOUBLE      shift, and go to state 146
    ENUM        shift, and go to state 284
    EVENT       shift, and go to state 862
    EXPLICIT    shift, and go to state 863
    EXTERN      shift, and go to state 285
    FLOAT       shift, and go to state 147
    IMPLICIT    shift, and go to state 864
    INT         shift, and go to state 66
    INTERFACE   shift, and go to state 286
    INTERNAL    shift, and go to state 287
    LONG        shift, and go to state 70
    OVERRIDE    shift, and go to state 288
    PRIVATE     shift, and go to state 289
    PROTECTED   shift, and go to state 290
    PUBLIC      shift, and go to state 291
    SBYTE       shift, and go to state 84
    SEALED      shift, and go to state 292
    SHORT       shift, and go to state 86
    STATIC      shift, and go to state 865
    STRING      shift, and go to state 148
    STRUCT      shift, and go to state 294
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    VIRTUAL     shift, and go to state 295
    VOID        shift, and go to state 866
    PARTIAL     shift, and go to state 296
    IDENTIFIER  shift, and go to state 867
    NEW         shift, and go to state 297
    '~'         shift, and go to state 868

    type_name                       go to state 150
    namespace_or_type_name          go to state 122
    type                            go to state 869
    value_type                      go to state 152
    struct_type                     go to state 153
    simple_type                     go to state 154
    numeric_type                    go to state 155
    integral_type                   go to state 156
    floating_point_type             go to state 157
    nullable_type                   go to state 158
    non_nullable_value_type         go to state 159
    reference_type                  go to state 160
    class_type                      go to state 161
    qualified_alias_member          go to state 20
    modifier                        go to state 298
    operator_declarator             go to state 870
    unary_operator_declarator       go to state 871
    binary_operator_declarator      go to state 872
    conversion_operator_declarator  go to state 873
    constructor_declarator          go to state 874
    array_type                      go to state 162
    non_array_type                  go to state 163


state 822

  360 indexer_declaration: attributesopt indexer_declarator . '{' accessor_declarations '}'

    '{'  shift, and go to state 875


state 823

  403 static_constructor_declaration: attributesopt static_constructor_modifiers . IDENTIFIER '(' ')' static_constructor_body

    IDENTIFIER  shift, and go to state 876


state 824

  301 class_body: '{' class_member_declarationsopt '}' .

    $default  reduce using rule 301 (class_body)


state 825

  337 fixed_parameters: fixed_parameters ',' fixed_parameter .

    $default  reduce using rule 337 (fixed_parameters)


state 826

  334 formal_parameter_list: fixed_parameters ',' parameter_array .

    $default  reduce using rule 334 (formal_parameter_list)


state 827

   31 non_nullable_value_type: type_name .  ['?']
   35 class_type: type_name . OBJECT

    OBJECT  shift, and go to state 180

    $default  reduce using rule 31 (non_nullable_value_type)


state 828

  427 non_array_type: value_type .

    $default  reduce using rule 427 (non_array_type)


state 829

  428 non_array_type: class_type .

    $default  reduce using rule 428 (non_array_type)


state 830

  341 parameter_array: attributesopt PARAMS array_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 877


state 831

  338 fixed_parameter: attributesopt parameter_modifieropt type . IDENTIFIER

    IDENTIFIER  shift, and go to state 878


state 832

  465 delegate_declaration: attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt . ';'

    ';'  shift, and go to state 879


state 833

  464 delegate_declaration: attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt . ';'

    ';'  shift, and go to state 880


state 834

  463 enum_member_declaration: attributesopt IDENTIFIER '=' constant_expression .

    $default  reduce using rule 463 (enum_member_declaration)


state 835

  442 interface_member_declarations: interface_member_declarations interface_member_declaration .

    $default  reduce using rule 442 (interface_member_declarations)


state 836

  682 newopt: NEW .

    $default  reduce using rule 682 (newopt)


state 837

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  447 interface_method_declaration: attributesopt newopt . type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  448                             | attributesopt newopt . VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  449 interface_property_declaration: attributesopt newopt . type IDENTIFIER '{' interface_accessors '}'
  454 interface_event_declaration: attributesopt newopt . EVENT type IDENTIFIER ';'
  455 interface_indexer_declaration: attributesopt newopt . type THIS '[' formal_parameter_list ']' '{' interface_accessors '}'

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    EVENT       shift, and go to state 881
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    VOID        shift, and go to state 882
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 883
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 838

  440 interface_body: '{' interface_member_declarationsopt '}' .

    $default  reduce using rule 440 (interface_body)


state 839

  415 struct_member_declarations: struct_member_declarations struct_member_declaration .

    $default  reduce using rule 415 (struct_member_declarations)


state 840

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  284 modifiers_opt: modifiers_opt . modifier
  285 modifier: . NEW
  286         | . PARTIAL
  287         | . PUBLIC
  288         | . PROTECTED
  289         | . INTERNAL
  290         | . PRIVATE
  291         | . STATIC
  292         | . VIRTUAL
  293         | . SEALED
  294         | . OVERRIDE
  295         | . ABSTRACT
  296         | . EXTERN
  297 class_declaration: attributesopt modifiers_opt . CLASS IDENTIFIER type_parameter_listopt class_baseopt type_parameter_constraints_clausesopt class_body SemicolonOpt
  315 constant_declaration: attributesopt modifiers_opt . CONST type constant_declarators ';'
  319 field_declaration: attributesopt modifiers_opt . type variable_declarators ';'
  327 method_header: attributesopt modifiers_opt . type member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  328              | attributesopt modifiers_opt . VOID member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  342 property_declaration: attributesopt modifiers_opt . type member_name '{' accessor_declarations '}'
  354 event_declaration: attributesopt modifiers_opt . EVENT type variable_declarators ';'
  355                  | attributesopt modifiers_opt . EVENT type member_name '{' event_accessor_declarations '}'
  363 operator_declaration: attributesopt modifiers_opt . operator_declarator operator_body
  364 operator_declarator: . unary_operator_declarator
  365                    | . binary_operator_declarator
  366                    | . conversion_operator_declarator
  367 unary_operator_declarator: . type OPERATOR overloadable_unary_operator '(' type IDENTIFIER ')'
  376 binary_operator_declarator: . type OPERATOR overloadable_binary_operator '(' type IDENTIFIER ',' type IDENTIFIER ')'
  393 conversion_operator_declarator: . IMPLICIT OPERATOR type '(' type IDENTIFIER ')'
  394                               | . EXPLICIT OPERATOR type '(' type IDENTIFIER ')'
  397 constructor_declaration: attributesopt modifiers_opt . constructor_declarator constructor_body
  398 constructor_declarator: . IDENTIFIER '(' formal_parameter_listopt ')' constructor_initializeropt
  404 static_constructor_modifiers: modifiers_opt . STATIC
  411 struct_declaration: attributesopt modifiers_opt . STRUCT IDENTIFIER type_parameter_listopt struct_interfacesopt type_parameter_constraints_clausesopt struct_body SemicolonOpt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  438 interface_declaration: attributesopt modifiers_opt . INTERFACE IDENTIFIER type_parameter_listopt interface_baseopt type_parameter_constraints_clausesopt interface_body SemicolonOpt
  456 enum_declaration: attributesopt modifiers_opt . ENUM IDENTIFIER enum_baseopt enum_body SemicolonOpt
  464 delegate_declaration: attributesopt modifiers_opt . DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  465                     | attributesopt modifiers_opt . DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    ABSTRACT    shift, and go to state 281
    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    CLASS       shift, and go to state 282
    CONST       shift, and go to state 861
    DECIMAL     shift, and go to state 145
    DELEGATE    shift, and go to state 283
    DOUBLE      shift, and go to state 146
    ENUM        shift, and go to state 284
    EVENT       shift, and go to state 862
    EXPLICIT    shift, and go to state 863
    EXTERN      shift, and go to state 285
    FLOAT       shift, and go to state 147
    IMPLICIT    shift, and go to state 864
    INT         shift, and go to state 66
    INTERFACE   shift, and go to state 286
    INTERNAL    shift, and go to state 287
    LONG        shift, and go to state 70
    OVERRIDE    shift, and go to state 288
    PRIVATE     shift, and go to state 289
    PROTECTED   shift, and go to state 290
    PUBLIC      shift, and go to state 291
    SBYTE       shift, and go to state 84
    SEALED      shift, and go to state 292
    SHORT       shift, and go to state 86
    STATIC      shift, and go to state 865
    STRING      shift, and go to state 148
    STRUCT      shift, and go to state 294
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    VIRTUAL     shift, and go to state 295
    VOID        shift, and go to state 866
    PARTIAL     shift, and go to state 296
    IDENTIFIER  shift, and go to state 867
    NEW         shift, and go to state 297

    type_name                       go to state 150
    namespace_or_type_name          go to state 122
    type                            go to state 869
    value_type                      go to state 152
    struct_type                     go to state 153
    simple_type                     go to state 154
    numeric_type                    go to state 155
    integral_type                   go to state 156
    floating_point_type             go to state 157
    nullable_type                   go to state 158
    non_nullable_value_type         go to state 159
    reference_type                  go to state 160
    class_type                      go to state 161
    qualified_alias_member          go to state 20
    modifier                        go to state 298
    operator_declarator             go to state 870
    unary_operator_declarator       go to state 871
    binary_operator_declarator      go to state 872
    conversion_operator_declarator  go to state 873
    constructor_declarator          go to state 874
    array_type                      go to state 162
    non_array_type                  go to state 163


state 841

  413 struct_body: '{' struct_member_declarationsopt '}' .

    $default  reduce using rule 413 (struct_body)


state 842

  222 do_statement: DO embedded_statement WHILE '(' boolean_expression ')' . ';'

    ';'  shift, and go to state 884


state 843

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  223 for_statement: FOR '(' for_initializeropt ';' for_conditionopt ';' . for_iteratoropt ')' embedded_statement
  227 for_iterator: . statement_expression_list
  228 statement_expression_list: . statement_expression
  229                          | . statement_expression_list ',' statement_expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  641 for_iteratoropt: .  [')']
  642                | . for_iterator

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    $default  reduce using rule 641 (for_iteratoropt)

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    statement_expression                  go to state 653
    for_iterator                          go to state 885
    statement_expression_list             go to state 886
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    for_iteratoropt                       go to state 887


state 844

  230 foreach_statement: FOREACH '(' type IDENTIFIER IN expression . ')' embedded_statement

    ')'  shift, and go to state 888


state 845

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  181 empty_statement: . ';'
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  207             | IF '(' boolean_expression ')' embedded_statement ELSE . embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    embedded_statement                    go to state 889
    block                                 go to state 507
    empty_statement                       go to state 509
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 846

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  161 constant_expression: . expression
  215 switch_label: CASE . constant_expression ':'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 658
    constant_expression                   go to state 890
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 847

  216 switch_label: DEFAULT . ':'

    ':'  shift, and go to state 891


state 848

  211 switch_sections: switch_sections . switch_section
  212 switch_section: . switch_labels statement_list
  213 switch_labels: . switch_label
  214              | . switch_labels switch_label
  215 switch_label: . CASE constant_expression ':'
  216             | . DEFAULT ':'
  636 switch_sectionsopt: switch_sections .  ['}']

    CASE     shift, and go to state 846
    DEFAULT  shift, and go to state 847

    $default  reduce using rule 636 (switch_sectionsopt)

    switch_section  go to state 892
    switch_labels   go to state 850
    switch_label    go to state 851


state 849

  210 switch_sections: switch_section .

    $default  reduce using rule 210 (switch_sections)


state 850

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  163 statement: . labeled_statement
  164          | . declaration_statement
  165          | . embedded_statement
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  179 statement_list: . statement
  180               | . statement_list statement
  181 empty_statement: . ';'
  182 labeled_statement: . IDENTIFIER ':' statement
  183 declaration_statement: . local_variable_declaration ';'
  184                      | . local_constant_declaration ';'
  185 local_variable_declaration: . type local_variable_declarators
  192 local_constant_declaration: . CONST type constant_declarators_loc
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  212 switch_section: switch_labels . statement_list
  214 switch_labels: switch_labels . switch_label
  215 switch_label: . CASE constant_expression ':'
  216             | . DEFAULT ':'
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 324
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CASE                         shift, and go to state 846
    CHAR                         shift, and go to state 42
    CONST                        shift, and go to state 477
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 325
    DEFAULT                      shift, and go to state 893
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 326
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 327
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 328
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 492
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    type_name                             go to state 150
    namespace_or_type_name                go to state 122
    type                                  go to state 496
    value_type                            go to state 152
    struct_type                           go to state 153
    simple_type                           go to state 154
    numeric_type                          go to state 155
    integral_type                         go to state 331
    floating_point_type                   go to state 157
    nullable_type                         go to state 158
    non_nullable_value_type               go to state 159
    reference_type                        go to state 160
    class_type                            go to state 161
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    statement                             go to state 505
    embedded_statement                    go to state 506
    block                                 go to state 507
    statement_list                        go to state 894
    empty_statement                       go to state 509
    labeled_statement                     go to state 510
    declaration_statement                 go to state 511
    local_variable_declaration            go to state 512
    local_constant_declaration            go to state 513
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    switch_label                          go to state 895
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 333
    array_type                            go to state 162
    non_array_type                        go to state 163
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 851

  213 switch_labels: switch_label .

    $default  reduce using rule 213 (switch_labels)


state 852

  209 switch_block: '{' switch_sectionsopt . '}'

    '}'  shift, and go to state 896


state 853

  650 identifieropt: IDENTIFIER .

    $default  reduce using rule 650 (identifieropt)


state 854

  249 specific_catch_clause: CATCH '(' class_type identifieropt . ')' block

    ')'  shift, and go to state 897


state 855

  512 constructor_constraint: NEW '(' . ')'

    ')'  shift, and go to state 898


state 856

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  503 type_parameter_constraints: primary_constraint ',' . secondary_constraints
  504                           | primary_constraint ',' . constructor_constraint
  506                           | primary_constraint ',' . secondary_constraints ',' constructor_constraint
  510 secondary_constraints: . type_name
  511                      | . secondary_constraints ',' type_name
  512 constructor_constraint: . NEW '(' ')'

    IDENTIFIER  shift, and go to state 149
    NEW         shift, and go to state 808

    type_name               go to state 899
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20
    secondary_constraints   go to state 900
    constructor_constraint  go to state 901


state 857

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  505 type_parameter_constraints: secondary_constraints ',' . constructor_constraint
  511 secondary_constraints: secondary_constraints ',' . type_name
  512 constructor_constraint: . NEW '(' ')'

    IDENTIFIER  shift, and go to state 149
    NEW         shift, and go to state 808

    type_name               go to state 902
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20
    constructor_constraint  go to state 903


state 858

  284 modifiers_opt: modifiers_opt . modifier
  285 modifier: . NEW
  286         | . PARTIAL
  287         | . PUBLIC
  288         | . PROTECTED
  289         | . INTERNAL
  290         | . PRIVATE
  291         | . STATIC
  292         | . VIRTUAL
  293         | . SEALED
  294         | . OVERRIDE
  295         | . ABSTRACT
  296         | . EXTERN
  405 static_constructor_modifiers: STATIC modifiers_opt .  [IDENTIFIER]

    ABSTRACT   shift, and go to state 281
    EXTERN     shift, and go to state 285
    INTERNAL   shift, and go to state 287
    OVERRIDE   shift, and go to state 288
    PRIVATE    shift, and go to state 289
    PROTECTED  shift, and go to state 290
    PUBLIC     shift, and go to state 291
    SEALED     shift, and go to state 292
    STATIC     shift, and go to state 293
    VIRTUAL    shift, and go to state 295
    PARTIAL    shift, and go to state 296
    NEW        shift, and go to state 297

    $default  reduce using rule 405 (static_constructor_modifiers)

    modifier  go to state 298


state 859

  361 indexer_declarator: type THIS . '[' formal_parameter_list ']'

    '['  shift, and go to state 904


state 860

  362 indexer_declarator: type type_name . '.' THIS '[' formal_parameter_list ']'

    '.'  shift, and go to state 905


state 861

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  315 constant_declaration: attributesopt modifiers_opt CONST . type constant_declarators ';'
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 906
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 862

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  354 event_declaration: attributesopt modifiers_opt EVENT . type variable_declarators ';'
  355                  | attributesopt modifiers_opt EVENT . type member_name '{' event_accessor_declarations '}'
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 907
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 863

  394 conversion_operator_declarator: EXPLICIT . OPERATOR type '(' type IDENTIFIER ')'

    OPERATOR  shift, and go to state 908


state 864

  393 conversion_operator_declarator: IMPLICIT . OPERATOR type '(' type IDENTIFIER ')'

    OPERATOR  shift, and go to state 909


state 865

  291 modifier: STATIC .  [ABSTRACT, BOOL, BYTE, CHAR, CLASS, CONST, DECIMAL, DELEGATE, DOUBLE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT, IMPLICIT, INT, INTERFACE, INTERNAL, LONG, OVERRIDE, PRIVATE, PROTECTED, PUBLIC, SBYTE, SEALED, SHORT, STATIC, STRING, STRUCT, UINT, ULONG, USHORT, VIRTUAL, VOID, PARTIAL, IDENTIFIER, NEW, '~']
  404 static_constructor_modifiers: modifiers_opt STATIC .  [IDENTIFIER]

    IDENTIFIER  reduce using rule 291 (modifier)
    IDENTIFIER  [reduce using rule 404 (static_constructor_modifiers)]
    $default    reduce using rule 291 (modifier)


state 866

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  328 method_header: attributesopt modifiers_opt VOID . member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  329 member_name: . IDENTIFIER
  330            | . type_name '.' IDENTIFIER

    IDENTIFIER  shift, and go to state 910

    type_name               go to state 911
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20
    member_name             go to state 912


state 867

    5 namespace_or_type_name: IDENTIFIER . type_argument_listopt
  282 qualified_alias_member: IDENTIFIER . SEMI_SEMI IDENTIFIER type_argument_listopt
  398 constructor_declarator: IDENTIFIER . '(' formal_parameter_listopt ')' constructor_initializeropt
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  [OBJECT, OPERATOR, IDENTIFIER, '.', '?']
  614                      | . type_argument_list

    SEMI_SEMI  shift, and go to state 28
    '<'        shift, and go to state 29
    '('        shift, and go to state 913

    $default  reduce using rule 613 (type_argument_listopt)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 32


state 868

  408 finalizer_declaration: attributesopt modifiers_opt '~' . IDENTIFIER '(' ')' finalizer_body

    IDENTIFIER  shift, and go to state 914


state 869

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  319 field_declaration: attributesopt modifiers_opt type . variable_declarators ';'
  320 variable_declarators: . variable_declarator
  321                     | . variable_declarators ',' variable_declarator
  322 variable_declarator: . IDENTIFIER
  323                    | . IDENTIFIER '=' variable_initializer
  327 method_header: attributesopt modifiers_opt type . member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  329 member_name: . IDENTIFIER
  330            | . type_name '.' IDENTIFIER
  342 property_declaration: attributesopt modifiers_opt type . member_name '{' accessor_declarations '}'
  367 unary_operator_declarator: type . OPERATOR overloadable_unary_operator '(' type IDENTIFIER ')'
  376 binary_operator_declarator: type . OPERATOR overloadable_binary_operator '(' type IDENTIFIER ',' type IDENTIFIER ')'

    OPERATOR    shift, and go to state 915
    IDENTIFIER  shift, and go to state 916

    type_name               go to state 911
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20
    variable_declarators    go to state 917
    variable_declarator     go to state 918
    member_name             go to state 919


state 870

  178 block: . '{' statement_listopt '}'
  363 operator_declaration: attributesopt modifiers_opt operator_declarator . operator_body
  395 operator_body: . block
  396              | . ';'

    '{'  shift, and go to state 404
    ';'  shift, and go to state 920

    block          go to state 921
    operator_body  go to state 922


state 871

  364 operator_declarator: unary_operator_declarator .

    $default  reduce using rule 364 (operator_declarator)


state 872

  365 operator_declarator: binary_operator_declarator .

    $default  reduce using rule 365 (operator_declarator)


state 873

  366 operator_declarator: conversion_operator_declarator .

    $default  reduce using rule 366 (operator_declarator)


state 874

  178 block: . '{' statement_listopt '}'
  397 constructor_declaration: attributesopt modifiers_opt constructor_declarator . constructor_body
  401 constructor_body: . block
  402                 | . ';'

    '{'  shift, and go to state 404
    ';'  shift, and go to state 923

    block             go to state 924
    constructor_body  go to state 925


state 875

  343 accessor_declarations: . get_accessor_declaration set_accessor_declarationopt
  344                      | . set_accessor_declaration get_accessor_declarationopt
  345 get_accessor_declaration: . attributesopt accessor_modifieropt GET accessor_body
  346 set_accessor_declaration: . attributesopt accessor_modifieropt SET accessor_body
  360 indexer_declaration: attributesopt indexer_declarator '{' . accessor_declarations '}'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [INTERNAL, PRIVATE, PROTECTED, GET, SET]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    accessor_declarations     go to state 926
    get_accessor_declaration  go to state 927
    set_accessor_declaration  go to state 928
    attributes                go to state 23
    attribute_sections        go to state 24
    attribute_section         go to state 25
    attributesopt             go to state 929


state 876

  403 static_constructor_declaration: attributesopt static_constructor_modifiers IDENTIFIER . '(' ')' static_constructor_body

    '('  shift, and go to state 930


state 877

  341 parameter_array: attributesopt PARAMS array_type IDENTIFIER .

    $default  reduce using rule 341 (parameter_array)


state 878

  338 fixed_parameter: attributesopt parameter_modifieropt type IDENTIFIER .

    $default  reduce using rule 338 (fixed_parameter)


state 879

  465 delegate_declaration: attributesopt modifiers_opt DELEGATE VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';' .

    $default  reduce using rule 465 (delegate_declaration)


state 880

  464 delegate_declaration: attributesopt modifiers_opt DELEGATE type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';' .

    $default  reduce using rule 464 (delegate_declaration)


state 881

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  454 interface_event_declaration: attributesopt newopt EVENT . type IDENTIFIER ';'

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 931
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 882

  448 interface_method_declaration: attributesopt newopt VOID . IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    IDENTIFIER  shift, and go to state 932


state 883

  447 interface_method_declaration: attributesopt newopt type . IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  449 interface_property_declaration: attributesopt newopt type . IDENTIFIER '{' interface_accessors '}'
  455 interface_indexer_declaration: attributesopt newopt type . THIS '[' formal_parameter_list ']' '{' interface_accessors '}'

    THIS        shift, and go to state 933
    IDENTIFIER  shift, and go to state 934


state 884

  222 do_statement: DO embedded_statement WHILE '(' boolean_expression ')' ';' .

    $default  reduce using rule 222 (do_statement)


state 885

  642 for_iteratoropt: for_iterator .

    $default  reduce using rule 642 (for_iteratoropt)


state 886

  227 for_iterator: statement_expression_list .  [')']
  229 statement_expression_list: statement_expression_list . ',' statement_expression

    ','  shift, and go to state 715

    $default  reduce using rule 227 (for_iterator)


state 887

  223 for_statement: FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt . ')' embedded_statement

    ')'  shift, and go to state 935


state 888

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  181 empty_statement: . ';'
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  230                  | FOREACH '(' type IDENTIFIER IN expression ')' . embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    embedded_statement                    go to state 936
    block                                 go to state 507
    empty_statement                       go to state 509
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 889

  207 if_statement: IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement .

    $default  reduce using rule 207 (if_statement)


state 890

  215 switch_label: CASE constant_expression . ':'

    ':'  shift, and go to state 937


state 891

  216 switch_label: DEFAULT ':' .

    $default  reduce using rule 216 (switch_label)


state 892

  211 switch_sections: switch_sections switch_section .

    $default  reduce using rule 211 (switch_sections)


state 893

   96 default_value_expression: DEFAULT . '(' type ')'
  216 switch_label: DEFAULT . ':'

    '('  shift, and go to state 307
    ':'  shift, and go to state 891


state 894

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  163 statement: . labeled_statement
  164          | . declaration_statement
  165          | . embedded_statement
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  180 statement_list: statement_list . statement
  181 empty_statement: . ';'
  182 labeled_statement: . IDENTIFIER ':' statement
  183 declaration_statement: . local_variable_declaration ';'
  184                      | . local_constant_declaration ';'
  185 local_variable_declaration: . type local_variable_declarators
  192 local_constant_declaration: . CONST type constant_declarators_loc
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  212 switch_section: switch_labels statement_list .  [CASE, DEFAULT, '}']
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 324
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONST                        shift, and go to state 477
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 325
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 326
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 327
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 328
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 492
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    DEFAULT   [reduce using rule 212 (switch_section)]
    $default  reduce using rule 212 (switch_section)

    type_name                             go to state 150
    namespace_or_type_name                go to state 122
    type                                  go to state 496
    value_type                            go to state 152
    struct_type                           go to state 153
    simple_type                           go to state 154
    numeric_type                          go to state 155
    integral_type                         go to state 331
    floating_point_type                   go to state 157
    nullable_type                         go to state 158
    non_nullable_value_type               go to state 159
    reference_type                        go to state 160
    class_type                            go to state 161
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    statement                             go to state 613
    embedded_statement                    go to state 506
    block                                 go to state 507
    empty_statement                       go to state 509
    labeled_statement                     go to state 510
    declaration_statement                 go to state 511
    local_variable_declaration            go to state 512
    local_constant_declaration            go to state 513
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 333
    array_type                            go to state 162
    non_array_type                        go to state 163
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 895

  214 switch_labels: switch_labels switch_label .

    $default  reduce using rule 214 (switch_labels)


state 896

  209 switch_block: '{' switch_sectionsopt '}' .

    $default  reduce using rule 209 (switch_block)


state 897

  178 block: . '{' statement_listopt '}'
  249 specific_catch_clause: CATCH '(' class_type identifieropt ')' . block

    '{'  shift, and go to state 404

    block  go to state 938


state 898

  512 constructor_constraint: NEW '(' ')' .

    $default  reduce using rule 512 (constructor_constraint)


state 899

  510 secondary_constraints: type_name .

    $default  reduce using rule 510 (secondary_constraints)


state 900

  503 type_parameter_constraints: primary_constraint ',' secondary_constraints .  [WHERE, '{', ';']
  506                           | primary_constraint ',' secondary_constraints . ',' constructor_constraint
  511 secondary_constraints: secondary_constraints . ',' type_name

    ','  shift, and go to state 939

    $default  reduce using rule 503 (type_parameter_constraints)


state 901

  504 type_parameter_constraints: primary_constraint ',' constructor_constraint .

    $default  reduce using rule 504 (type_parameter_constraints)


state 902

  511 secondary_constraints: secondary_constraints ',' type_name .

    $default  reduce using rule 511 (secondary_constraints)


state 903

  505 type_parameter_constraints: secondary_constraints ',' constructor_constraint .

    $default  reduce using rule 505 (type_parameter_constraints)


state 904

  333 formal_parameter_list: . fixed_parameters
  334                      | . fixed_parameters ',' parameter_array
  335                      | . parameter_array
  336 fixed_parameters: . fixed_parameter
  337                 | . fixed_parameters ',' fixed_parameter
  338 fixed_parameter: . attributesopt parameter_modifieropt type IDENTIFIER
  341 parameter_array: . attributesopt PARAMS array_type IDENTIFIER
  361 indexer_declarator: type THIS '[' . formal_parameter_list ']'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, OUT, PARAMS, REF, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    formal_parameter_list  go to state 940
    fixed_parameters       go to state 699
    fixed_parameter        go to state 700
    parameter_array        go to state 701
    attributes             go to state 23
    attribute_sections     go to state 24
    attribute_section      go to state 25
    attributesopt          go to state 702


state 905

  362 indexer_declarator: type type_name '.' . THIS '[' formal_parameter_list ']'

    THIS  shift, and go to state 941


state 906

  315 constant_declaration: attributesopt modifiers_opt CONST type . constant_declarators ';'
  316 constant_declarators: . constant_declarator
  317                     | . constant_declarators ',' constant_declarator
  318 constant_declarator: . IDENTIFIER '=' constant_expression

    IDENTIFIER  shift, and go to state 942

    constant_declarators  go to state 943
    constant_declarator   go to state 944


state 907

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  320 variable_declarators: . variable_declarator
  321                     | . variable_declarators ',' variable_declarator
  322 variable_declarator: . IDENTIFIER
  323                    | . IDENTIFIER '=' variable_initializer
  329 member_name: . IDENTIFIER
  330            | . type_name '.' IDENTIFIER
  354 event_declaration: attributesopt modifiers_opt EVENT type . variable_declarators ';'
  355                  | attributesopt modifiers_opt EVENT type . member_name '{' event_accessor_declarations '}'

    IDENTIFIER  shift, and go to state 916

    type_name               go to state 911
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20
    variable_declarators    go to state 945
    variable_declarator     go to state 918
    member_name             go to state 946


state 908

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  394 conversion_operator_declarator: EXPLICIT OPERATOR . type '(' type IDENTIFIER ')'
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 947
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 909

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  393 conversion_operator_declarator: IMPLICIT OPERATOR . type '(' type IDENTIFIER ')'
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 948
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 910

    5 namespace_or_type_name: IDENTIFIER . type_argument_listopt
  282 qualified_alias_member: IDENTIFIER . SEMI_SEMI IDENTIFIER type_argument_listopt
  329 member_name: IDENTIFIER .  ['<', '(']
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  ['.']
  614                      | . type_argument_list

    SEMI_SEMI  shift, and go to state 28
    '<'        shift, and go to state 29

    '.'       reduce using rule 613 (type_argument_listopt)
    '<'       [reduce using rule 329 (member_name)]
    $default  reduce using rule 329 (member_name)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 32


state 911

  330 member_name: type_name . '.' IDENTIFIER

    '.'  shift, and go to state 949


state 912

  328 method_header: attributesopt modifiers_opt VOID member_name . type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  490 type_parameter_list: . '<' type_parameters '>'
  653 type_parameter_listopt: .  ['(']
  654                       | . type_parameter_list

    '<'  shift, and go to state 459

    $default  reduce using rule 653 (type_parameter_listopt)

    type_parameter_list     go to state 460
    type_parameter_listopt  go to state 950


state 913

  333 formal_parameter_list: . fixed_parameters
  334                      | . fixed_parameters ',' parameter_array
  335                      | . parameter_array
  336 fixed_parameters: . fixed_parameter
  337                 | . fixed_parameters ',' fixed_parameter
  338 fixed_parameter: . attributesopt parameter_modifieropt type IDENTIFIER
  341 parameter_array: . attributesopt PARAMS array_type IDENTIFIER
  398 constructor_declarator: IDENTIFIER '(' . formal_parameter_listopt ')' constructor_initializeropt
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, OUT, PARAMS, REF, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  652              | . attributes
  661 formal_parameter_listopt: .  [')']
  662                         | . formal_parameter_list

    '['  shift, and go to state 22

    ')'       reduce using rule 661 (formal_parameter_listopt)
    $default  reduce using rule 651 (attributesopt)

    formal_parameter_list     go to state 698
    fixed_parameters          go to state 699
    fixed_parameter           go to state 700
    parameter_array           go to state 701
    attributes                go to state 23
    attribute_sections        go to state 24
    attribute_section         go to state 25
    attributesopt             go to state 702
    formal_parameter_listopt  go to state 951


state 914

  408 finalizer_declaration: attributesopt modifiers_opt '~' IDENTIFIER . '(' ')' finalizer_body

    '('  shift, and go to state 952


state 915

  367 unary_operator_declarator: type OPERATOR . overloadable_unary_operator '(' type IDENTIFIER ')'
  368 overloadable_unary_operator: . '+'
  369                            | . '-'
  370                            | . '!'
  371                            | . '~'
  372                            | . PLUS_PLUS
  373                            | . MINUS_MINUS
  374                            | . TRUE
  375                            | . FALSE
  376 binary_operator_declarator: type OPERATOR . overloadable_binary_operator '(' type IDENTIFIER ',' type IDENTIFIER ')'
  377 overloadable_binary_operator: . '+'
  378                             | . '-'
  379                             | . '*'
  380                             | . '/'
  381                             | . '%'
  382                             | . '&'
  383                             | . '|'
  384                             | . '^'
  385                             | . LT_LT
  386                             | . RIGHT_SHIFT
  387                             | . EQ_EQ
  388                             | . NE
  389                             | . '>'
  390                             | . '<'
  391                             | . GE
  392                             | . LE

    FALSE        shift, and go to state 953
    TRUE         shift, and go to state 954
    LT_LT        shift, and go to state 955
    MINUS_MINUS  shift, and go to state 956
    PLUS_PLUS    shift, and go to state 957
    '*'          shift, and go to state 958
    '/'          shift, and go to state 959
    '%'          shift, and go to state 960
    '+'          shift, and go to state 961
    '-'          shift, and go to state 962
    RIGHT_SHIFT  shift, and go to state 963
    '<'          shift, and go to state 964
    '>'          shift, and go to state 965
    GE           shift, and go to state 966
    LE           shift, and go to state 967
    NE           shift, and go to state 968
    EQ_EQ        shift, and go to state 969
    '&'          shift, and go to state 970
    '^'          shift, and go to state 971
    '|'          shift, and go to state 972
    '!'          shift, and go to state 973
    '~'          shift, and go to state 974

    overloadable_unary_operator   go to state 975
    overloadable_binary_operator  go to state 976


state 916

    5 namespace_or_type_name: IDENTIFIER . type_argument_listopt
  282 qualified_alias_member: IDENTIFIER . SEMI_SEMI IDENTIFIER type_argument_listopt
  322 variable_declarator: IDENTIFIER .  [',', ';']
  323                    | IDENTIFIER . '=' variable_initializer
  329 member_name: IDENTIFIER .  ['<', '(', '{']
  493 type_argument_list: . '<' type_arguments '>'
  613 type_argument_listopt: .  ['.']
  614                      | . type_argument_list

    SEMI_SEMI  shift, and go to state 28
    '<'        shift, and go to state 29
    '='        shift, and go to state 977

    '.'       reduce using rule 613 (type_argument_listopt)
    '<'       [reduce using rule 329 (member_name)]
    '('       reduce using rule 329 (member_name)
    '{'       reduce using rule 329 (member_name)
    $default  reduce using rule 322 (variable_declarator)

    type_argument_list     go to state 31
    type_argument_listopt  go to state 32


state 917

  319 field_declaration: attributesopt modifiers_opt type variable_declarators . ';'
  321 variable_declarators: variable_declarators . ',' variable_declarator

    ','  shift, and go to state 978
    ';'  shift, and go to state 979


state 918

  320 variable_declarators: variable_declarator .

    $default  reduce using rule 320 (variable_declarators)


state 919

  327 method_header: attributesopt modifiers_opt type member_name . type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  342 property_declaration: attributesopt modifiers_opt type member_name . '{' accessor_declarations '}'
  490 type_parameter_list: . '<' type_parameters '>'
  653 type_parameter_listopt: .  ['(']
  654                       | . type_parameter_list

    '<'  shift, and go to state 459
    '{'  shift, and go to state 980

    $default  reduce using rule 653 (type_parameter_listopt)

    type_parameter_list     go to state 460
    type_parameter_listopt  go to state 981


state 920

  396 operator_body: ';' .

    $default  reduce using rule 396 (operator_body)


state 921

  395 operator_body: block .

    $default  reduce using rule 395 (operator_body)


state 922

  363 operator_declaration: attributesopt modifiers_opt operator_declarator operator_body .

    $default  reduce using rule 363 (operator_declaration)


state 923

  402 constructor_body: ';' .

    $default  reduce using rule 402 (constructor_body)


state 924

  401 constructor_body: block .

    $default  reduce using rule 401 (constructor_body)


state 925

  397 constructor_declaration: attributesopt modifiers_opt constructor_declarator constructor_body .

    $default  reduce using rule 397 (constructor_declaration)


state 926

  360 indexer_declaration: attributesopt indexer_declarator '{' accessor_declarations . '}'

    '}'  shift, and go to state 982


state 927

  343 accessor_declarations: get_accessor_declaration . set_accessor_declarationopt
  346 set_accessor_declaration: . attributesopt accessor_modifieropt SET accessor_body
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [INTERNAL, PRIVATE, PROTECTED, SET]
  652              | . attributes
  663 set_accessor_declarationopt: .  ['}']
  664                            | . set_accessor_declaration

    '['  shift, and go to state 22

    '}'       reduce using rule 663 (set_accessor_declarationopt)
    $default  reduce using rule 651 (attributesopt)

    set_accessor_declaration     go to state 983
    attributes                   go to state 23
    attribute_sections           go to state 24
    attribute_section            go to state 25
    attributesopt                go to state 984
    set_accessor_declarationopt  go to state 985


state 928

  344 accessor_declarations: set_accessor_declaration . get_accessor_declarationopt
  345 get_accessor_declaration: . attributesopt accessor_modifieropt GET accessor_body
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [INTERNAL, PRIVATE, PROTECTED, GET]
  652              | . attributes
  665 get_accessor_declarationopt: .  ['}']
  666                            | . get_accessor_declaration

    '['  shift, and go to state 22

    '}'       reduce using rule 665 (get_accessor_declarationopt)
    $default  reduce using rule 651 (attributesopt)

    get_accessor_declaration     go to state 986
    attributes                   go to state 23
    attribute_sections           go to state 24
    attribute_section            go to state 25
    attributesopt                go to state 987
    get_accessor_declarationopt  go to state 988


state 929

  345 get_accessor_declaration: attributesopt . accessor_modifieropt GET accessor_body
  346 set_accessor_declaration: attributesopt . accessor_modifieropt SET accessor_body
  347 accessor_modifier: . PROTECTED
  348                  | . INTERNAL
  349                  | . PRIVATE
  350                  | . PROTECTED INTERNAL
  351                  | . INTERNAL PROTECTED
  667 accessor_modifieropt: .  [GET, SET]
  668                     | . accessor_modifier

    INTERNAL   shift, and go to state 989
    PRIVATE    shift, and go to state 990
    PROTECTED  shift, and go to state 991

    $default  reduce using rule 667 (accessor_modifieropt)

    accessor_modifier     go to state 992
    accessor_modifieropt  go to state 993


state 930

  403 static_constructor_declaration: attributesopt static_constructor_modifiers IDENTIFIER '(' . ')' static_constructor_body

    ')'  shift, and go to state 994


state 931

  454 interface_event_declaration: attributesopt newopt EVENT type . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 995


state 932

  448 interface_method_declaration: attributesopt newopt VOID IDENTIFIER . type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  490 type_parameter_list: . '<' type_parameters '>'
  653 type_parameter_listopt: .  ['(']
  654                       | . type_parameter_list

    '<'  shift, and go to state 459

    $default  reduce using rule 653 (type_parameter_listopt)

    type_parameter_list     go to state 460
    type_parameter_listopt  go to state 996


state 933

  455 interface_indexer_declaration: attributesopt newopt type THIS . '[' formal_parameter_list ']' '{' interface_accessors '}'

    '['  shift, and go to state 997


state 934

  447 interface_method_declaration: attributesopt newopt type IDENTIFIER . type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  449 interface_property_declaration: attributesopt newopt type IDENTIFIER . '{' interface_accessors '}'
  490 type_parameter_list: . '<' type_parameters '>'
  653 type_parameter_listopt: .  ['(']
  654                       | . type_parameter_list

    '<'  shift, and go to state 459
    '{'  shift, and go to state 998

    $default  reduce using rule 653 (type_parameter_listopt)

    type_parameter_list     go to state 460
    type_parameter_listopt  go to state 999


state 935

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  147 assignment: . unary_expression assignment_operator expression
  166 embedded_statement: . block
  167                   | . empty_statement
  168                   | . expression_statement
  169                   | . selection_statement
  170                   | . iteration_statement
  171                   | . jump_statement
  172                   | . try_statement
  173                   | . checked_statement
  174                   | . unchecked_statement
  175                   | . lock_statement
  176                   | . using_statement
  177                   | . yield_statement
  178 block: . '{' statement_listopt '}'
  181 empty_statement: . ';'
  196 expression_statement: . statement_expression ';'
  197 statement_expression: . invocation_expression
  198                     | . object_creation_expression
  199                     | . assignment
  200                     | . post_increment_expression
  201                     | . post_decrement_expression
  202                     | . pre_increment_expression
  203                     | . pre_decrement_expression
  204 selection_statement: . if_statement
  205                    | . switch_statement
  206 if_statement: . IF '(' boolean_expression ')' embedded_statement
  207             | . IF '(' boolean_expression ')' embedded_statement ELSE embedded_statement
  208 switch_statement: . SWITCH '(' expression ')' switch_block
  217 iteration_statement: . while_statement
  218                    | . do_statement
  219                    | . for_statement
  220                    | . foreach_statement
  221 while_statement: . WHILE '(' boolean_expression ')' embedded_statement
  222 do_statement: . DO embedded_statement WHILE '(' boolean_expression ')' ';'
  223 for_statement: . FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement
  223              | FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' . embedded_statement
  230 foreach_statement: . FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement
  231 jump_statement: . break_statement
  232               | . continue_statement
  233               | . goto_statement
  234               | . return_statement
  235               | . throw_statement
  236 break_statement: . BREAK ';'
  237 continue_statement: . CONTINUE ';'
  238 goto_statement: . GOTO IDENTIFIER ';'
  239               | . GOTO CASE constant_expression ';'
  240               | . GOTO DEFAULT ';'
  241 return_statement: . RETURN expressionopt ';'
  242 throw_statement: . THROW expressionopt ';'
  243 try_statement: . TRY block catch_clauses
  244              | . TRY block catch_clausesopt finally_clause
  252 checked_statement: . CHECKED block
  253 unchecked_statement: . UNCHECKED block
  254 lock_statement: . LOCK '(' expression ')' embedded_statement
  255 using_statement: . USING '(' resource_acquisition ')' embedded_statement
  258 yield_statement: . YIELD RETURN expression ';'
  259                | . YIELD BREAK ';'
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BREAK                        shift, and go to state 476
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    CONTINUE                     shift, and go to state 478
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DO                           shift, and go to state 479
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    FOR                          shift, and go to state 480
    FOREACH                      shift, and go to state 481
    GOTO                         shift, and go to state 482
    IF                           shift, and go to state 483
    INT                          shift, and go to state 66
    LOCK                         shift, and go to state 484
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    RETURN                       shift, and go to state 485
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    SWITCH                       shift, and go to state 486
    THIS                         shift, and go to state 204
    THROW                        shift, and go to state 487
    TRUE                         shift, and go to state 205
    TRY                          shift, and go to state 488
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    USING                        shift, and go to state 489
    WHILE                        shift, and go to state 490
    YIELD                        shift, and go to state 491
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 493
    CHECKED                      shift, and go to state 494
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 404
    ';'                          shift, and go to state 495

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 497
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 498
    post_decrement_expression             go to state 499
    object_creation_expression            go to state 500
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 501
    pre_increment_expression              go to state 502
    pre_decrement_expression              go to state 503
    cast_expression                       go to state 249
    assignment                            go to state 504
    embedded_statement                    go to state 1000
    block                                 go to state 507
    empty_statement                       go to state 509
    expression_statement                  go to state 514
    statement_expression                  go to state 515
    selection_statement                   go to state 516
    if_statement                          go to state 517
    switch_statement                      go to state 518
    iteration_statement                   go to state 519
    while_statement                       go to state 520
    do_statement                          go to state 521
    for_statement                         go to state 522
    foreach_statement                     go to state 523
    jump_statement                        go to state 524
    break_statement                       go to state 525
    continue_statement                    go to state 526
    goto_statement                        go to state 527
    return_statement                      go to state 528
    throw_statement                       go to state 529
    try_statement                         go to state 530
    checked_statement                     go to state 531
    unchecked_statement                   go to state 532
    lock_statement                        go to state 533
    using_statement                       go to state 534
    yield_statement                       go to state 535
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 936

  230 foreach_statement: FOREACH '(' type IDENTIFIER IN expression ')' embedded_statement .

    $default  reduce using rule 230 (foreach_statement)


state 937

  215 switch_label: CASE constant_expression ':' .

    $default  reduce using rule 215 (switch_label)


state 938

  249 specific_catch_clause: CATCH '(' class_type identifieropt ')' block .

    $default  reduce using rule 249 (specific_catch_clause)


state 939

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  506 type_parameter_constraints: primary_constraint ',' secondary_constraints ',' . constructor_constraint
  511 secondary_constraints: secondary_constraints ',' . type_name
  512 constructor_constraint: . NEW '(' ')'

    IDENTIFIER  shift, and go to state 149
    NEW         shift, and go to state 808

    type_name               go to state 902
    namespace_or_type_name  go to state 122
    qualified_alias_member  go to state 20
    constructor_constraint  go to state 1001


state 940

  361 indexer_declarator: type THIS '[' formal_parameter_list . ']'

    ']'  shift, and go to state 1002


state 941

  362 indexer_declarator: type type_name '.' THIS . '[' formal_parameter_list ']'

    '['  shift, and go to state 1003


state 942

  318 constant_declarator: IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 1004


state 943

  315 constant_declaration: attributesopt modifiers_opt CONST type constant_declarators . ';'
  317 constant_declarators: constant_declarators . ',' constant_declarator

    ','  shift, and go to state 1005
    ';'  shift, and go to state 1006


state 944

  316 constant_declarators: constant_declarator .

    $default  reduce using rule 316 (constant_declarators)


state 945

  321 variable_declarators: variable_declarators . ',' variable_declarator
  354 event_declaration: attributesopt modifiers_opt EVENT type variable_declarators . ';'

    ','  shift, and go to state 978
    ';'  shift, and go to state 1007


state 946

  355 event_declaration: attributesopt modifiers_opt EVENT type member_name . '{' event_accessor_declarations '}'

    '{'  shift, and go to state 1008


state 947

  394 conversion_operator_declarator: EXPLICIT OPERATOR type . '(' type IDENTIFIER ')'

    '('  shift, and go to state 1009


state 948

  393 conversion_operator_declarator: IMPLICIT OPERATOR type . '(' type IDENTIFIER ')'

    '('  shift, and go to state 1010


state 949

  330 member_name: type_name '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 1011


state 950

  328 method_header: attributesopt modifiers_opt VOID member_name type_parameter_listopt . '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt

    '('  shift, and go to state 1012


state 951

  398 constructor_declarator: IDENTIFIER '(' formal_parameter_listopt . ')' constructor_initializeropt

    ')'  shift, and go to state 1013


state 952

  408 finalizer_declaration: attributesopt modifiers_opt '~' IDENTIFIER '(' . ')' finalizer_body

    ')'  shift, and go to state 1014


state 953

  375 overloadable_unary_operator: FALSE .

    $default  reduce using rule 375 (overloadable_unary_operator)


state 954

  374 overloadable_unary_operator: TRUE .

    $default  reduce using rule 374 (overloadable_unary_operator)


state 955

  385 overloadable_binary_operator: LT_LT .

    $default  reduce using rule 385 (overloadable_binary_operator)


state 956

  373 overloadable_unary_operator: MINUS_MINUS .

    $default  reduce using rule 373 (overloadable_unary_operator)


state 957

  372 overloadable_unary_operator: PLUS_PLUS .

    $default  reduce using rule 372 (overloadable_unary_operator)


state 958

  379 overloadable_binary_operator: '*' .

    $default  reduce using rule 379 (overloadable_binary_operator)


state 959

  380 overloadable_binary_operator: '/' .

    $default  reduce using rule 380 (overloadable_binary_operator)


state 960

  381 overloadable_binary_operator: '%' .

    $default  reduce using rule 381 (overloadable_binary_operator)


state 961

  368 overloadable_unary_operator: '+' .  ['(']
  377 overloadable_binary_operator: '+' .  ['(']

    '('       reduce using rule 368 (overloadable_unary_operator)
    '('       [reduce using rule 377 (overloadable_binary_operator)]
    $default  reduce using rule 368 (overloadable_unary_operator)


state 962

  369 overloadable_unary_operator: '-' .  ['(']
  378 overloadable_binary_operator: '-' .  ['(']

    '('       reduce using rule 369 (overloadable_unary_operator)
    '('       [reduce using rule 378 (overloadable_binary_operator)]
    $default  reduce using rule 369 (overloadable_unary_operator)


state 963

  386 overloadable_binary_operator: RIGHT_SHIFT .

    $default  reduce using rule 386 (overloadable_binary_operator)


state 964

  390 overloadable_binary_operator: '<' .

    $default  reduce using rule 390 (overloadable_binary_operator)


state 965

  389 overloadable_binary_operator: '>' .

    $default  reduce using rule 389 (overloadable_binary_operator)


state 966

  391 overloadable_binary_operator: GE .

    $default  reduce using rule 391 (overloadable_binary_operator)


state 967

  392 overloadable_binary_operator: LE .

    $default  reduce using rule 392 (overloadable_binary_operator)


state 968

  388 overloadable_binary_operator: NE .

    $default  reduce using rule 388 (overloadable_binary_operator)


state 969

  387 overloadable_binary_operator: EQ_EQ .

    $default  reduce using rule 387 (overloadable_binary_operator)


state 970

  382 overloadable_binary_operator: '&' .

    $default  reduce using rule 382 (overloadable_binary_operator)


state 971

  384 overloadable_binary_operator: '^' .

    $default  reduce using rule 384 (overloadable_binary_operator)


state 972

  383 overloadable_binary_operator: '|' .

    $default  reduce using rule 383 (overloadable_binary_operator)


state 973

  370 overloadable_unary_operator: '!' .

    $default  reduce using rule 370 (overloadable_unary_operator)


state 974

  371 overloadable_unary_operator: '~' .

    $default  reduce using rule 371 (overloadable_unary_operator)


state 975

  367 unary_operator_declarator: type OPERATOR overloadable_unary_operator . '(' type IDENTIFIER ')'

    '('  shift, and go to state 1015


state 976

  376 binary_operator_declarator: type OPERATOR overloadable_binary_operator . '(' type IDENTIFIER ',' type IDENTIFIER ')'

    '('  shift, and go to state 1016


state 977

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  323 variable_declarator: IDENTIFIER '=' . variable_initializer
  324 variable_initializer: . expression
  325                     | . array_initializer
  434 array_initializer: . '{' variable_initializer_listopt '}'
  435                  | . '{' variable_initializer_list ',' '}'
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225
    '{'                          shift, and go to state 414

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 548
    qualified_alias_member                go to state 264
    variable_initializer                  go to state 1017
    array_initializer                     go to state 550
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 978

  321 variable_declarators: variable_declarators ',' . variable_declarator
  322 variable_declarator: . IDENTIFIER
  323                    | . IDENTIFIER '=' variable_initializer

    IDENTIFIER  shift, and go to state 1018

    variable_declarator  go to state 1019


state 979

  319 field_declaration: attributesopt modifiers_opt type variable_declarators ';' .

    $default  reduce using rule 319 (field_declaration)


state 980

  342 property_declaration: attributesopt modifiers_opt type member_name '{' . accessor_declarations '}'
  343 accessor_declarations: . get_accessor_declaration set_accessor_declarationopt
  344                      | . set_accessor_declaration get_accessor_declarationopt
  345 get_accessor_declaration: . attributesopt accessor_modifieropt GET accessor_body
  346 set_accessor_declaration: . attributesopt accessor_modifieropt SET accessor_body
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [INTERNAL, PRIVATE, PROTECTED, GET, SET]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    accessor_declarations     go to state 1020
    get_accessor_declaration  go to state 927
    set_accessor_declaration  go to state 928
    attributes                go to state 23
    attribute_sections        go to state 24
    attribute_section         go to state 25
    attributesopt             go to state 929


state 981

  327 method_header: attributesopt modifiers_opt type member_name type_parameter_listopt . '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt

    '('  shift, and go to state 1021


state 982

  360 indexer_declaration: attributesopt indexer_declarator '{' accessor_declarations '}' .

    $default  reduce using rule 360 (indexer_declaration)


state 983

  664 set_accessor_declarationopt: set_accessor_declaration .

    $default  reduce using rule 664 (set_accessor_declarationopt)


state 984

  346 set_accessor_declaration: attributesopt . accessor_modifieropt SET accessor_body
  347 accessor_modifier: . PROTECTED
  348                  | . INTERNAL
  349                  | . PRIVATE
  350                  | . PROTECTED INTERNAL
  351                  | . INTERNAL PROTECTED
  667 accessor_modifieropt: .  [SET]
  668                     | . accessor_modifier

    INTERNAL   shift, and go to state 989
    PRIVATE    shift, and go to state 990
    PROTECTED  shift, and go to state 991

    $default  reduce using rule 667 (accessor_modifieropt)

    accessor_modifier     go to state 992
    accessor_modifieropt  go to state 1022


state 985

  343 accessor_declarations: get_accessor_declaration set_accessor_declarationopt .

    $default  reduce using rule 343 (accessor_declarations)


state 986

  666 get_accessor_declarationopt: get_accessor_declaration .

    $default  reduce using rule 666 (get_accessor_declarationopt)


state 987

  345 get_accessor_declaration: attributesopt . accessor_modifieropt GET accessor_body
  347 accessor_modifier: . PROTECTED
  348                  | . INTERNAL
  349                  | . PRIVATE
  350                  | . PROTECTED INTERNAL
  351                  | . INTERNAL PROTECTED
  667 accessor_modifieropt: .  [GET]
  668                     | . accessor_modifier

    INTERNAL   shift, and go to state 989
    PRIVATE    shift, and go to state 990
    PROTECTED  shift, and go to state 991

    $default  reduce using rule 667 (accessor_modifieropt)

    accessor_modifier     go to state 992
    accessor_modifieropt  go to state 1023


state 988

  344 accessor_declarations: set_accessor_declaration get_accessor_declarationopt .

    $default  reduce using rule 344 (accessor_declarations)


state 989

  348 accessor_modifier: INTERNAL .  [GET, SET]
  351                  | INTERNAL . PROTECTED

    PROTECTED  shift, and go to state 1024

    $default  reduce using rule 348 (accessor_modifier)


state 990

  349 accessor_modifier: PRIVATE .

    $default  reduce using rule 349 (accessor_modifier)


state 991

  347 accessor_modifier: PROTECTED .  [GET, SET]
  350                  | PROTECTED . INTERNAL

    INTERNAL  shift, and go to state 1025

    $default  reduce using rule 347 (accessor_modifier)


state 992

  668 accessor_modifieropt: accessor_modifier .

    $default  reduce using rule 668 (accessor_modifieropt)


state 993

  345 get_accessor_declaration: attributesopt accessor_modifieropt . GET accessor_body
  346 set_accessor_declaration: attributesopt accessor_modifieropt . SET accessor_body

    GET  shift, and go to state 1026
    SET  shift, and go to state 1027


state 994

  178 block: . '{' statement_listopt '}'
  403 static_constructor_declaration: attributesopt static_constructor_modifiers IDENTIFIER '(' ')' . static_constructor_body
  406 static_constructor_body: . block
  407                        | . ';'

    '{'  shift, and go to state 404
    ';'  shift, and go to state 1028

    block                    go to state 1029
    static_constructor_body  go to state 1030


state 995

  454 interface_event_declaration: attributesopt newopt EVENT type IDENTIFIER . ';'

    ';'  shift, and go to state 1031


state 996

  448 interface_method_declaration: attributesopt newopt VOID IDENTIFIER type_parameter_listopt . '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    '('  shift, and go to state 1032


state 997

  333 formal_parameter_list: . fixed_parameters
  334                      | . fixed_parameters ',' parameter_array
  335                      | . parameter_array
  336 fixed_parameters: . fixed_parameter
  337                 | . fixed_parameters ',' fixed_parameter
  338 fixed_parameter: . attributesopt parameter_modifieropt type IDENTIFIER
  341 parameter_array: . attributesopt PARAMS array_type IDENTIFIER
  455 interface_indexer_declaration: attributesopt newopt type THIS '[' . formal_parameter_list ']' '{' interface_accessors '}'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, OUT, PARAMS, REF, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    formal_parameter_list  go to state 1033
    fixed_parameters       go to state 699
    fixed_parameter        go to state 700
    parameter_array        go to state 701
    attributes             go to state 23
    attribute_sections     go to state 24
    attribute_section      go to state 25
    attributesopt          go to state 702


state 998

  449 interface_property_declaration: attributesopt newopt type IDENTIFIER '{' . interface_accessors '}'
  450 interface_accessors: . attributesopt GET ';'
  451                    | . attributesopt SET ';'
  452                    | . attributesopt GET ';' attributesopt SET ';'
  453                    | . attributesopt SET ';' attributesopt GET ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [GET, SET]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    interface_accessors  go to state 1034
    attributes           go to state 23
    attribute_sections   go to state 24
    attribute_section    go to state 25
    attributesopt        go to state 1035


state 999

  447 interface_method_declaration: attributesopt newopt type IDENTIFIER type_parameter_listopt . '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'

    '('  shift, and go to state 1036


state 1000

  223 for_statement: FOR '(' for_initializeropt ';' for_conditionopt ';' for_iteratoropt ')' embedded_statement .

    $default  reduce using rule 223 (for_statement)


state 1001

  506 type_parameter_constraints: primary_constraint ',' secondary_constraints ',' constructor_constraint .

    $default  reduce using rule 506 (type_parameter_constraints)


state 1002

  361 indexer_declarator: type THIS '[' formal_parameter_list ']' .

    $default  reduce using rule 361 (indexer_declarator)


state 1003

  333 formal_parameter_list: . fixed_parameters
  334                      | . fixed_parameters ',' parameter_array
  335                      | . parameter_array
  336 fixed_parameters: . fixed_parameter
  337                 | . fixed_parameters ',' fixed_parameter
  338 fixed_parameter: . attributesopt parameter_modifieropt type IDENTIFIER
  341 parameter_array: . attributesopt PARAMS array_type IDENTIFIER
  362 indexer_declarator: type type_name '.' THIS '[' . formal_parameter_list ']'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, OUT, PARAMS, REF, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    formal_parameter_list  go to state 1037
    fixed_parameters       go to state 699
    fixed_parameter        go to state 700
    parameter_array        go to state 701
    attributes             go to state 23
    attribute_sections     go to state 24
    attribute_section      go to state 25
    attributesopt          go to state 702


state 1004

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  161 constant_expression: . expression
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  318 constant_declarator: IDENTIFIER '=' . constant_expression
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    integral_type                         go to state 226
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 658
    constant_expression                   go to state 1038
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276


state 1005

  317 constant_declarators: constant_declarators ',' . constant_declarator
  318 constant_declarator: . IDENTIFIER '=' constant_expression

    IDENTIFIER  shift, and go to state 942

    constant_declarator  go to state 1039


state 1006

  315 constant_declaration: attributesopt modifiers_opt CONST type constant_declarators ';' .

    $default  reduce using rule 315 (constant_declaration)


state 1007

  354 event_declaration: attributesopt modifiers_opt EVENT type variable_declarators ';' .

    $default  reduce using rule 354 (event_declaration)


state 1008

  355 event_declaration: attributesopt modifiers_opt EVENT type member_name '{' . event_accessor_declarations '}'
  356 event_accessor_declarations: . add_accessor_declaration remove_accessor_declaration
  357                            | . remove_accessor_declaration add_accessor_declaration
  358 add_accessor_declaration: . attributesopt ADD block
  359 remove_accessor_declaration: . attributesopt REMOVE block
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [ADD, REMOVE]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    event_accessor_declarations  go to state 1040
    add_accessor_declaration     go to state 1041
    remove_accessor_declaration  go to state 1042
    attributes                   go to state 23
    attribute_sections           go to state 24
    attribute_section            go to state 25
    attributesopt                go to state 1043


state 1009

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  394 conversion_operator_declarator: EXPLICIT OPERATOR type '(' . type IDENTIFIER ')'
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 1044
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 1010

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  393 conversion_operator_declarator: IMPLICIT OPERATOR type '(' . type IDENTIFIER ')'
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 1045
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 1011

  330 member_name: type_name '.' IDENTIFIER .

    $default  reduce using rule 330 (member_name)


state 1012

  328 method_header: attributesopt modifiers_opt VOID member_name type_parameter_listopt '(' . formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  333 formal_parameter_list: . fixed_parameters
  334                      | . fixed_parameters ',' parameter_array
  335                      | . parameter_array
  336 fixed_parameters: . fixed_parameter
  337                 | . fixed_parameters ',' fixed_parameter
  338 fixed_parameter: . attributesopt parameter_modifieropt type IDENTIFIER
  341 parameter_array: . attributesopt PARAMS array_type IDENTIFIER
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, OUT, PARAMS, REF, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  652              | . attributes
  661 formal_parameter_listopt: .  [')']
  662                         | . formal_parameter_list

    '['  shift, and go to state 22

    ')'       reduce using rule 661 (formal_parameter_listopt)
    $default  reduce using rule 651 (attributesopt)

    formal_parameter_list     go to state 698
    fixed_parameters          go to state 699
    fixed_parameter           go to state 700
    parameter_array           go to state 701
    attributes                go to state 23
    attribute_sections        go to state 24
    attribute_section         go to state 25
    attributesopt             go to state 702
    formal_parameter_listopt  go to state 1046


state 1013

  398 constructor_declarator: IDENTIFIER '(' formal_parameter_listopt ')' . constructor_initializeropt
  399 constructor_initializer: . ':' BASE '(' argument_listopt ')'
  400                        | . ':' THIS '(' argument_listopt ')'
  669 constructor_initializeropt: .  ['{', ';']
  670                           | . constructor_initializer

    ':'  shift, and go to state 1047

    $default  reduce using rule 669 (constructor_initializeropt)

    constructor_initializer     go to state 1048
    constructor_initializeropt  go to state 1049


state 1014

  178 block: . '{' statement_listopt '}'
  408 finalizer_declaration: attributesopt modifiers_opt '~' IDENTIFIER '(' ')' . finalizer_body
  409 finalizer_body: . block
  410               | . ';'

    '{'  shift, and go to state 404
    ';'  shift, and go to state 1050

    block           go to state 1051
    finalizer_body  go to state 1052


state 1015

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  367 unary_operator_declarator: type OPERATOR overloadable_unary_operator '(' . type IDENTIFIER ')'
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 1053
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 1016

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  376 binary_operator_declarator: type OPERATOR overloadable_binary_operator '(' . type IDENTIFIER ',' type IDENTIFIER ')'
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 1054
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 1017

  323 variable_declarator: IDENTIFIER '=' variable_initializer .

    $default  reduce using rule 323 (variable_declarator)


state 1018

  322 variable_declarator: IDENTIFIER .  [',', ';']
  323                    | IDENTIFIER . '=' variable_initializer

    '='  shift, and go to state 977

    $default  reduce using rule 322 (variable_declarator)


state 1019

  321 variable_declarators: variable_declarators ',' variable_declarator .

    $default  reduce using rule 321 (variable_declarators)


state 1020

  342 property_declaration: attributesopt modifiers_opt type member_name '{' accessor_declarations . '}'

    '}'  shift, and go to state 1055


state 1021

  327 method_header: attributesopt modifiers_opt type member_name type_parameter_listopt '(' . formal_parameter_listopt ')' type_parameter_constraints_clausesopt
  333 formal_parameter_list: . fixed_parameters
  334                      | . fixed_parameters ',' parameter_array
  335                      | . parameter_array
  336 fixed_parameters: . fixed_parameter
  337                 | . fixed_parameters ',' fixed_parameter
  338 fixed_parameter: . attributesopt parameter_modifieropt type IDENTIFIER
  341 parameter_array: . attributesopt PARAMS array_type IDENTIFIER
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, OUT, PARAMS, REF, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  652              | . attributes
  661 formal_parameter_listopt: .  [')']
  662                         | . formal_parameter_list

    '['  shift, and go to state 22

    ')'       reduce using rule 661 (formal_parameter_listopt)
    $default  reduce using rule 651 (attributesopt)

    formal_parameter_list     go to state 698
    fixed_parameters          go to state 699
    fixed_parameter           go to state 700
    parameter_array           go to state 701
    attributes                go to state 23
    attribute_sections        go to state 24
    attribute_section         go to state 25
    attributesopt             go to state 702
    formal_parameter_listopt  go to state 1056


state 1022

  346 set_accessor_declaration: attributesopt accessor_modifieropt . SET accessor_body

    SET  shift, and go to state 1027


state 1023

  345 get_accessor_declaration: attributesopt accessor_modifieropt . GET accessor_body

    GET  shift, and go to state 1026


state 1024

  351 accessor_modifier: INTERNAL PROTECTED .

    $default  reduce using rule 351 (accessor_modifier)


state 1025

  350 accessor_modifier: PROTECTED INTERNAL .

    $default  reduce using rule 350 (accessor_modifier)


state 1026

  178 block: . '{' statement_listopt '}'
  345 get_accessor_declaration: attributesopt accessor_modifieropt GET . accessor_body
  352 accessor_body: . block
  353              | . ';'

    '{'  shift, and go to state 404
    ';'  shift, and go to state 1057

    block          go to state 1058
    accessor_body  go to state 1059


state 1027

  178 block: . '{' statement_listopt '}'
  346 set_accessor_declaration: attributesopt accessor_modifieropt SET . accessor_body
  352 accessor_body: . block
  353              | . ';'

    '{'  shift, and go to state 404
    ';'  shift, and go to state 1057

    block          go to state 1058
    accessor_body  go to state 1060


state 1028

  407 static_constructor_body: ';' .

    $default  reduce using rule 407 (static_constructor_body)


state 1029

  406 static_constructor_body: block .

    $default  reduce using rule 406 (static_constructor_body)


state 1030

  403 static_constructor_declaration: attributesopt static_constructor_modifiers IDENTIFIER '(' ')' static_constructor_body .

    $default  reduce using rule 403 (static_constructor_declaration)


state 1031

  454 interface_event_declaration: attributesopt newopt EVENT type IDENTIFIER ';' .

    $default  reduce using rule 454 (interface_event_declaration)


state 1032

  333 formal_parameter_list: . fixed_parameters
  334                      | . fixed_parameters ',' parameter_array
  335                      | . parameter_array
  336 fixed_parameters: . fixed_parameter
  337                 | . fixed_parameters ',' fixed_parameter
  338 fixed_parameter: . attributesopt parameter_modifieropt type IDENTIFIER
  341 parameter_array: . attributesopt PARAMS array_type IDENTIFIER
  448 interface_method_declaration: attributesopt newopt VOID IDENTIFIER type_parameter_listopt '(' . formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, OUT, PARAMS, REF, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  652              | . attributes
  661 formal_parameter_listopt: .  [')']
  662                         | . formal_parameter_list

    '['  shift, and go to state 22

    ')'       reduce using rule 661 (formal_parameter_listopt)
    $default  reduce using rule 651 (attributesopt)

    formal_parameter_list     go to state 698
    fixed_parameters          go to state 699
    fixed_parameter           go to state 700
    parameter_array           go to state 701
    attributes                go to state 23
    attribute_sections        go to state 24
    attribute_section         go to state 25
    attributesopt             go to state 702
    formal_parameter_listopt  go to state 1061


state 1033

  455 interface_indexer_declaration: attributesopt newopt type THIS '[' formal_parameter_list . ']' '{' interface_accessors '}'

    ']'  shift, and go to state 1062


state 1034

  449 interface_property_declaration: attributesopt newopt type IDENTIFIER '{' interface_accessors . '}'

    '}'  shift, and go to state 1063


state 1035

  450 interface_accessors: attributesopt . GET ';'
  451                    | attributesopt . SET ';'
  452                    | attributesopt . GET ';' attributesopt SET ';'
  453                    | attributesopt . SET ';' attributesopt GET ';'

    GET  shift, and go to state 1064
    SET  shift, and go to state 1065


state 1036

  333 formal_parameter_list: . fixed_parameters
  334                      | . fixed_parameters ',' parameter_array
  335                      | . parameter_array
  336 fixed_parameters: . fixed_parameter
  337                 | . fixed_parameters ',' fixed_parameter
  338 fixed_parameter: . attributesopt parameter_modifieropt type IDENTIFIER
  341 parameter_array: . attributesopt PARAMS array_type IDENTIFIER
  447 interface_method_declaration: attributesopt newopt type IDENTIFIER type_parameter_listopt '(' . formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [BOOL, BYTE, CHAR, DECIMAL, DOUBLE, FLOAT, INT, LONG, OUT, PARAMS, REF, SBYTE, SHORT, STRING, UINT, ULONG, USHORT, IDENTIFIER]
  652              | . attributes
  661 formal_parameter_listopt: .  [')']
  662                         | . formal_parameter_list

    '['  shift, and go to state 22

    ')'       reduce using rule 661 (formal_parameter_listopt)
    $default  reduce using rule 651 (attributesopt)

    formal_parameter_list     go to state 698
    fixed_parameters          go to state 699
    fixed_parameter           go to state 700
    parameter_array           go to state 701
    attributes                go to state 23
    attribute_sections        go to state 24
    attribute_section         go to state 25
    attributesopt             go to state 702
    formal_parameter_listopt  go to state 1066


state 1037

  362 indexer_declarator: type type_name '.' THIS '[' formal_parameter_list . ']'

    ']'  shift, and go to state 1067


state 1038

  318 constant_declarator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 318 (constant_declarator)


state 1039

  317 constant_declarators: constant_declarators ',' constant_declarator .

    $default  reduce using rule 317 (constant_declarators)


state 1040

  355 event_declaration: attributesopt modifiers_opt EVENT type member_name '{' event_accessor_declarations . '}'

    '}'  shift, and go to state 1068


state 1041

  356 event_accessor_declarations: add_accessor_declaration . remove_accessor_declaration
  359 remove_accessor_declaration: . attributesopt REMOVE block
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [REMOVE]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    remove_accessor_declaration  go to state 1069
    attributes                   go to state 23
    attribute_sections           go to state 24
    attribute_section            go to state 25
    attributesopt                go to state 1070


state 1042

  357 event_accessor_declarations: remove_accessor_declaration . add_accessor_declaration
  358 add_accessor_declaration: . attributesopt ADD block
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [ADD]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    add_accessor_declaration  go to state 1071
    attributes                go to state 23
    attribute_sections        go to state 24
    attribute_section         go to state 25
    attributesopt             go to state 1072


state 1043

  358 add_accessor_declaration: attributesopt . ADD block
  359 remove_accessor_declaration: attributesopt . REMOVE block

    ADD     shift, and go to state 1073
    REMOVE  shift, and go to state 1074


state 1044

  394 conversion_operator_declarator: EXPLICIT OPERATOR type '(' type . IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 1075


state 1045

  393 conversion_operator_declarator: IMPLICIT OPERATOR type '(' type . IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 1076


state 1046

  328 method_header: attributesopt modifiers_opt VOID member_name type_parameter_listopt '(' formal_parameter_listopt . ')' type_parameter_constraints_clausesopt

    ')'  shift, and go to state 1077


state 1047

  399 constructor_initializer: ':' . BASE '(' argument_listopt ')'
  400                        | ':' . THIS '(' argument_listopt ')'

    BASE  shift, and go to state 1078
    THIS  shift, and go to state 1079


state 1048

  670 constructor_initializeropt: constructor_initializer .

    $default  reduce using rule 670 (constructor_initializeropt)


state 1049

  398 constructor_declarator: IDENTIFIER '(' formal_parameter_listopt ')' constructor_initializeropt .

    $default  reduce using rule 398 (constructor_declarator)


state 1050

  410 finalizer_body: ';' .

    $default  reduce using rule 410 (finalizer_body)


state 1051

  409 finalizer_body: block .

    $default  reduce using rule 409 (finalizer_body)


state 1052

  408 finalizer_declaration: attributesopt modifiers_opt '~' IDENTIFIER '(' ')' finalizer_body .

    $default  reduce using rule 408 (finalizer_declaration)


state 1053

  367 unary_operator_declarator: type OPERATOR overloadable_unary_operator '(' type . IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 1080


state 1054

  376 binary_operator_declarator: type OPERATOR overloadable_binary_operator '(' type . IDENTIFIER ',' type IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 1081


state 1055

  342 property_declaration: attributesopt modifiers_opt type member_name '{' accessor_declarations '}' .

    $default  reduce using rule 342 (property_declaration)


state 1056

  327 method_header: attributesopt modifiers_opt type member_name type_parameter_listopt '(' formal_parameter_listopt . ')' type_parameter_constraints_clausesopt

    ')'  shift, and go to state 1082


state 1057

  353 accessor_body: ';' .

    $default  reduce using rule 353 (accessor_body)


state 1058

  352 accessor_body: block .

    $default  reduce using rule 352 (accessor_body)


state 1059

  345 get_accessor_declaration: attributesopt accessor_modifieropt GET accessor_body .

    $default  reduce using rule 345 (get_accessor_declaration)


state 1060

  346 set_accessor_declaration: attributesopt accessor_modifieropt SET accessor_body .

    $default  reduce using rule 346 (set_accessor_declaration)


state 1061

  448 interface_method_declaration: attributesopt newopt VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt . ')' type_parameter_constraints_clausesopt ';'

    ')'  shift, and go to state 1083


state 1062

  455 interface_indexer_declaration: attributesopt newopt type THIS '[' formal_parameter_list ']' . '{' interface_accessors '}'

    '{'  shift, and go to state 1084


state 1063

  449 interface_property_declaration: attributesopt newopt type IDENTIFIER '{' interface_accessors '}' .

    $default  reduce using rule 449 (interface_property_declaration)


state 1064

  450 interface_accessors: attributesopt GET . ';'
  452                    | attributesopt GET . ';' attributesopt SET ';'

    ';'  shift, and go to state 1085


state 1065

  451 interface_accessors: attributesopt SET . ';'
  453                    | attributesopt SET . ';' attributesopt GET ';'

    ';'  shift, and go to state 1086


state 1066

  447 interface_method_declaration: attributesopt newopt type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt . ')' type_parameter_constraints_clausesopt ';'

    ')'  shift, and go to state 1087


state 1067

  362 indexer_declarator: type type_name '.' THIS '[' formal_parameter_list ']' .

    $default  reduce using rule 362 (indexer_declarator)


state 1068

  355 event_declaration: attributesopt modifiers_opt EVENT type member_name '{' event_accessor_declarations '}' .

    $default  reduce using rule 355 (event_declaration)


state 1069

  356 event_accessor_declarations: add_accessor_declaration remove_accessor_declaration .

    $default  reduce using rule 356 (event_accessor_declarations)


state 1070

  359 remove_accessor_declaration: attributesopt . REMOVE block

    REMOVE  shift, and go to state 1074


state 1071

  357 event_accessor_declarations: remove_accessor_declaration add_accessor_declaration .

    $default  reduce using rule 357 (event_accessor_declarations)


state 1072

  358 add_accessor_declaration: attributesopt . ADD block

    ADD  shift, and go to state 1073


state 1073

  178 block: . '{' statement_listopt '}'
  358 add_accessor_declaration: attributesopt ADD . block

    '{'  shift, and go to state 404

    block  go to state 1088


state 1074

  178 block: . '{' statement_listopt '}'
  359 remove_accessor_declaration: attributesopt REMOVE . block

    '{'  shift, and go to state 404

    block  go to state 1089


state 1075

  394 conversion_operator_declarator: EXPLICIT OPERATOR type '(' type IDENTIFIER . ')'

    ')'  shift, and go to state 1090


state 1076

  393 conversion_operator_declarator: IMPLICIT OPERATOR type '(' type IDENTIFIER . ')'

    ')'  shift, and go to state 1091


state 1077

  328 method_header: attributesopt modifiers_opt VOID member_name type_parameter_listopt '(' formal_parameter_listopt ')' . type_parameter_constraints_clausesopt
  497 type_parameter_constraints_clauses: . type_parameter_constraints_clause
  498                                   | . type_parameter_constraints_clauses type_parameter_constraints_clause
  499 type_parameter_constraints_clause: . WHERE IDENTIFIER ':' type_parameter_constraints
  657 type_parameter_constraints_clausesopt: .  ['{', ';']
  658                                      | . type_parameter_constraints_clauses

    WHERE  shift, and go to state 635

    $default  reduce using rule 657 (type_parameter_constraints_clausesopt)

    type_parameter_constraints_clauses     go to state 636
    type_parameter_constraints_clause      go to state 637
    type_parameter_constraints_clausesopt  go to state 1092


state 1078

  399 constructor_initializer: ':' BASE . '(' argument_listopt ')'

    '('  shift, and go to state 1093


state 1079

  400 constructor_initializer: ':' THIS . '(' argument_listopt ')'

    '('  shift, and go to state 1094


state 1080

  367 unary_operator_declarator: type OPERATOR overloadable_unary_operator '(' type IDENTIFIER . ')'

    ')'  shift, and go to state 1095


state 1081

  376 binary_operator_declarator: type OPERATOR overloadable_binary_operator '(' type IDENTIFIER . ',' type IDENTIFIER ')'

    ','  shift, and go to state 1096


state 1082

  327 method_header: attributesopt modifiers_opt type member_name type_parameter_listopt '(' formal_parameter_listopt ')' . type_parameter_constraints_clausesopt
  497 type_parameter_constraints_clauses: . type_parameter_constraints_clause
  498                                   | . type_parameter_constraints_clauses type_parameter_constraints_clause
  499 type_parameter_constraints_clause: . WHERE IDENTIFIER ':' type_parameter_constraints
  657 type_parameter_constraints_clausesopt: .  ['{', ';']
  658                                      | . type_parameter_constraints_clauses

    WHERE  shift, and go to state 635

    $default  reduce using rule 657 (type_parameter_constraints_clausesopt)

    type_parameter_constraints_clauses     go to state 636
    type_parameter_constraints_clause      go to state 637
    type_parameter_constraints_clausesopt  go to state 1097


state 1083

  448 interface_method_declaration: attributesopt newopt VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' . type_parameter_constraints_clausesopt ';'
  497 type_parameter_constraints_clauses: . type_parameter_constraints_clause
  498                                   | . type_parameter_constraints_clauses type_parameter_constraints_clause
  499 type_parameter_constraints_clause: . WHERE IDENTIFIER ':' type_parameter_constraints
  657 type_parameter_constraints_clausesopt: .  [';']
  658                                      | . type_parameter_constraints_clauses

    WHERE  shift, and go to state 635

    $default  reduce using rule 657 (type_parameter_constraints_clausesopt)

    type_parameter_constraints_clauses     go to state 636
    type_parameter_constraints_clause      go to state 637
    type_parameter_constraints_clausesopt  go to state 1098


state 1084

  450 interface_accessors: . attributesopt GET ';'
  451                    | . attributesopt SET ';'
  452                    | . attributesopt GET ';' attributesopt SET ';'
  453                    | . attributesopt SET ';' attributesopt GET ';'
  455 interface_indexer_declaration: attributesopt newopt type THIS '[' formal_parameter_list ']' '{' . interface_accessors '}'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [GET, SET]
  652              | . attributes

    '['  shift, and go to state 22

    $default  reduce using rule 651 (attributesopt)

    interface_accessors  go to state 1099
    attributes           go to state 23
    attribute_sections   go to state 24
    attribute_section    go to state 25
    attributesopt        go to state 1035


state 1085

  450 interface_accessors: attributesopt GET ';' .  ['}']
  452                    | attributesopt GET ';' . attributesopt SET ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [SET]
  652              | . attributes

    '['  shift, and go to state 22

    SET       reduce using rule 651 (attributesopt)
    $default  reduce using rule 450 (interface_accessors)

    attributes          go to state 23
    attribute_sections  go to state 24
    attribute_section   go to state 25
    attributesopt       go to state 1100


state 1086

  451 interface_accessors: attributesopt SET ';' .  ['}']
  453                    | attributesopt SET ';' . attributesopt GET ';'
  466 attributes: . attribute_sections
  467 attribute_sections: . attribute_section
  468                   | . attribute_sections attribute_section
  469 attribute_section: . '[' attribute_target_specifier attribute_list ']'
  470                  | . '[' attribute_list ']'
  471                  | . '[' attribute_target_specifier attribute_list ',' ']'
  472                  | . '[' attribute_list ',' ']'
  651 attributesopt: .  [GET]
  652              | . attributes

    '['  shift, and go to state 22

    GET       reduce using rule 651 (attributesopt)
    $default  reduce using rule 451 (interface_accessors)

    attributes          go to state 23
    attribute_sections  go to state 24
    attribute_section   go to state 25
    attributesopt       go to state 1101


state 1087

  447 interface_method_declaration: attributesopt newopt type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' . type_parameter_constraints_clausesopt ';'
  497 type_parameter_constraints_clauses: . type_parameter_constraints_clause
  498                                   | . type_parameter_constraints_clauses type_parameter_constraints_clause
  499 type_parameter_constraints_clause: . WHERE IDENTIFIER ':' type_parameter_constraints
  657 type_parameter_constraints_clausesopt: .  [';']
  658                                      | . type_parameter_constraints_clauses

    WHERE  shift, and go to state 635

    $default  reduce using rule 657 (type_parameter_constraints_clausesopt)

    type_parameter_constraints_clauses     go to state 636
    type_parameter_constraints_clause      go to state 637
    type_parameter_constraints_clausesopt  go to state 1102


state 1088

  358 add_accessor_declaration: attributesopt ADD block .

    $default  reduce using rule 358 (add_accessor_declaration)


state 1089

  359 remove_accessor_declaration: attributesopt REMOVE block .

    $default  reduce using rule 359 (remove_accessor_declaration)


state 1090

  394 conversion_operator_declarator: EXPLICIT OPERATOR type '(' type IDENTIFIER ')' .

    $default  reduce using rule 394 (conversion_operator_declarator)


state 1091

  393 conversion_operator_declarator: IMPLICIT OPERATOR type '(' type IDENTIFIER ')' .

    $default  reduce using rule 393 (conversion_operator_declarator)


state 1092

  328 method_header: attributesopt modifiers_opt VOID member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt .

    $default  reduce using rule 328 (method_header)


state 1093

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   38 argument_list: . argument
   39              | . argument_list ',' argument
   40 argument: . expression
   41         | . REF variable_reference
   42         | . OUT variable_reference
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  399 constructor_initializer: ':' BASE '(' . argument_listopt ')'
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  617 argument_listopt: .  [')']
  618                 | . argument_list

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    OUT                          shift, and go to state 421
    REF                          shift, and go to state 422
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    $default  reduce using rule 617 (argument_listopt)

    integral_type                         go to state 226
    argument_list                         go to state 423
    argument                              go to state 424
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 425
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    argument_listopt                      go to state 1103


state 1094

   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   38 argument_list: . argument
   39              | . argument_list ',' argument
   40 argument: . expression
   41         | . REF variable_reference
   42         | . OUT variable_reference
   43 primary_expression: . array_creation_expression
   44                   | . primary_no_array_creation_expression
   45 primary_no_array_creation_expression: . literal
   46                                     | . simple_name
   47                                     | . parenthesized_expression
   48                                     | . member_access
   49                                     | . invocation_expression
   50                                     | . element_access
   51                                     | . this_access
   52                                     | . base_access
   53                                     | . post_increment_expression
   54                                     | . post_decrement_expression
   55                                     | . object_creation_expression
   56                                     | . typeof_expression
   57                                     | . checked_expression
   58                                     | . unchecked_expression
   59                                     | . default_value_expression
   60                                     | . anonymous_method_expression
   61 simple_name: . IDENTIFIER type_argument_listopt
   62 parenthesized_expression: . '(' expression ')'
   63 member_access: . primary_expression '.' IDENTIFIER type_argument_listopt
   64              | . predefined_type '.' IDENTIFIER type_argument_listopt
   65              | . qualified_alias_member '.' IDENTIFIER type_argument_listopt
   66 predefined_type: . BOOL
   67                | . DECIMAL
   68                | . DOUBLE
   69                | . FLOAT
   70                | . OBJECT
   71                | . STRING
   72                | . integral_type
   73 invocation_expression: . primary_expression '(' argument_listopt ')'
   74 element_access: . primary_no_array_creation_expression '[' expression_list ']'
   77 this_access: . THIS
   78 base_access: . BASE '.' IDENTIFIER type_argument_listopt
   79            | . BASE '[' expression_list ']'
   80 post_increment_expression: . primary_expression PLUS_PLUS
   81 post_decrement_expression: . primary_expression MINUS_MINUS
   82 object_creation_expression: . NEW type '(' argument_listopt ')'
   83 array_creation_expression: . NEW non_array_type '[' expression_list ']' rank_specifiersopt array_initializeropt
   84                          | . NEW array_type array_initializer
   85 typeof_expression: . TYPEOF '(' type ')'
   86                  | . TYPEOF '(' unbound_type_name ')'
   87                  | . TYPEOF '(' VOID ')'
   94 checked_expression: . CHECKED '(' expression ')'
   95 unchecked_expression: . UNCHECKED '(' expression ')'
   96 default_value_expression: . DEFAULT '(' type ')'
   97 anonymous_method_expression: . DELEGATE anonymous_method_signatureopt block
  102 unary_expression: . primary_expression
  103                 | . '+' unary_expression
  104                 | . '-' unary_expression
  105                 | . '!' unary_expression
  106                 | . '~' unary_expression
  107                 | . pre_increment_expression
  108                 | . pre_decrement_expression
  109                 | . cast_expression
  110 pre_increment_expression: . PLUS_PLUS unary_expression
  111 pre_decrement_expression: . MINUS_MINUS unary_expression
  112 cast_expression: . '(' type ')' unary_expression
  113 multiplicative_expression: . unary_expression
  114                          | . multiplicative_expression '*' unary_expression
  115                          | . multiplicative_expression '/' unary_expression
  116                          | . multiplicative_expression '%' unary_expression
  117 additive_expression: . multiplicative_expression
  118                    | . additive_expression '+' multiplicative_expression
  119                    | . additive_expression '-' multiplicative_expression
  120 shift_expression: . additive_expression
  121                 | . shift_expression LT_LT additive_expression
  122                 | . shift_expression RIGHT_SHIFT additive_expression
  123 relational_expression: . shift_expression
  124                      | . relational_expression '<' shift_expression
  125                      | . relational_expression '>' shift_expression
  126                      | . relational_expression LE shift_expression
  127                      | . relational_expression GE shift_expression
  128                      | . relational_expression IS type
  129                      | . relational_expression AS type
  130 equality_expression: . relational_expression
  131                    | . equality_expression EQ_EQ relational_expression
  132                    | . equality_expression NE relational_expression
  133 and_expression: . equality_expression
  134               | . and_expression '&' equality_expression
  135 exclusive_or_expression: . and_expression
  136                        | . exclusive_or_expression '^' and_expression
  137 inclusive_or_expression: . exclusive_or_expression
  138                        | . inclusive_or_expression '|' exclusive_or_expression
  139 conditional_and_expression: . inclusive_or_expression
  140                           | . conditional_and_expression AMP_AMP inclusive_or_expression
  141 conditional_or_expression: . conditional_and_expression
  142                          | . conditional_or_expression BAR_BAR conditional_and_expression
  143 null_coalescing_expression: . conditional_or_expression
  144                           | . conditional_or_expression QM_QM null_coalescing_expression
  145 conditional_expression: . null_coalescing_expression
  146                       | . null_coalescing_expression '?' expression ':' expression
  147 assignment: . unary_expression assignment_operator expression
  159 expression: . conditional_expression
  160           | . assignment
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  400 constructor_initializer: ':' THIS '(' . argument_listopt ')'
  590 literal: . boolean_literal
  591        | . integer_literal
  592        | . character_literal
  593        | . string_literal
  594        | . NULL
  595 boolean_literal: . TRUE
  596                | . FALSE
  597 integer_literal: . decimal_integer_literal
  598                | . hexadecimal_integer_literal
  599 decimal_integer_literal: . DECIMAL_DIGITS
  600                        | . DECIMAL_DIGITS_WITH_SUFFIX
  601 hexadecimal_integer_literal: . HEX_DIGITS
  602                            | . HEX_DIGITS_WITH_SUFFIX
  603 character_literal: . SINGLE_CHARACTER
  604                  | . SIMPLE_ESCAPE_SEQUENCE
  605                  | . HEXADECIMAL_ESCAPE_SEQUENCE
  606 string_literal: . REGULAR_STRING_LITERAL
  617 argument_listopt: .  [')']
  618                 | . argument_list

    BASE                         shift, and go to state 193
    BOOL                         shift, and go to state 194
    BYTE                         shift, and go to state 39
    CHAR                         shift, and go to state 42
    DECIMAL                      shift, and go to state 195
    DEFAULT                      shift, and go to state 196
    DELEGATE                     shift, and go to state 197
    DOUBLE                       shift, and go to state 198
    FALSE                        shift, and go to state 199
    FLOAT                        shift, and go to state 200
    INT                          shift, and go to state 66
    LONG                         shift, and go to state 70
    NULL                         shift, and go to state 201
    OBJECT                       shift, and go to state 202
    OUT                          shift, and go to state 421
    REF                          shift, and go to state 422
    SBYTE                        shift, and go to state 84
    SHORT                        shift, and go to state 86
    STRING                       shift, and go to state 203
    THIS                         shift, and go to state 204
    TRUE                         shift, and go to state 205
    UINT                         shift, and go to state 97
    ULONG                        shift, and go to state 98
    USHORT                       shift, and go to state 100
    IDENTIFIER                   shift, and go to state 319
    UNCHECKED                    shift, and go to state 207
    CHECKED                      shift, and go to state 208
    TYPEOF                       shift, and go to state 209
    NEW                          shift, and go to state 210
    MINUS_MINUS                  shift, and go to state 211
    PLUS_PLUS                    shift, and go to state 212
    '+'                          shift, and go to state 213
    '-'                          shift, and go to state 214
    SINGLE_CHARACTER             shift, and go to state 215
    HEX_DIGITS_WITH_SUFFIX       shift, and go to state 216
    DECIMAL_DIGITS               shift, and go to state 217
    REGULAR_STRING_LITERAL       shift, and go to state 218
    SIMPLE_ESCAPE_SEQUENCE       shift, and go to state 219
    DECIMAL_DIGITS_WITH_SUFFIX   shift, and go to state 220
    HEX_DIGITS                   shift, and go to state 221
    HEXADECIMAL_ESCAPE_SEQUENCE  shift, and go to state 222
    '('                          shift, and go to state 223
    '!'                          shift, and go to state 224
    '~'                          shift, and go to state 225

    $default  reduce using rule 617 (argument_listopt)

    integral_type                         go to state 226
    argument_list                         go to state 423
    argument                              go to state 424
    primary_expression                    go to state 227
    primary_no_array_creation_expression  go to state 228
    simple_name                           go to state 229
    parenthesized_expression              go to state 230
    member_access                         go to state 231
    predefined_type                       go to state 232
    invocation_expression                 go to state 233
    element_access                        go to state 234
    this_access                           go to state 235
    base_access                           go to state 236
    post_increment_expression             go to state 237
    post_decrement_expression             go to state 238
    object_creation_expression            go to state 239
    array_creation_expression             go to state 240
    typeof_expression                     go to state 241
    checked_expression                    go to state 242
    unchecked_expression                  go to state 243
    default_value_expression              go to state 244
    anonymous_method_expression           go to state 245
    unary_expression                      go to state 246
    pre_increment_expression              go to state 247
    pre_decrement_expression              go to state 248
    cast_expression                       go to state 249
    multiplicative_expression             go to state 250
    additive_expression                   go to state 251
    shift_expression                      go to state 252
    relational_expression                 go to state 253
    equality_expression                   go to state 254
    and_expression                        go to state 255
    exclusive_or_expression               go to state 256
    inclusive_or_expression               go to state 257
    conditional_and_expression            go to state 258
    conditional_or_expression             go to state 259
    null_coalescing_expression            go to state 260
    conditional_expression                go to state 261
    assignment                            go to state 262
    expression                            go to state 425
    qualified_alias_member                go to state 264
    literal                               go to state 270
    boolean_literal                       go to state 271
    integer_literal                       go to state 272
    decimal_integer_literal               go to state 273
    hexadecimal_integer_literal           go to state 274
    character_literal                     go to state 275
    string_literal                        go to state 276
    argument_listopt                      go to state 1104


state 1095

  367 unary_operator_declarator: type OPERATOR overloadable_unary_operator '(' type IDENTIFIER ')' .

    $default  reduce using rule 367 (unary_operator_declarator)


state 1096

    4 type_name: . namespace_or_type_name
    5 namespace_or_type_name: . IDENTIFIER type_argument_listopt
    6                       | . qualified_alias_member
    7                       | . namespace_or_type_name '.' IDENTIFIER type_argument_listopt
    8 type: . type_name
    9     | . value_type
   10     | . reference_type
   11 value_type: . struct_type
   12 struct_type: . simple_type
   13            | . nullable_type
   14 simple_type: . numeric_type
   15            | . BOOL
   16 numeric_type: . integral_type
   17             | . floating_point_type
   18             | . DECIMAL
   19 integral_type: . SBYTE
   20              | . BYTE
   21              | . SHORT
   22              | . USHORT
   23              | . INT
   24              | . UINT
   25              | . LONG
   26              | . ULONG
   27              | . CHAR
   28 floating_point_type: . FLOAT
   29                    | . DOUBLE
   30 nullable_type: . non_nullable_value_type '?'
   31 non_nullable_value_type: . type_name
   32                        | . simple_type
   33 reference_type: . class_type
   34               | . array_type
   35 class_type: . type_name OBJECT
   36           | . STRING
  282 qualified_alias_member: . IDENTIFIER SEMI_SEMI IDENTIFIER type_argument_listopt
  376 binary_operator_declarator: type OPERATOR overloadable_binary_operator '(' type IDENTIFIER ',' . type IDENTIFIER ')'
  426 array_type: . non_array_type rank_specifiers
  427 non_array_type: . value_type
  428               | . class_type

    BOOL        shift, and go to state 144
    BYTE        shift, and go to state 39
    CHAR        shift, and go to state 42
    DECIMAL     shift, and go to state 145
    DOUBLE      shift, and go to state 146
    FLOAT       shift, and go to state 147
    INT         shift, and go to state 66
    LONG        shift, and go to state 70
    SBYTE       shift, and go to state 84
    SHORT       shift, and go to state 86
    STRING      shift, and go to state 148
    UINT        shift, and go to state 97
    ULONG       shift, and go to state 98
    USHORT      shift, and go to state 100
    IDENTIFIER  shift, and go to state 149

    type_name                go to state 150
    namespace_or_type_name   go to state 122
    type                     go to state 1105
    value_type               go to state 152
    struct_type              go to state 153
    simple_type              go to state 154
    numeric_type             go to state 155
    integral_type            go to state 156
    floating_point_type      go to state 157
    nullable_type            go to state 158
    non_nullable_value_type  go to state 159
    reference_type           go to state 160
    class_type               go to state 161
    qualified_alias_member   go to state 20
    array_type               go to state 162
    non_array_type           go to state 163


state 1097

  327 method_header: attributesopt modifiers_opt type member_name type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt .

    $default  reduce using rule 327 (method_header)


state 1098

  448 interface_method_declaration: attributesopt newopt VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt . ';'

    ';'  shift, and go to state 1106


state 1099

  455 interface_indexer_declaration: attributesopt newopt type THIS '[' formal_parameter_list ']' '{' interface_accessors . '}'

    '}'  shift, and go to state 1107


state 1100

  452 interface_accessors: attributesopt GET ';' attributesopt . SET ';'

    SET  shift, and go to state 1108


state 1101

  453 interface_accessors: attributesopt SET ';' attributesopt . GET ';'

    GET  shift, and go to state 1109


state 1102

  447 interface_method_declaration: attributesopt newopt type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt . ';'

    ';'  shift, and go to state 1110


state 1103

  399 constructor_initializer: ':' BASE '(' argument_listopt . ')'

    ')'  shift, and go to state 1111


state 1104

  400 constructor_initializer: ':' THIS '(' argument_listopt . ')'

    ')'  shift, and go to state 1112


state 1105

  376 binary_operator_declarator: type OPERATOR overloadable_binary_operator '(' type IDENTIFIER ',' type . IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 1113


state 1106

  448 interface_method_declaration: attributesopt newopt VOID IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';' .

    $default  reduce using rule 448 (interface_method_declaration)


state 1107

  455 interface_indexer_declaration: attributesopt newopt type THIS '[' formal_parameter_list ']' '{' interface_accessors '}' .

    $default  reduce using rule 455 (interface_indexer_declaration)


state 1108

  452 interface_accessors: attributesopt GET ';' attributesopt SET . ';'

    ';'  shift, and go to state 1114


state 1109

  453 interface_accessors: attributesopt SET ';' attributesopt GET . ';'

    ';'  shift, and go to state 1115


state 1110

  447 interface_method_declaration: attributesopt newopt type IDENTIFIER type_parameter_listopt '(' formal_parameter_listopt ')' type_parameter_constraints_clausesopt ';' .

    $default  reduce using rule 447 (interface_method_declaration)


state 1111

  399 constructor_initializer: ':' BASE '(' argument_listopt ')' .

    $default  reduce using rule 399 (constructor_initializer)


state 1112

  400 constructor_initializer: ':' THIS '(' argument_listopt ')' .

    $default  reduce using rule 400 (constructor_initializer)


state 1113

  376 binary_operator_declarator: type OPERATOR overloadable_binary_operator '(' type IDENTIFIER ',' type IDENTIFIER . ')'

    ')'  shift, and go to state 1116


state 1114

  452 interface_accessors: attributesopt GET ';' attributesopt SET ';' .

    $default  reduce using rule 452 (interface_accessors)


state 1115

  453 interface_accessors: attributesopt SET ';' attributesopt GET ';' .

    $default  reduce using rule 453 (interface_accessors)


state 1116

  376 binary_operator_declarator: type OPERATOR overloadable_binary_operator '(' type IDENTIFIER ',' type IDENTIFIER ')' .

    $default  reduce using rule 376 (binary_operator_declarator)
